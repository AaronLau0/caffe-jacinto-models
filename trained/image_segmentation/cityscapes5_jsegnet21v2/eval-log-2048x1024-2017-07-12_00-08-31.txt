Logging output to training/train-log-2017-07-12_00-08-31.txt
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:08:32.692294 13823 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt
I0712 00:08:32.692322 13823 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:08:32.692324 13823 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:08:32.692587 13823 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 1024
      dim: 2048
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:08:32.692685 13823 layer_factory.hpp:77] Creating layer input
I0712 00:08:32.692694 13823 net.cpp:98] Creating Layer input
I0712 00:08:32.692697 13823 net.cpp:413] input -> data
I0712 00:08:32.693696 13823 net.cpp:148] Setting up input
I0712 00:08:32.693706 13823 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:08:32.693707 13823 net.cpp:163] Memory required for data: 25165824
I0712 00:08:32.693711 13823 layer_factory.hpp:77] Creating layer data/bias
I0712 00:08:32.693719 13823 net.cpp:98] Creating Layer data/bias
I0712 00:08:32.693722 13823 net.cpp:439] data/bias <- data
I0712 00:08:32.693724 13823 net.cpp:413] data/bias -> data/bias
I0712 00:08:32.696777 13823 net.cpp:148] Setting up data/bias
I0712 00:08:32.696799 13823 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:08:32.696801 13823 net.cpp:163] Memory required for data: 50331648
I0712 00:08:32.696812 13823 layer_factory.hpp:77] Creating layer conv1a
I0712 00:08:32.696836 13823 net.cpp:98] Creating Layer conv1a
I0712 00:08:32.696841 13823 net.cpp:439] conv1a <- data/bias
I0712 00:08:32.696843 13823 net.cpp:413] conv1a -> conv1a
I0712 00:08:32.699414 13823 net.cpp:148] Setting up conv1a
I0712 00:08:32.699424 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.699426 13823 net.cpp:163] Memory required for data: 117440512
I0712 00:08:32.699432 13823 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:08:32.699437 13823 net.cpp:98] Creating Layer conv1a/bn
I0712 00:08:32.699440 13823 net.cpp:439] conv1a/bn <- conv1a
I0712 00:08:32.699442 13823 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:08:32.701151 13823 net.cpp:148] Setting up conv1a/bn
I0712 00:08:32.701161 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.701164 13823 net.cpp:163] Memory required for data: 184549376
I0712 00:08:32.701169 13823 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:08:32.701174 13823 net.cpp:98] Creating Layer conv1a/relu
I0712 00:08:32.701176 13823 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:08:32.701179 13823 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:08:32.701189 13823 net.cpp:148] Setting up conv1a/relu
I0712 00:08:32.701190 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.701192 13823 net.cpp:163] Memory required for data: 251658240
I0712 00:08:32.701195 13823 layer_factory.hpp:77] Creating layer conv1b
I0712 00:08:32.701198 13823 net.cpp:98] Creating Layer conv1b
I0712 00:08:32.701201 13823 net.cpp:439] conv1b <- conv1a/bn
I0712 00:08:32.701205 13823 net.cpp:413] conv1b -> conv1b
I0712 00:08:32.702553 13823 net.cpp:148] Setting up conv1b
I0712 00:08:32.702563 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.702564 13823 net.cpp:163] Memory required for data: 318767104
I0712 00:08:32.702569 13823 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:08:32.702576 13823 net.cpp:98] Creating Layer conv1b/bn
I0712 00:08:32.702579 13823 net.cpp:439] conv1b/bn <- conv1b
I0712 00:08:32.702580 13823 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:08:32.704340 13823 net.cpp:148] Setting up conv1b/bn
I0712 00:08:32.704351 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.704354 13823 net.cpp:163] Memory required for data: 385875968
I0712 00:08:32.704360 13823 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:08:32.704365 13823 net.cpp:98] Creating Layer conv1b/relu
I0712 00:08:32.704366 13823 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:08:32.704370 13823 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:08:32.704373 13823 net.cpp:148] Setting up conv1b/relu
I0712 00:08:32.704375 13823 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:08:32.704377 13823 net.cpp:163] Memory required for data: 452984832
I0712 00:08:32.704380 13823 layer_factory.hpp:77] Creating layer pool1
I0712 00:08:32.704383 13823 net.cpp:98] Creating Layer pool1
I0712 00:08:32.704385 13823 net.cpp:439] pool1 <- conv1b/bn
I0712 00:08:32.704386 13823 net.cpp:413] pool1 -> pool1
I0712 00:08:32.704426 13823 net.cpp:148] Setting up pool1
I0712 00:08:32.704430 13823 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:08:32.704432 13823 net.cpp:163] Memory required for data: 469762048
I0712 00:08:32.704433 13823 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:08:32.704438 13823 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:08:32.704440 13823 net.cpp:439] res2a_branch2a <- pool1
I0712 00:08:32.704442 13823 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:08:32.706820 13823 net.cpp:148] Setting up res2a_branch2a
I0712 00:08:32.706830 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.706832 13823 net.cpp:163] Memory required for data: 503316480
I0712 00:08:32.706837 13823 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:08:32.706843 13823 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:08:32.706846 13823 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:08:32.706849 13823 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:08:32.707564 13823 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:08:32.707571 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.707572 13823 net.cpp:163] Memory required for data: 536870912
I0712 00:08:32.707577 13823 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:08:32.707581 13823 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:08:32.707582 13823 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:08:32.707584 13823 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:08:32.707588 13823 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:08:32.707590 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.707592 13823 net.cpp:163] Memory required for data: 570425344
I0712 00:08:32.707593 13823 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:08:32.707597 13823 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:08:32.707599 13823 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:08:32.707602 13823 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:08:32.708981 13823 net.cpp:148] Setting up res2a_branch2b
I0712 00:08:32.708991 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.708992 13823 net.cpp:163] Memory required for data: 603979776
I0712 00:08:32.708995 13823 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:08:32.709000 13823 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:08:32.709002 13823 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:08:32.709005 13823 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:08:32.709714 13823 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:08:32.709720 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.709722 13823 net.cpp:163] Memory required for data: 637534208
I0712 00:08:32.709728 13823 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:08:32.709730 13823 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:08:32.709733 13823 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:08:32.709734 13823 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:08:32.709738 13823 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:08:32.709739 13823 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:08:32.709741 13823 net.cpp:163] Memory required for data: 671088640
I0712 00:08:32.709743 13823 layer_factory.hpp:77] Creating layer pool2
I0712 00:08:32.709746 13823 net.cpp:98] Creating Layer pool2
I0712 00:08:32.709748 13823 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:08:32.709749 13823 net.cpp:413] pool2 -> pool2
I0712 00:08:32.709781 13823 net.cpp:148] Setting up pool2
I0712 00:08:32.709785 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.709787 13823 net.cpp:163] Memory required for data: 679477248
I0712 00:08:32.709789 13823 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:08:32.709794 13823 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:08:32.709795 13823 net.cpp:439] res3a_branch2a <- pool2
I0712 00:08:32.709797 13823 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:08:32.712378 13823 net.cpp:148] Setting up res3a_branch2a
I0712 00:08:32.712385 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.712388 13823 net.cpp:163] Memory required for data: 696254464
I0712 00:08:32.712391 13823 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:08:32.712395 13823 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:08:32.712397 13823 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:08:32.712399 13823 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:08:32.713037 13823 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:08:32.713043 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.713045 13823 net.cpp:163] Memory required for data: 713031680
I0712 00:08:32.713052 13823 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:08:32.713054 13823 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:08:32.713057 13823 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:08:32.713058 13823 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:08:32.713063 13823 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:08:32.713065 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.713068 13823 net.cpp:163] Memory required for data: 729808896
I0712 00:08:32.713069 13823 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:08:32.713073 13823 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:08:32.713074 13823 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:08:32.713078 13823 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:08:32.714081 13823 net.cpp:148] Setting up res3a_branch2b
I0712 00:08:32.714085 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.714087 13823 net.cpp:163] Memory required for data: 746586112
I0712 00:08:32.714090 13823 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:08:32.714093 13823 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:08:32.714095 13823 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:08:32.714097 13823 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:08:32.714714 13823 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:08:32.714718 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.714720 13823 net.cpp:163] Memory required for data: 763363328
I0712 00:08:32.714725 13823 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:08:32.714727 13823 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:08:32.714730 13823 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:08:32.714731 13823 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:08:32.714735 13823 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:08:32.714736 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.714738 13823 net.cpp:163] Memory required for data: 780140544
I0712 00:08:32.714740 13823 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:08:32.714742 13823 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:08:32.714745 13823 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:08:32.714746 13823 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:08:32.714749 13823 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:08:32.714781 13823 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:08:32.714787 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.714788 13823 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:08:32.714789 13823 net.cpp:163] Memory required for data: 813694976
I0712 00:08:32.714792 13823 layer_factory.hpp:77] Creating layer pool3
I0712 00:08:32.714794 13823 net.cpp:98] Creating Layer pool3
I0712 00:08:32.714797 13823 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:08:32.714799 13823 net.cpp:413] pool3 -> pool3
I0712 00:08:32.714833 13823 net.cpp:148] Setting up pool3
I0712 00:08:32.714838 13823 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:08:32.714838 13823 net.cpp:163] Memory required for data: 817889280
I0712 00:08:32.714840 13823 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:08:32.714845 13823 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:08:32.714848 13823 net.cpp:439] res4a_branch2a <- pool3
I0712 00:08:32.714850 13823 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:08:32.720993 13823 net.cpp:148] Setting up res4a_branch2a
I0712 00:08:32.721012 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.721014 13823 net.cpp:163] Memory required for data: 826277888
I0712 00:08:32.721020 13823 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:08:32.721027 13823 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:08:32.721029 13823 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:08:32.721034 13823 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:08:32.721700 13823 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:08:32.721709 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.721711 13823 net.cpp:163] Memory required for data: 834666496
I0712 00:08:32.721716 13823 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:08:32.721719 13823 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:08:32.721721 13823 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:08:32.721724 13823 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:08:32.721727 13823 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:08:32.721730 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.721731 13823 net.cpp:163] Memory required for data: 843055104
I0712 00:08:32.721734 13823 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:08:32.721738 13823 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:08:32.721740 13823 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:08:32.721742 13823 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:08:32.724938 13823 net.cpp:148] Setting up res4a_branch2b
I0712 00:08:32.724946 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.724947 13823 net.cpp:163] Memory required for data: 851443712
I0712 00:08:32.724951 13823 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:08:32.724956 13823 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:08:32.724957 13823 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:08:32.724959 13823 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:08:32.725581 13823 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:08:32.725586 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.725589 13823 net.cpp:163] Memory required for data: 859832320
I0712 00:08:32.725595 13823 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:08:32.725600 13823 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:08:32.725601 13823 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:08:32.725603 13823 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:08:32.725606 13823 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:08:32.725608 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.725610 13823 net.cpp:163] Memory required for data: 868220928
I0712 00:08:32.725612 13823 layer_factory.hpp:77] Creating layer pool4
I0712 00:08:32.725615 13823 net.cpp:98] Creating Layer pool4
I0712 00:08:32.725616 13823 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:08:32.725618 13823 net.cpp:413] pool4 -> pool4
I0712 00:08:32.725654 13823 net.cpp:148] Setting up pool4
I0712 00:08:32.725658 13823 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:08:32.725659 13823 net.cpp:163] Memory required for data: 876609536
I0712 00:08:32.725661 13823 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:08:32.725666 13823 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:08:32.725667 13823 net.cpp:439] res5a_branch2a <- pool4
I0712 00:08:32.725669 13823 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:08:32.751713 13823 net.cpp:148] Setting up res5a_branch2a
I0712 00:08:32.751729 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.751732 13823 net.cpp:163] Memory required for data: 893386752
I0712 00:08:32.751737 13823 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:08:32.751746 13823 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:08:32.751749 13823 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:08:32.751752 13823 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:08:32.752403 13823 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:08:32.752408 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.752410 13823 net.cpp:163] Memory required for data: 910163968
I0712 00:08:32.752415 13823 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:08:32.752418 13823 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:08:32.752420 13823 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:08:32.752423 13823 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:08:32.752426 13823 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:08:32.752429 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.752430 13823 net.cpp:163] Memory required for data: 926941184
I0712 00:08:32.752431 13823 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:08:32.752436 13823 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:08:32.752439 13823 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:08:32.752440 13823 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:08:32.765353 13823 net.cpp:148] Setting up res5a_branch2b
I0712 00:08:32.765374 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.765377 13823 net.cpp:163] Memory required for data: 943718400
I0712 00:08:32.765385 13823 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:08:32.765393 13823 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:08:32.765395 13823 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:08:32.765399 13823 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:08:32.766080 13823 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:08:32.766088 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.766090 13823 net.cpp:163] Memory required for data: 960495616
I0712 00:08:32.766095 13823 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:08:32.766099 13823 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:08:32.766101 13823 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:08:32.766103 13823 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:08:32.766108 13823 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:08:32.766111 13823 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:08:32.766113 13823 net.cpp:163] Memory required for data: 977272832
I0712 00:08:32.766114 13823 layer_factory.hpp:77] Creating layer out5a
I0712 00:08:32.766119 13823 net.cpp:98] Creating Layer out5a
I0712 00:08:32.766121 13823 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:08:32.766124 13823 net.cpp:413] out5a -> out5a
I0712 00:08:32.770324 13823 net.cpp:148] Setting up out5a
I0712 00:08:32.770336 13823 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:08:32.770339 13823 net.cpp:163] Memory required for data: 979369984
I0712 00:08:32.770344 13823 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:08:32.770350 13823 net.cpp:98] Creating Layer out5a/bn
I0712 00:08:32.770354 13823 net.cpp:439] out5a/bn <- out5a
I0712 00:08:32.770359 13823 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:08:32.771096 13823 net.cpp:148] Setting up out5a/bn
I0712 00:08:32.771105 13823 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:08:32.771106 13823 net.cpp:163] Memory required for data: 981467136
I0712 00:08:32.771111 13823 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:08:32.771113 13823 net.cpp:98] Creating Layer out5a/relu
I0712 00:08:32.771116 13823 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:08:32.771118 13823 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:08:32.771121 13823 net.cpp:148] Setting up out5a/relu
I0712 00:08:32.771124 13823 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:08:32.771126 13823 net.cpp:163] Memory required for data: 983564288
I0712 00:08:32.771127 13823 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:08:32.771137 13823 net.cpp:98] Creating Layer out5a_up2
I0712 00:08:32.771139 13823 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:08:32.771142 13823 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:08:32.771384 13823 net.cpp:148] Setting up out5a_up2
I0712 00:08:32.771389 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.771389 13823 net.cpp:163] Memory required for data: 991952896
I0712 00:08:32.771392 13823 layer_factory.hpp:77] Creating layer out3a
I0712 00:08:32.771396 13823 net.cpp:98] Creating Layer out3a
I0712 00:08:32.771399 13823 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:08:32.771401 13823 net.cpp:413] out3a -> out3a
I0712 00:08:32.772430 13823 net.cpp:148] Setting up out3a
I0712 00:08:32.772435 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.772438 13823 net.cpp:163] Memory required for data: 1000341504
I0712 00:08:32.772440 13823 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:08:32.772444 13823 net.cpp:98] Creating Layer out3a/bn
I0712 00:08:32.772445 13823 net.cpp:439] out3a/bn <- out3a
I0712 00:08:32.772449 13823 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:08:32.773167 13823 net.cpp:148] Setting up out3a/bn
I0712 00:08:32.773174 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.773175 13823 net.cpp:163] Memory required for data: 1008730112
I0712 00:08:32.773182 13823 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:08:32.773185 13823 net.cpp:98] Creating Layer out3a/relu
I0712 00:08:32.773187 13823 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:08:32.773190 13823 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:08:32.773192 13823 net.cpp:148] Setting up out3a/relu
I0712 00:08:32.773195 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.773196 13823 net.cpp:163] Memory required for data: 1017118720
I0712 00:08:32.773198 13823 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:08:32.773205 13823 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:08:32.773206 13823 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:08:32.773208 13823 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:08:32.773211 13823 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:08:32.773236 13823 net.cpp:148] Setting up out3_out5_combined
I0712 00:08:32.773239 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.773241 13823 net.cpp:163] Memory required for data: 1025507328
I0712 00:08:32.773242 13823 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:08:32.773247 13823 net.cpp:98] Creating Layer ctx_conv1
I0712 00:08:32.773248 13823 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:08:32.773250 13823 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:08:32.774272 13823 net.cpp:148] Setting up ctx_conv1
I0712 00:08:32.774277 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.774279 13823 net.cpp:163] Memory required for data: 1033895936
I0712 00:08:32.774282 13823 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:08:32.774286 13823 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:08:32.774287 13823 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:08:32.774289 13823 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:08:32.775010 13823 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:08:32.775017 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.775019 13823 net.cpp:163] Memory required for data: 1042284544
I0712 00:08:32.775024 13823 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:08:32.775027 13823 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:08:32.775029 13823 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:08:32.775032 13823 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:08:32.775034 13823 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:08:32.775038 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.775038 13823 net.cpp:163] Memory required for data: 1050673152
I0712 00:08:32.775040 13823 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:08:32.775044 13823 net.cpp:98] Creating Layer ctx_conv2
I0712 00:08:32.775045 13823 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:08:32.775048 13823 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:08:32.776073 13823 net.cpp:148] Setting up ctx_conv2
I0712 00:08:32.776078 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.776079 13823 net.cpp:163] Memory required for data: 1059061760
I0712 00:08:32.776082 13823 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:08:32.776085 13823 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:08:32.776087 13823 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:08:32.776089 13823 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:08:32.776804 13823 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:08:32.776809 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.776811 13823 net.cpp:163] Memory required for data: 1067450368
I0712 00:08:32.776819 13823 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:08:32.776823 13823 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:08:32.776824 13823 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:08:32.776826 13823 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:08:32.776829 13823 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:08:32.776831 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.776834 13823 net.cpp:163] Memory required for data: 1075838976
I0712 00:08:32.776834 13823 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:08:32.776839 13823 net.cpp:98] Creating Layer ctx_conv3
I0712 00:08:32.776840 13823 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:08:32.776844 13823 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:08:32.778775 13823 net.cpp:148] Setting up ctx_conv3
I0712 00:08:32.778784 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.778786 13823 net.cpp:163] Memory required for data: 1084227584
I0712 00:08:32.778789 13823 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:08:32.778794 13823 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:08:32.778795 13823 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:08:32.778798 13823 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:08:32.779531 13823 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:08:32.779536 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.779538 13823 net.cpp:163] Memory required for data: 1092616192
I0712 00:08:32.779542 13823 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:08:32.779546 13823 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:08:32.779547 13823 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:08:32.779549 13823 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:08:32.779552 13823 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:08:32.779554 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.779556 13823 net.cpp:163] Memory required for data: 1101004800
I0712 00:08:32.779557 13823 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:08:32.779561 13823 net.cpp:98] Creating Layer ctx_conv4
I0712 00:08:32.779563 13823 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:08:32.779567 13823 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:08:32.780586 13823 net.cpp:148] Setting up ctx_conv4
I0712 00:08:32.780593 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.780596 13823 net.cpp:163] Memory required for data: 1109393408
I0712 00:08:32.780601 13823 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:08:32.780606 13823 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:08:32.780609 13823 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:08:32.780625 13823 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:08:32.781388 13823 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:08:32.781396 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.781399 13823 net.cpp:163] Memory required for data: 1117782016
I0712 00:08:32.781406 13823 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:08:32.781411 13823 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:08:32.781415 13823 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:08:32.781424 13823 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:08:32.781431 13823 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:08:32.781436 13823 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:08:32.781440 13823 net.cpp:163] Memory required for data: 1126170624
I0712 00:08:32.781443 13823 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:08:32.781451 13823 net.cpp:98] Creating Layer ctx_final
I0712 00:08:32.781455 13823 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:08:32.781458 13823 net.cpp:413] ctx_final -> ctx_final
I0712 00:08:32.782106 13823 net.cpp:148] Setting up ctx_final
I0712 00:08:32.782115 13823 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:08:32.782119 13823 net.cpp:163] Memory required for data: 1127219200
I0712 00:08:32.782124 13823 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:08:32.782129 13823 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:08:32.782132 13823 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:08:32.782136 13823 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:08:32.782143 13823 net.cpp:148] Setting up ctx_final/relu
I0712 00:08:32.782148 13823 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:08:32.782150 13823 net.cpp:163] Memory required for data: 1128267776
I0712 00:08:32.782153 13823 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:08:32.782160 13823 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:08:32.782163 13823 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:08:32.782167 13823 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:08:32.782413 13823 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:08:32.782420 13823 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:08:32.782423 13823 net.cpp:163] Memory required for data: 1132462080
I0712 00:08:32.782428 13823 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:08:32.782433 13823 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:08:32.782438 13823 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:08:32.782443 13823 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:08:32.782682 13823 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:08:32.782688 13823 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:08:32.782691 13823 net.cpp:163] Memory required for data: 1149239296
I0712 00:08:32.782696 13823 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:08:32.782701 13823 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:08:32.782706 13823 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:08:32.782711 13823 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:08:32.782948 13823 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:08:32.782953 13823 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:08:32.782956 13823 net.cpp:163] Memory required for data: 1216348160
I0712 00:08:32.782961 13823 layer_factory.hpp:77] Creating layer prob
I0712 00:08:32.782966 13823 net.cpp:98] Creating Layer prob
I0712 00:08:32.782970 13823 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:08:32.782975 13823 net.cpp:413] prob -> prob
I0712 00:08:32.783051 13823 net.cpp:148] Setting up prob
I0712 00:08:32.783056 13823 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:08:32.783058 13823 net.cpp:163] Memory required for data: 1283457024
I0712 00:08:32.783062 13823 net.cpp:226] prob does not need backward computation.
I0712 00:08:32.783066 13823 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:08:32.783071 13823 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:08:32.783073 13823 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:08:32.783077 13823 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:08:32.783080 13823 net.cpp:226] ctx_final does not need backward computation.
I0712 00:08:32.783083 13823 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:08:32.783087 13823 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:08:32.783089 13823 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:08:32.783092 13823 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:08:32.783097 13823 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:08:32.783099 13823 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:08:32.783103 13823 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:08:32.783107 13823 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:08:32.783110 13823 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:08:32.783113 13823 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:08:32.783116 13823 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:08:32.783119 13823 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:08:32.783123 13823 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:08:32.783128 13823 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:08:32.783133 13823 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:08:32.783136 13823 net.cpp:226] out3a does not need backward computation.
I0712 00:08:32.783140 13823 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:08:32.783144 13823 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:08:32.783149 13823 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:08:32.783152 13823 net.cpp:226] out5a does not need backward computation.
I0712 00:08:32.783156 13823 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:08:32.783160 13823 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:08:32.783164 13823 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:08:32.783169 13823 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:08:32.783172 13823 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:08:32.783176 13823 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:08:32.783180 13823 net.cpp:226] pool4 does not need backward computation.
I0712 00:08:32.783183 13823 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:08:32.783186 13823 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:08:32.783190 13823 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:08:32.783195 13823 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:08:32.783197 13823 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:08:32.783201 13823 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:08:32.783205 13823 net.cpp:226] pool3 does not need backward computation.
I0712 00:08:32.783210 13823 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:08:32.783213 13823 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:08:32.783217 13823 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:08:32.783221 13823 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:08:32.783226 13823 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:08:32.783228 13823 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:08:32.783232 13823 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:08:32.783236 13823 net.cpp:226] pool2 does not need backward computation.
I0712 00:08:32.783241 13823 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:08:32.783244 13823 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:08:32.783248 13823 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:08:32.783252 13823 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:08:32.783255 13823 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:08:32.783259 13823 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:08:32.783262 13823 net.cpp:226] pool1 does not need backward computation.
I0712 00:08:32.783267 13823 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:08:32.783270 13823 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:08:32.783275 13823 net.cpp:226] conv1b does not need backward computation.
I0712 00:08:32.783279 13823 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:08:32.783283 13823 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:08:32.783288 13823 net.cpp:226] conv1a does not need backward computation.
I0712 00:08:32.783291 13823 net.cpp:226] data/bias does not need backward computation.
I0712 00:08:32.783294 13823 net.cpp:226] input does not need backward computation.
I0712 00:08:32.783298 13823 net.cpp:268] This network produces output prob
I0712 00:08:32.783330 13823 net.cpp:288] Network initialization done.
I0712 00:08:32.793447 13823 net.cpp:804] Ignoring source layer data
I0712 00:08:32.794778 13823 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['0'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
pixel_accuracy=0.961773670758, mean_iou=0.830979223845, iou=[ 0.93778123  0.9291247   0.77211617  0.6052658   0.91060822]
initial eval.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:11:02.826340 16865 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/deploy.prototxt
I0712 00:11:02.826369 16865 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:11:02.826370 16865 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:11:02.826639 16865 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 1024
      dim: 2048
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:11:02.826740 16865 layer_factory.hpp:77] Creating layer input
I0712 00:11:02.826748 16865 net.cpp:98] Creating Layer input
I0712 00:11:02.826750 16865 net.cpp:413] input -> data
I0712 00:11:02.827759 16865 net.cpp:148] Setting up input
I0712 00:11:02.827769 16865 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:11:02.827770 16865 net.cpp:163] Memory required for data: 25165824
I0712 00:11:02.827772 16865 layer_factory.hpp:77] Creating layer data/bias
I0712 00:11:02.827780 16865 net.cpp:98] Creating Layer data/bias
I0712 00:11:02.827782 16865 net.cpp:439] data/bias <- data
I0712 00:11:02.827786 16865 net.cpp:413] data/bias -> data/bias
I0712 00:11:02.830843 16865 net.cpp:148] Setting up data/bias
I0712 00:11:02.830863 16865 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:11:02.830865 16865 net.cpp:163] Memory required for data: 50331648
I0712 00:11:02.830876 16865 layer_factory.hpp:77] Creating layer conv1a
I0712 00:11:02.830888 16865 net.cpp:98] Creating Layer conv1a
I0712 00:11:02.830890 16865 net.cpp:439] conv1a <- data/bias
I0712 00:11:02.830894 16865 net.cpp:413] conv1a -> conv1a
I0712 00:11:02.833539 16865 net.cpp:148] Setting up conv1a
I0712 00:11:02.833549 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.833551 16865 net.cpp:163] Memory required for data: 117440512
I0712 00:11:02.833556 16865 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:11:02.833561 16865 net.cpp:98] Creating Layer conv1a/bn
I0712 00:11:02.833564 16865 net.cpp:439] conv1a/bn <- conv1a
I0712 00:11:02.833566 16865 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:11:02.835266 16865 net.cpp:148] Setting up conv1a/bn
I0712 00:11:02.835275 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.835278 16865 net.cpp:163] Memory required for data: 184549376
I0712 00:11:02.835283 16865 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:11:02.835289 16865 net.cpp:98] Creating Layer conv1a/relu
I0712 00:11:02.835289 16865 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:11:02.835292 16865 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:11:02.835302 16865 net.cpp:148] Setting up conv1a/relu
I0712 00:11:02.835305 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.835306 16865 net.cpp:163] Memory required for data: 251658240
I0712 00:11:02.835309 16865 layer_factory.hpp:77] Creating layer conv1b
I0712 00:11:02.835314 16865 net.cpp:98] Creating Layer conv1b
I0712 00:11:02.835315 16865 net.cpp:439] conv1b <- conv1a/bn
I0712 00:11:02.835319 16865 net.cpp:413] conv1b -> conv1b
I0712 00:11:02.836650 16865 net.cpp:148] Setting up conv1b
I0712 00:11:02.836659 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.836661 16865 net.cpp:163] Memory required for data: 318767104
I0712 00:11:02.836666 16865 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:11:02.836674 16865 net.cpp:98] Creating Layer conv1b/bn
I0712 00:11:02.836676 16865 net.cpp:439] conv1b/bn <- conv1b
I0712 00:11:02.836679 16865 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:11:02.838415 16865 net.cpp:148] Setting up conv1b/bn
I0712 00:11:02.838426 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.838429 16865 net.cpp:163] Memory required for data: 385875968
I0712 00:11:02.838435 16865 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:11:02.838439 16865 net.cpp:98] Creating Layer conv1b/relu
I0712 00:11:02.838441 16865 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:11:02.838444 16865 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:11:02.838449 16865 net.cpp:148] Setting up conv1b/relu
I0712 00:11:02.838451 16865 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:11:02.838452 16865 net.cpp:163] Memory required for data: 452984832
I0712 00:11:02.838454 16865 layer_factory.hpp:77] Creating layer pool1
I0712 00:11:02.838459 16865 net.cpp:98] Creating Layer pool1
I0712 00:11:02.838460 16865 net.cpp:439] pool1 <- conv1b/bn
I0712 00:11:02.838462 16865 net.cpp:413] pool1 -> pool1
I0712 00:11:02.838501 16865 net.cpp:148] Setting up pool1
I0712 00:11:02.838505 16865 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:11:02.838507 16865 net.cpp:163] Memory required for data: 469762048
I0712 00:11:02.838510 16865 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:11:02.838515 16865 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:11:02.838515 16865 net.cpp:439] res2a_branch2a <- pool1
I0712 00:11:02.838518 16865 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:11:02.840886 16865 net.cpp:148] Setting up res2a_branch2a
I0712 00:11:02.840896 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.840898 16865 net.cpp:163] Memory required for data: 503316480
I0712 00:11:02.840904 16865 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:11:02.840909 16865 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:11:02.840911 16865 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:11:02.840914 16865 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:11:02.841621 16865 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:11:02.841629 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.841629 16865 net.cpp:163] Memory required for data: 536870912
I0712 00:11:02.841634 16865 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:11:02.841639 16865 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:11:02.841639 16865 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:11:02.841642 16865 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:11:02.841645 16865 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:11:02.841647 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.841650 16865 net.cpp:163] Memory required for data: 570425344
I0712 00:11:02.841651 16865 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:11:02.841655 16865 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:11:02.841657 16865 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:11:02.841660 16865 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:11:02.843010 16865 net.cpp:148] Setting up res2a_branch2b
I0712 00:11:02.843019 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.843020 16865 net.cpp:163] Memory required for data: 603979776
I0712 00:11:02.843024 16865 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:11:02.843029 16865 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:11:02.843031 16865 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:11:02.843034 16865 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:11:02.843731 16865 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:11:02.843737 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.843739 16865 net.cpp:163] Memory required for data: 637534208
I0712 00:11:02.843744 16865 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:11:02.843746 16865 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:11:02.843749 16865 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:11:02.843750 16865 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:11:02.843753 16865 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:11:02.843755 16865 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:11:02.843756 16865 net.cpp:163] Memory required for data: 671088640
I0712 00:11:02.843758 16865 layer_factory.hpp:77] Creating layer pool2
I0712 00:11:02.843761 16865 net.cpp:98] Creating Layer pool2
I0712 00:11:02.843763 16865 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:11:02.843765 16865 net.cpp:413] pool2 -> pool2
I0712 00:11:02.843797 16865 net.cpp:148] Setting up pool2
I0712 00:11:02.843801 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.843802 16865 net.cpp:163] Memory required for data: 679477248
I0712 00:11:02.843804 16865 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:11:02.843808 16865 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:11:02.843811 16865 net.cpp:439] res3a_branch2a <- pool2
I0712 00:11:02.843813 16865 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:11:02.846370 16865 net.cpp:148] Setting up res3a_branch2a
I0712 00:11:02.846377 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.846379 16865 net.cpp:163] Memory required for data: 696254464
I0712 00:11:02.846384 16865 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:11:02.846387 16865 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:11:02.846390 16865 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:11:02.846392 16865 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:11:02.846999 16865 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:11:02.847004 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.847007 16865 net.cpp:163] Memory required for data: 713031680
I0712 00:11:02.847012 16865 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:11:02.847014 16865 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:11:02.847017 16865 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:11:02.847018 16865 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:11:02.847023 16865 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:11:02.847026 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.847028 16865 net.cpp:163] Memory required for data: 729808896
I0712 00:11:02.847029 16865 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:11:02.847033 16865 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:11:02.847034 16865 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:11:02.847038 16865 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:11:02.848033 16865 net.cpp:148] Setting up res3a_branch2b
I0712 00:11:02.848038 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.848040 16865 net.cpp:163] Memory required for data: 746586112
I0712 00:11:02.848043 16865 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:11:02.848047 16865 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:11:02.848048 16865 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:11:02.848050 16865 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:11:02.848650 16865 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:11:02.848655 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.848657 16865 net.cpp:163] Memory required for data: 763363328
I0712 00:11:02.848662 16865 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:11:02.848664 16865 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:11:02.848666 16865 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:11:02.848668 16865 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:11:02.848671 16865 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:11:02.848675 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.848675 16865 net.cpp:163] Memory required for data: 780140544
I0712 00:11:02.848677 16865 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:11:02.848680 16865 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:11:02.848681 16865 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:11:02.848683 16865 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:11:02.848686 16865 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:11:02.848718 16865 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:11:02.848721 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.848724 16865 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:11:02.848726 16865 net.cpp:163] Memory required for data: 813694976
I0712 00:11:02.848727 16865 layer_factory.hpp:77] Creating layer pool3
I0712 00:11:02.848731 16865 net.cpp:98] Creating Layer pool3
I0712 00:11:02.848732 16865 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:11:02.848736 16865 net.cpp:413] pool3 -> pool3
I0712 00:11:02.848767 16865 net.cpp:148] Setting up pool3
I0712 00:11:02.848772 16865 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:11:02.848773 16865 net.cpp:163] Memory required for data: 817889280
I0712 00:11:02.848774 16865 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:11:02.848780 16865 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:11:02.848783 16865 net.cpp:439] res4a_branch2a <- pool3
I0712 00:11:02.848784 16865 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:11:02.854837 16865 net.cpp:148] Setting up res4a_branch2a
I0712 00:11:02.854846 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.854847 16865 net.cpp:163] Memory required for data: 826277888
I0712 00:11:02.854851 16865 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:11:02.854856 16865 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:11:02.854857 16865 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:11:02.854861 16865 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:11:02.855468 16865 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:11:02.855473 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.855474 16865 net.cpp:163] Memory required for data: 834666496
I0712 00:11:02.855479 16865 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:11:02.855482 16865 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:11:02.855484 16865 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:11:02.855487 16865 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:11:02.855490 16865 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:11:02.855492 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.855494 16865 net.cpp:163] Memory required for data: 843055104
I0712 00:11:02.855496 16865 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:11:02.855501 16865 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:11:02.855504 16865 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:11:02.855506 16865 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:11:02.858693 16865 net.cpp:148] Setting up res4a_branch2b
I0712 00:11:02.858698 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.858700 16865 net.cpp:163] Memory required for data: 851443712
I0712 00:11:02.858703 16865 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:11:02.858707 16865 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:11:02.858710 16865 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:11:02.858711 16865 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:11:02.859318 16865 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:11:02.859321 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.859323 16865 net.cpp:163] Memory required for data: 859832320
I0712 00:11:02.859331 16865 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:11:02.859334 16865 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:11:02.859336 16865 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:11:02.859338 16865 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:11:02.859341 16865 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:11:02.859344 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.859344 16865 net.cpp:163] Memory required for data: 868220928
I0712 00:11:02.859346 16865 layer_factory.hpp:77] Creating layer pool4
I0712 00:11:02.859349 16865 net.cpp:98] Creating Layer pool4
I0712 00:11:02.859351 16865 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:11:02.859354 16865 net.cpp:413] pool4 -> pool4
I0712 00:11:02.859388 16865 net.cpp:148] Setting up pool4
I0712 00:11:02.859392 16865 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:11:02.859395 16865 net.cpp:163] Memory required for data: 876609536
I0712 00:11:02.859395 16865 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:11:02.859400 16865 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:11:02.859401 16865 net.cpp:439] res5a_branch2a <- pool4
I0712 00:11:02.859405 16865 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:11:02.885319 16865 net.cpp:148] Setting up res5a_branch2a
I0712 00:11:02.885337 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.885340 16865 net.cpp:163] Memory required for data: 893386752
I0712 00:11:02.885345 16865 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:11:02.885354 16865 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:11:02.885357 16865 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:11:02.885361 16865 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:11:02.886010 16865 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:11:02.886016 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.886018 16865 net.cpp:163] Memory required for data: 910163968
I0712 00:11:02.886023 16865 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:11:02.886029 16865 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:11:02.886030 16865 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:11:02.886034 16865 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:11:02.886037 16865 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:11:02.886039 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.886041 16865 net.cpp:163] Memory required for data: 926941184
I0712 00:11:02.886044 16865 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:11:02.886049 16865 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:11:02.886051 16865 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:11:02.886054 16865 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:11:02.898989 16865 net.cpp:148] Setting up res5a_branch2b
I0712 00:11:02.899006 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.899009 16865 net.cpp:163] Memory required for data: 943718400
I0712 00:11:02.899016 16865 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:11:02.899022 16865 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:11:02.899025 16865 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:11:02.899029 16865 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:11:02.899649 16865 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:11:02.899654 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.899657 16865 net.cpp:163] Memory required for data: 960495616
I0712 00:11:02.899662 16865 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:11:02.899664 16865 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:11:02.899667 16865 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:11:02.899668 16865 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:11:02.899672 16865 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:11:02.899674 16865 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:11:02.899677 16865 net.cpp:163] Memory required for data: 977272832
I0712 00:11:02.899678 16865 layer_factory.hpp:77] Creating layer out5a
I0712 00:11:02.899683 16865 net.cpp:98] Creating Layer out5a
I0712 00:11:02.899685 16865 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:11:02.899688 16865 net.cpp:413] out5a -> out5a
I0712 00:11:02.903810 16865 net.cpp:148] Setting up out5a
I0712 00:11:02.903818 16865 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:11:02.903820 16865 net.cpp:163] Memory required for data: 979369984
I0712 00:11:02.903825 16865 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:11:02.903828 16865 net.cpp:98] Creating Layer out5a/bn
I0712 00:11:02.903831 16865 net.cpp:439] out5a/bn <- out5a
I0712 00:11:02.903836 16865 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:11:02.904508 16865 net.cpp:148] Setting up out5a/bn
I0712 00:11:02.904513 16865 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:11:02.904515 16865 net.cpp:163] Memory required for data: 981467136
I0712 00:11:02.904520 16865 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:11:02.904522 16865 net.cpp:98] Creating Layer out5a/relu
I0712 00:11:02.904525 16865 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:11:02.904526 16865 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:11:02.904530 16865 net.cpp:148] Setting up out5a/relu
I0712 00:11:02.904532 16865 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:11:02.904533 16865 net.cpp:163] Memory required for data: 983564288
I0712 00:11:02.904536 16865 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:11:02.904538 16865 net.cpp:98] Creating Layer out5a_up2
I0712 00:11:02.904541 16865 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:11:02.904543 16865 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:11:02.904772 16865 net.cpp:148] Setting up out5a_up2
I0712 00:11:02.904778 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.904778 16865 net.cpp:163] Memory required for data: 991952896
I0712 00:11:02.904781 16865 layer_factory.hpp:77] Creating layer out3a
I0712 00:11:02.904785 16865 net.cpp:98] Creating Layer out3a
I0712 00:11:02.904788 16865 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:11:02.904790 16865 net.cpp:413] out3a -> out3a
I0712 00:11:02.905818 16865 net.cpp:148] Setting up out3a
I0712 00:11:02.905823 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.905825 16865 net.cpp:163] Memory required for data: 1000341504
I0712 00:11:02.905828 16865 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:11:02.905831 16865 net.cpp:98] Creating Layer out3a/bn
I0712 00:11:02.905833 16865 net.cpp:439] out3a/bn <- out3a
I0712 00:11:02.905836 16865 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:11:02.906523 16865 net.cpp:148] Setting up out3a/bn
I0712 00:11:02.906529 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.906532 16865 net.cpp:163] Memory required for data: 1008730112
I0712 00:11:02.906538 16865 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:11:02.906541 16865 net.cpp:98] Creating Layer out3a/relu
I0712 00:11:02.906543 16865 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:11:02.906545 16865 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:11:02.906548 16865 net.cpp:148] Setting up out3a/relu
I0712 00:11:02.906550 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.906553 16865 net.cpp:163] Memory required for data: 1017118720
I0712 00:11:02.906554 16865 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:11:02.906561 16865 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:11:02.906563 16865 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:11:02.906564 16865 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:11:02.906568 16865 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:11:02.906589 16865 net.cpp:148] Setting up out3_out5_combined
I0712 00:11:02.906591 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.906594 16865 net.cpp:163] Memory required for data: 1025507328
I0712 00:11:02.906594 16865 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:11:02.906599 16865 net.cpp:98] Creating Layer ctx_conv1
I0712 00:11:02.906600 16865 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:11:02.906602 16865 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:11:02.907613 16865 net.cpp:148] Setting up ctx_conv1
I0712 00:11:02.907618 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.907619 16865 net.cpp:163] Memory required for data: 1033895936
I0712 00:11:02.907622 16865 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:11:02.907625 16865 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:11:02.907627 16865 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:11:02.907629 16865 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:11:02.908315 16865 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:11:02.908320 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.908323 16865 net.cpp:163] Memory required for data: 1042284544
I0712 00:11:02.908327 16865 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:11:02.908329 16865 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:11:02.908331 16865 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:11:02.908334 16865 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:11:02.908336 16865 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:11:02.908339 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.908340 16865 net.cpp:163] Memory required for data: 1050673152
I0712 00:11:02.908342 16865 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:11:02.908345 16865 net.cpp:98] Creating Layer ctx_conv2
I0712 00:11:02.908347 16865 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:11:02.908349 16865 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:11:02.909368 16865 net.cpp:148] Setting up ctx_conv2
I0712 00:11:02.909373 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.909375 16865 net.cpp:163] Memory required for data: 1059061760
I0712 00:11:02.909377 16865 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:11:02.909380 16865 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:11:02.909382 16865 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:11:02.909385 16865 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:11:02.910080 16865 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:11:02.910085 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.910086 16865 net.cpp:163] Memory required for data: 1067450368
I0712 00:11:02.910091 16865 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:11:02.910094 16865 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:11:02.910095 16865 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:11:02.910097 16865 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:11:02.910100 16865 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:11:02.910104 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.910104 16865 net.cpp:163] Memory required for data: 1075838976
I0712 00:11:02.910106 16865 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:11:02.910109 16865 net.cpp:98] Creating Layer ctx_conv3
I0712 00:11:02.910111 16865 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:11:02.910115 16865 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:11:02.912014 16865 net.cpp:148] Setting up ctx_conv3
I0712 00:11:02.912024 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.912025 16865 net.cpp:163] Memory required for data: 1084227584
I0712 00:11:02.912029 16865 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:11:02.912032 16865 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:11:02.912034 16865 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:11:02.912037 16865 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:11:02.912735 16865 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:11:02.912740 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.912742 16865 net.cpp:163] Memory required for data: 1092616192
I0712 00:11:02.912747 16865 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:11:02.912750 16865 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:11:02.912751 16865 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:11:02.912753 16865 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:11:02.912757 16865 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:11:02.912760 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.912761 16865 net.cpp:163] Memory required for data: 1101004800
I0712 00:11:02.912762 16865 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:11:02.912766 16865 net.cpp:98] Creating Layer ctx_conv4
I0712 00:11:02.912768 16865 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:11:02.912771 16865 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:11:02.913787 16865 net.cpp:148] Setting up ctx_conv4
I0712 00:11:02.913792 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.913794 16865 net.cpp:163] Memory required for data: 1109393408
I0712 00:11:02.913797 16865 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:11:02.913800 16865 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:11:02.913802 16865 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:11:02.913805 16865 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:11:02.914491 16865 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:11:02.914495 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.914497 16865 net.cpp:163] Memory required for data: 1117782016
I0712 00:11:02.914502 16865 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:11:02.914505 16865 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:11:02.914506 16865 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:11:02.914508 16865 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:11:02.914511 16865 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:11:02.914513 16865 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:11:02.914515 16865 net.cpp:163] Memory required for data: 1126170624
I0712 00:11:02.914517 16865 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:11:02.914520 16865 net.cpp:98] Creating Layer ctx_final
I0712 00:11:02.914522 16865 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:11:02.914525 16865 net.cpp:413] ctx_final -> ctx_final
I0712 00:11:02.914911 16865 net.cpp:148] Setting up ctx_final
I0712 00:11:02.914916 16865 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:11:02.914918 16865 net.cpp:163] Memory required for data: 1127219200
I0712 00:11:02.914921 16865 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:11:02.914923 16865 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:11:02.914925 16865 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:11:02.914927 16865 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:11:02.914930 16865 net.cpp:148] Setting up ctx_final/relu
I0712 00:11:02.914933 16865 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:11:02.914934 16865 net.cpp:163] Memory required for data: 1128267776
I0712 00:11:02.914937 16865 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:11:02.914939 16865 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:11:02.914942 16865 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:11:02.914943 16865 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:11:02.915163 16865 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:11:02.915166 16865 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:11:02.915169 16865 net.cpp:163] Memory required for data: 1132462080
I0712 00:11:02.915171 16865 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:11:02.915174 16865 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:11:02.915175 16865 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:11:02.915179 16865 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:11:02.915392 16865 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:11:02.915396 16865 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:11:02.915398 16865 net.cpp:163] Memory required for data: 1149239296
I0712 00:11:02.915400 16865 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:11:02.915403 16865 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:11:02.915405 16865 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:11:02.915407 16865 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:11:02.915621 16865 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:11:02.915624 16865 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:11:02.915627 16865 net.cpp:163] Memory required for data: 1216348160
I0712 00:11:02.915628 16865 layer_factory.hpp:77] Creating layer prob
I0712 00:11:02.915632 16865 net.cpp:98] Creating Layer prob
I0712 00:11:02.915633 16865 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:11:02.915637 16865 net.cpp:413] prob -> prob
I0712 00:11:02.915709 16865 net.cpp:148] Setting up prob
I0712 00:11:02.915712 16865 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:11:02.915714 16865 net.cpp:163] Memory required for data: 1283457024
I0712 00:11:02.915716 16865 net.cpp:226] prob does not need backward computation.
I0712 00:11:02.915717 16865 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:11:02.915719 16865 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:11:02.915721 16865 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:11:02.915724 16865 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:11:02.915725 16865 net.cpp:226] ctx_final does not need backward computation.
I0712 00:11:02.915726 16865 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:11:02.915729 16865 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:11:02.915730 16865 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:11:02.915732 16865 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:11:02.915735 16865 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:11:02.915736 16865 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:11:02.915737 16865 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:11:02.915740 16865 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:11:02.915741 16865 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:11:02.915742 16865 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:11:02.915745 16865 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:11:02.915746 16865 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:11:02.915747 16865 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:11:02.915750 16865 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:11:02.915751 16865 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:11:02.915753 16865 net.cpp:226] out3a does not need backward computation.
I0712 00:11:02.915755 16865 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:11:02.915757 16865 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:11:02.915760 16865 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:11:02.915760 16865 net.cpp:226] out5a does not need backward computation.
I0712 00:11:02.915762 16865 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:11:02.915765 16865 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:11:02.915766 16865 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:11:02.915768 16865 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:11:02.915769 16865 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:11:02.915771 16865 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:11:02.915773 16865 net.cpp:226] pool4 does not need backward computation.
I0712 00:11:02.915776 16865 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:11:02.915777 16865 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:11:02.915779 16865 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:11:02.915781 16865 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:11:02.915783 16865 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:11:02.915786 16865 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:11:02.915787 16865 net.cpp:226] pool3 does not need backward computation.
I0712 00:11:02.915789 16865 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:11:02.915791 16865 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:11:02.915793 16865 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:11:02.915796 16865 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:11:02.915797 16865 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:11:02.915799 16865 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:11:02.915801 16865 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:11:02.915802 16865 net.cpp:226] pool2 does not need backward computation.
I0712 00:11:02.915804 16865 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:11:02.915807 16865 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:11:02.915808 16865 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:11:02.915810 16865 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:11:02.915812 16865 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:11:02.915814 16865 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:11:02.915815 16865 net.cpp:226] pool1 does not need backward computation.
I0712 00:11:02.915818 16865 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:11:02.915819 16865 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:11:02.915822 16865 net.cpp:226] conv1b does not need backward computation.
I0712 00:11:02.915823 16865 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:11:02.915825 16865 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:11:02.915827 16865 net.cpp:226] conv1a does not need backward computation.
I0712 00:11:02.915829 16865 net.cpp:226] data/bias does not need backward computation.
I0712 00:11:02.915832 16865 net.cpp:226] input does not need backward computation.
I0712 00:11:02.915832 16865 net.cpp:268] This network produces output prob
I0712 00:11:02.915859 16865 net.cpp:288] Network initialization done.
I0712 00:11:02.926745 16865 net.cpp:804] Ignoring source layer data
I0712 00:11:02.928083 16865 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['0'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
pixel_accuracy=0.959989549861, mean_iou=0.828385548316, iou=[ 0.93500514  0.92508534  0.77009694  0.60478975  0.90695057]
l1reg eval.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:13:31.614322 20014 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt
I0712 00:13:31.614349 20014 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:13:31.614352 20014 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:13:31.614622 20014 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 1024
      dim: 2048
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:13:31.614724 20014 layer_factory.hpp:77] Creating layer input
I0712 00:13:31.614733 20014 net.cpp:98] Creating Layer input
I0712 00:13:31.614737 20014 net.cpp:413] input -> data
I0712 00:13:31.615720 20014 net.cpp:148] Setting up input
I0712 00:13:31.615730 20014 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:13:31.615731 20014 net.cpp:163] Memory required for data: 25165824
I0712 00:13:31.615733 20014 layer_factory.hpp:77] Creating layer data/bias
I0712 00:13:31.615741 20014 net.cpp:98] Creating Layer data/bias
I0712 00:13:31.615744 20014 net.cpp:439] data/bias <- data
I0712 00:13:31.615748 20014 net.cpp:413] data/bias -> data/bias
I0712 00:13:31.618840 20014 net.cpp:148] Setting up data/bias
I0712 00:13:31.618862 20014 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0712 00:13:31.618865 20014 net.cpp:163] Memory required for data: 50331648
I0712 00:13:31.618880 20014 layer_factory.hpp:77] Creating layer conv1a
I0712 00:13:31.618890 20014 net.cpp:98] Creating Layer conv1a
I0712 00:13:31.618892 20014 net.cpp:439] conv1a <- data/bias
I0712 00:13:31.618896 20014 net.cpp:413] conv1a -> conv1a
I0712 00:13:31.621460 20014 net.cpp:148] Setting up conv1a
I0712 00:13:31.621471 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.621474 20014 net.cpp:163] Memory required for data: 117440512
I0712 00:13:31.621479 20014 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:13:31.621485 20014 net.cpp:98] Creating Layer conv1a/bn
I0712 00:13:31.621487 20014 net.cpp:439] conv1a/bn <- conv1a
I0712 00:13:31.621490 20014 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:13:31.623195 20014 net.cpp:148] Setting up conv1a/bn
I0712 00:13:31.623204 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.623206 20014 net.cpp:163] Memory required for data: 184549376
I0712 00:13:31.623214 20014 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:13:31.623219 20014 net.cpp:98] Creating Layer conv1a/relu
I0712 00:13:31.623220 20014 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:13:31.623222 20014 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:13:31.623230 20014 net.cpp:148] Setting up conv1a/relu
I0712 00:13:31.623234 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.623235 20014 net.cpp:163] Memory required for data: 251658240
I0712 00:13:31.623236 20014 layer_factory.hpp:77] Creating layer conv1b
I0712 00:13:31.623241 20014 net.cpp:98] Creating Layer conv1b
I0712 00:13:31.623245 20014 net.cpp:439] conv1b <- conv1a/bn
I0712 00:13:31.623246 20014 net.cpp:413] conv1b -> conv1b
I0712 00:13:31.624599 20014 net.cpp:148] Setting up conv1b
I0712 00:13:31.624609 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.624611 20014 net.cpp:163] Memory required for data: 318767104
I0712 00:13:31.624616 20014 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:13:31.624624 20014 net.cpp:98] Creating Layer conv1b/bn
I0712 00:13:31.624625 20014 net.cpp:439] conv1b/bn <- conv1b
I0712 00:13:31.624629 20014 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:13:31.626408 20014 net.cpp:148] Setting up conv1b/bn
I0712 00:13:31.626420 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.626422 20014 net.cpp:163] Memory required for data: 385875968
I0712 00:13:31.626430 20014 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:13:31.626433 20014 net.cpp:98] Creating Layer conv1b/relu
I0712 00:13:31.626435 20014 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:13:31.626438 20014 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:13:31.626443 20014 net.cpp:148] Setting up conv1b/relu
I0712 00:13:31.626446 20014 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0712 00:13:31.626447 20014 net.cpp:163] Memory required for data: 452984832
I0712 00:13:31.626449 20014 layer_factory.hpp:77] Creating layer pool1
I0712 00:13:31.626453 20014 net.cpp:98] Creating Layer pool1
I0712 00:13:31.626454 20014 net.cpp:439] pool1 <- conv1b/bn
I0712 00:13:31.626457 20014 net.cpp:413] pool1 -> pool1
I0712 00:13:31.626497 20014 net.cpp:148] Setting up pool1
I0712 00:13:31.626500 20014 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:13:31.626502 20014 net.cpp:163] Memory required for data: 469762048
I0712 00:13:31.626504 20014 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:13:31.626510 20014 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:13:31.626513 20014 net.cpp:439] res2a_branch2a <- pool1
I0712 00:13:31.626514 20014 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:13:31.628876 20014 net.cpp:148] Setting up res2a_branch2a
I0712 00:13:31.628887 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.628890 20014 net.cpp:163] Memory required for data: 503316480
I0712 00:13:31.628895 20014 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:13:31.628900 20014 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:13:31.628901 20014 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:13:31.628904 20014 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:13:31.629648 20014 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:13:31.629654 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.629657 20014 net.cpp:163] Memory required for data: 536870912
I0712 00:13:31.629662 20014 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:13:31.629665 20014 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:13:31.629667 20014 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:13:31.629669 20014 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:13:31.629673 20014 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:13:31.629675 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.629676 20014 net.cpp:163] Memory required for data: 570425344
I0712 00:13:31.629678 20014 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:13:31.629683 20014 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:13:31.629684 20014 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:13:31.629686 20014 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:13:31.631059 20014 net.cpp:148] Setting up res2a_branch2b
I0712 00:13:31.631067 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.631069 20014 net.cpp:163] Memory required for data: 603979776
I0712 00:13:31.631073 20014 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:13:31.631078 20014 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:13:31.631079 20014 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:13:31.631081 20014 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:13:31.631809 20014 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:13:31.631815 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.631817 20014 net.cpp:163] Memory required for data: 637534208
I0712 00:13:31.631821 20014 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:13:31.631824 20014 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:13:31.631826 20014 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:13:31.631829 20014 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:13:31.631831 20014 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:13:31.631834 20014 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0712 00:13:31.631835 20014 net.cpp:163] Memory required for data: 671088640
I0712 00:13:31.631837 20014 layer_factory.hpp:77] Creating layer pool2
I0712 00:13:31.631840 20014 net.cpp:98] Creating Layer pool2
I0712 00:13:31.631842 20014 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:13:31.631844 20014 net.cpp:413] pool2 -> pool2
I0712 00:13:31.631878 20014 net.cpp:148] Setting up pool2
I0712 00:13:31.631882 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.631884 20014 net.cpp:163] Memory required for data: 679477248
I0712 00:13:31.631886 20014 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:13:31.631891 20014 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:13:31.631892 20014 net.cpp:439] res3a_branch2a <- pool2
I0712 00:13:31.631894 20014 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:13:31.634465 20014 net.cpp:148] Setting up res3a_branch2a
I0712 00:13:31.634474 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.634475 20014 net.cpp:163] Memory required for data: 696254464
I0712 00:13:31.634479 20014 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:13:31.634482 20014 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:13:31.634485 20014 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:13:31.634487 20014 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:13:31.635120 20014 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:13:31.635128 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.635129 20014 net.cpp:163] Memory required for data: 713031680
I0712 00:13:31.635135 20014 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:13:31.635138 20014 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:13:31.635140 20014 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:13:31.635143 20014 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:13:31.635149 20014 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:13:31.635150 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.635152 20014 net.cpp:163] Memory required for data: 729808896
I0712 00:13:31.635154 20014 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:13:31.635157 20014 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:13:31.635159 20014 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:13:31.635162 20014 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:13:31.636173 20014 net.cpp:148] Setting up res3a_branch2b
I0712 00:13:31.636178 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.636180 20014 net.cpp:163] Memory required for data: 746586112
I0712 00:13:31.636183 20014 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:13:31.636186 20014 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:13:31.636188 20014 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:13:31.636191 20014 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:13:31.636802 20014 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:13:31.636807 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.636809 20014 net.cpp:163] Memory required for data: 763363328
I0712 00:13:31.636813 20014 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:13:31.636821 20014 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:13:31.636822 20014 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:13:31.636824 20014 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:13:31.636827 20014 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:13:31.636831 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.636831 20014 net.cpp:163] Memory required for data: 780140544
I0712 00:13:31.636833 20014 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:13:31.636835 20014 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:13:31.636837 20014 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:13:31.636839 20014 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:13:31.636843 20014 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:13:31.636876 20014 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:13:31.636880 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.636883 20014 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0712 00:13:31.636883 20014 net.cpp:163] Memory required for data: 813694976
I0712 00:13:31.636885 20014 layer_factory.hpp:77] Creating layer pool3
I0712 00:13:31.636888 20014 net.cpp:98] Creating Layer pool3
I0712 00:13:31.636890 20014 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:13:31.636893 20014 net.cpp:413] pool3 -> pool3
I0712 00:13:31.636926 20014 net.cpp:148] Setting up pool3
I0712 00:13:31.636930 20014 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:13:31.636932 20014 net.cpp:163] Memory required for data: 817889280
I0712 00:13:31.636934 20014 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:13:31.636940 20014 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:13:31.636942 20014 net.cpp:439] res4a_branch2a <- pool3
I0712 00:13:31.636945 20014 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:13:31.642999 20014 net.cpp:148] Setting up res4a_branch2a
I0712 00:13:31.643007 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.643009 20014 net.cpp:163] Memory required for data: 826277888
I0712 00:13:31.643013 20014 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:13:31.643018 20014 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:13:31.643019 20014 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:13:31.643021 20014 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:13:31.643641 20014 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:13:31.643647 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.643648 20014 net.cpp:163] Memory required for data: 834666496
I0712 00:13:31.643653 20014 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:13:31.643656 20014 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:13:31.643658 20014 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:13:31.643661 20014 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:13:31.643664 20014 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:13:31.643666 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.643667 20014 net.cpp:163] Memory required for data: 843055104
I0712 00:13:31.643669 20014 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:13:31.643674 20014 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:13:31.643676 20014 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:13:31.643678 20014 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:13:31.646868 20014 net.cpp:148] Setting up res4a_branch2b
I0712 00:13:31.646875 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.646878 20014 net.cpp:163] Memory required for data: 851443712
I0712 00:13:31.646880 20014 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:13:31.646884 20014 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:13:31.646886 20014 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:13:31.646889 20014 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:13:31.647507 20014 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:13:31.647513 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.647516 20014 net.cpp:163] Memory required for data: 859832320
I0712 00:13:31.647522 20014 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:13:31.647526 20014 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:13:31.647528 20014 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:13:31.647531 20014 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:13:31.647533 20014 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:13:31.647536 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.647537 20014 net.cpp:163] Memory required for data: 868220928
I0712 00:13:31.647539 20014 layer_factory.hpp:77] Creating layer pool4
I0712 00:13:31.647542 20014 net.cpp:98] Creating Layer pool4
I0712 00:13:31.647544 20014 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:13:31.647547 20014 net.cpp:413] pool4 -> pool4
I0712 00:13:31.647581 20014 net.cpp:148] Setting up pool4
I0712 00:13:31.647585 20014 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0712 00:13:31.647588 20014 net.cpp:163] Memory required for data: 876609536
I0712 00:13:31.647589 20014 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:13:31.647593 20014 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:13:31.647595 20014 net.cpp:439] res5a_branch2a <- pool4
I0712 00:13:31.647598 20014 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:13:31.673548 20014 net.cpp:148] Setting up res5a_branch2a
I0712 00:13:31.673568 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.673569 20014 net.cpp:163] Memory required for data: 893386752
I0712 00:13:31.673575 20014 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:13:31.673584 20014 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:13:31.673588 20014 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:13:31.673593 20014 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:13:31.674340 20014 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:13:31.674348 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.674350 20014 net.cpp:163] Memory required for data: 910163968
I0712 00:13:31.674356 20014 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:13:31.674360 20014 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:13:31.674362 20014 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:13:31.674365 20014 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:13:31.674370 20014 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:13:31.674371 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.674373 20014 net.cpp:163] Memory required for data: 926941184
I0712 00:13:31.674376 20014 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:13:31.674381 20014 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:13:31.674384 20014 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:13:31.674388 20014 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:13:31.687418 20014 net.cpp:148] Setting up res5a_branch2b
I0712 00:13:31.687436 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.687438 20014 net.cpp:163] Memory required for data: 943718400
I0712 00:13:31.687446 20014 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:13:31.687453 20014 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:13:31.687456 20014 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:13:31.687459 20014 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:13:31.688155 20014 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:13:31.688163 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.688165 20014 net.cpp:163] Memory required for data: 960495616
I0712 00:13:31.688170 20014 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:13:31.688174 20014 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:13:31.688176 20014 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:13:31.688179 20014 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:13:31.688184 20014 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:13:31.688186 20014 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0712 00:13:31.688187 20014 net.cpp:163] Memory required for data: 977272832
I0712 00:13:31.688189 20014 layer_factory.hpp:77] Creating layer out5a
I0712 00:13:31.688194 20014 net.cpp:98] Creating Layer out5a
I0712 00:13:31.688196 20014 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:13:31.688199 20014 net.cpp:413] out5a -> out5a
I0712 00:13:31.692421 20014 net.cpp:148] Setting up out5a
I0712 00:13:31.692430 20014 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:13:31.692431 20014 net.cpp:163] Memory required for data: 979369984
I0712 00:13:31.692435 20014 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:13:31.692440 20014 net.cpp:98] Creating Layer out5a/bn
I0712 00:13:31.692442 20014 net.cpp:439] out5a/bn <- out5a
I0712 00:13:31.692447 20014 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:13:31.693190 20014 net.cpp:148] Setting up out5a/bn
I0712 00:13:31.693197 20014 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:13:31.693199 20014 net.cpp:163] Memory required for data: 981467136
I0712 00:13:31.693204 20014 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:13:31.693207 20014 net.cpp:98] Creating Layer out5a/relu
I0712 00:13:31.693208 20014 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:13:31.693212 20014 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:13:31.693214 20014 net.cpp:148] Setting up out5a/relu
I0712 00:13:31.693217 20014 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:13:31.693218 20014 net.cpp:163] Memory required for data: 983564288
I0712 00:13:31.693220 20014 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:13:31.693228 20014 net.cpp:98] Creating Layer out5a_up2
I0712 00:13:31.693230 20014 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:13:31.693234 20014 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:13:31.693559 20014 net.cpp:148] Setting up out5a_up2
I0712 00:13:31.693567 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.693569 20014 net.cpp:163] Memory required for data: 991952896
I0712 00:13:31.693573 20014 layer_factory.hpp:77] Creating layer out3a
I0712 00:13:31.693579 20014 net.cpp:98] Creating Layer out3a
I0712 00:13:31.693583 20014 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:13:31.693586 20014 net.cpp:413] out3a -> out3a
I0712 00:13:31.694727 20014 net.cpp:148] Setting up out3a
I0712 00:13:31.694735 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.694736 20014 net.cpp:163] Memory required for data: 1000341504
I0712 00:13:31.694739 20014 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:13:31.694743 20014 net.cpp:98] Creating Layer out3a/bn
I0712 00:13:31.694746 20014 net.cpp:439] out3a/bn <- out3a
I0712 00:13:31.694748 20014 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:13:31.695493 20014 net.cpp:148] Setting up out3a/bn
I0712 00:13:31.695500 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.695502 20014 net.cpp:163] Memory required for data: 1008730112
I0712 00:13:31.695510 20014 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:13:31.695513 20014 net.cpp:98] Creating Layer out3a/relu
I0712 00:13:31.695514 20014 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:13:31.695518 20014 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:13:31.695520 20014 net.cpp:148] Setting up out3a/relu
I0712 00:13:31.695523 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.695524 20014 net.cpp:163] Memory required for data: 1017118720
I0712 00:13:31.695526 20014 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:13:31.695531 20014 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:13:31.695533 20014 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:13:31.695535 20014 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:13:31.695538 20014 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:13:31.695559 20014 net.cpp:148] Setting up out3_out5_combined
I0712 00:13:31.695564 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.695565 20014 net.cpp:163] Memory required for data: 1025507328
I0712 00:13:31.695569 20014 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:13:31.695574 20014 net.cpp:98] Creating Layer ctx_conv1
I0712 00:13:31.695577 20014 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:13:31.695581 20014 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:13:31.696646 20014 net.cpp:148] Setting up ctx_conv1
I0712 00:13:31.696652 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.696653 20014 net.cpp:163] Memory required for data: 1033895936
I0712 00:13:31.696657 20014 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:13:31.696660 20014 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:13:31.696662 20014 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:13:31.696665 20014 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:13:31.697386 20014 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:13:31.697391 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.697393 20014 net.cpp:163] Memory required for data: 1042284544
I0712 00:13:31.697398 20014 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:13:31.697402 20014 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:13:31.697403 20014 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:13:31.697405 20014 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:13:31.697408 20014 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:13:31.697412 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.697412 20014 net.cpp:163] Memory required for data: 1050673152
I0712 00:13:31.697414 20014 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:13:31.697417 20014 net.cpp:98] Creating Layer ctx_conv2
I0712 00:13:31.697419 20014 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:13:31.697422 20014 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:13:31.698477 20014 net.cpp:148] Setting up ctx_conv2
I0712 00:13:31.698484 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.698485 20014 net.cpp:163] Memory required for data: 1059061760
I0712 00:13:31.698489 20014 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:13:31.698493 20014 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:13:31.698494 20014 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:13:31.698496 20014 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:13:31.699306 20014 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:13:31.699311 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.699313 20014 net.cpp:163] Memory required for data: 1067450368
I0712 00:13:31.699318 20014 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:13:31.699321 20014 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:13:31.699322 20014 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:13:31.699324 20014 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:13:31.699328 20014 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:13:31.699331 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.699331 20014 net.cpp:163] Memory required for data: 1075838976
I0712 00:13:31.699333 20014 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:13:31.699337 20014 net.cpp:98] Creating Layer ctx_conv3
I0712 00:13:31.699338 20014 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:13:31.699342 20014 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:13:31.701370 20014 net.cpp:148] Setting up ctx_conv3
I0712 00:13:31.701378 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.701381 20014 net.cpp:163] Memory required for data: 1084227584
I0712 00:13:31.701385 20014 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:13:31.701388 20014 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:13:31.701390 20014 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:13:31.701393 20014 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:13:31.702152 20014 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:13:31.702158 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.702160 20014 net.cpp:163] Memory required for data: 1092616192
I0712 00:13:31.702165 20014 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:13:31.702168 20014 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:13:31.702170 20014 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:13:31.702172 20014 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:13:31.702175 20014 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:13:31.702178 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.702179 20014 net.cpp:163] Memory required for data: 1101004800
I0712 00:13:31.702181 20014 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:13:31.702185 20014 net.cpp:98] Creating Layer ctx_conv4
I0712 00:13:31.702188 20014 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:13:31.702189 20014 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:13:31.703289 20014 net.cpp:148] Setting up ctx_conv4
I0712 00:13:31.703295 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.703297 20014 net.cpp:163] Memory required for data: 1109393408
I0712 00:13:31.703300 20014 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:13:31.703303 20014 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:13:31.703305 20014 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:13:31.703308 20014 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:13:31.704066 20014 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:13:31.704074 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.704077 20014 net.cpp:163] Memory required for data: 1117782016
I0712 00:13:31.704084 20014 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:13:31.704088 20014 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:13:31.704092 20014 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:13:31.704095 20014 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:13:31.704099 20014 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:13:31.704103 20014 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:13:31.704105 20014 net.cpp:163] Memory required for data: 1126170624
I0712 00:13:31.704108 20014 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:13:31.704115 20014 net.cpp:98] Creating Layer ctx_final
I0712 00:13:31.704119 20014 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:13:31.704124 20014 net.cpp:413] ctx_final -> ctx_final
I0712 00:13:31.704807 20014 net.cpp:148] Setting up ctx_final
I0712 00:13:31.704818 20014 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:13:31.704820 20014 net.cpp:163] Memory required for data: 1127219200
I0712 00:13:31.704824 20014 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:13:31.704826 20014 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:13:31.704829 20014 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:13:31.704831 20014 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:13:31.704834 20014 net.cpp:148] Setting up ctx_final/relu
I0712 00:13:31.704838 20014 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:13:31.704838 20014 net.cpp:163] Memory required for data: 1128267776
I0712 00:13:31.704840 20014 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:13:31.704844 20014 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:13:31.704846 20014 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:13:31.704849 20014 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:13:31.705178 20014 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:13:31.705186 20014 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:13:31.705189 20014 net.cpp:163] Memory required for data: 1132462080
I0712 00:13:31.705193 20014 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:13:31.705199 20014 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:13:31.705202 20014 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:13:31.705206 20014 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:13:31.705502 20014 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:13:31.705507 20014 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:13:31.705509 20014 net.cpp:163] Memory required for data: 1149239296
I0712 00:13:31.705513 20014 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:13:31.705515 20014 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:13:31.705518 20014 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:13:31.705520 20014 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:13:31.705811 20014 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:13:31.705817 20014 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:13:31.705819 20014 net.cpp:163] Memory required for data: 1216348160
I0712 00:13:31.705821 20014 layer_factory.hpp:77] Creating layer prob
I0712 00:13:31.705824 20014 net.cpp:98] Creating Layer prob
I0712 00:13:31.705826 20014 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:13:31.705829 20014 net.cpp:413] prob -> prob
I0712 00:13:31.705910 20014 net.cpp:148] Setting up prob
I0712 00:13:31.705917 20014 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0712 00:13:31.705920 20014 net.cpp:163] Memory required for data: 1283457024
I0712 00:13:31.705924 20014 net.cpp:226] prob does not need backward computation.
I0712 00:13:31.705927 20014 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:13:31.705930 20014 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:13:31.705934 20014 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:13:31.705936 20014 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:13:31.705938 20014 net.cpp:226] ctx_final does not need backward computation.
I0712 00:13:31.705941 20014 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:13:31.705945 20014 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:13:31.705947 20014 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:13:31.705950 20014 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:13:31.705953 20014 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:13:31.705956 20014 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:13:31.705960 20014 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:13:31.705965 20014 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:13:31.705968 20014 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:13:31.705972 20014 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:13:31.705976 20014 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:13:31.705978 20014 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:13:31.705981 20014 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:13:31.705984 20014 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:13:31.705988 20014 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:13:31.705991 20014 net.cpp:226] out3a does not need backward computation.
I0712 00:13:31.705994 20014 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:13:31.705997 20014 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:13:31.706001 20014 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:13:31.706004 20014 net.cpp:226] out5a does not need backward computation.
I0712 00:13:31.706008 20014 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:13:31.706012 20014 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:13:31.706015 20014 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:13:31.706020 20014 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:13:31.706023 20014 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:13:31.706027 20014 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:13:31.706030 20014 net.cpp:226] pool4 does not need backward computation.
I0712 00:13:31.706035 20014 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:13:31.706039 20014 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:13:31.706043 20014 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:13:31.706048 20014 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:13:31.706053 20014 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:13:31.706055 20014 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:13:31.706059 20014 net.cpp:226] pool3 does not need backward computation.
I0712 00:13:31.706064 20014 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:13:31.706068 20014 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:13:31.706073 20014 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:13:31.706075 20014 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:13:31.706079 20014 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:13:31.706084 20014 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:13:31.706087 20014 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:13:31.706091 20014 net.cpp:226] pool2 does not need backward computation.
I0712 00:13:31.706095 20014 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:13:31.706099 20014 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:13:31.706104 20014 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:13:31.706107 20014 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:13:31.706111 20014 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:13:31.706115 20014 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:13:31.706120 20014 net.cpp:226] pool1 does not need backward computation.
I0712 00:13:31.706123 20014 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:13:31.706127 20014 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:13:31.706131 20014 net.cpp:226] conv1b does not need backward computation.
I0712 00:13:31.706135 20014 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:13:31.706138 20014 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:13:31.706142 20014 net.cpp:226] conv1a does not need backward computation.
I0712 00:13:31.706146 20014 net.cpp:226] data/bias does not need backward computation.
I0712 00:13:31.706149 20014 net.cpp:226] input does not need backward computation.
I0712 00:13:31.706152 20014 net.cpp:268] This network produces output prob
I0712 00:13:31.706192 20014 net.cpp:288] Network initialization done.
I0712 00:13:31.717248 20014 net.cpp:804] Ignoring source layer data
I0712 00:13:31.718538 20014 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['0'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
pixel_accuracy=0.957328099422, mean_iou=0.815832319681, iou=[ 0.93094649  0.92064387  0.75498228  0.57234347  0.90024548]
sparse eval.
