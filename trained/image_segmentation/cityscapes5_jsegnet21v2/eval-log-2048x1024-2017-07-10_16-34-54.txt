Logging output to training/train-log-2017-07-10_16-34-54.txt
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0710 16:34:55.392668  1259 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt
I0710 16:34:55.392694  1259 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0710 16:34:55.392698  1259 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0710 16:34:55.392976  1259 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 1024
      dim: 2048
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0710 16:34:55.393093  1259 layer_factory.hpp:77] Creating layer input
I0710 16:34:55.393103  1259 net.cpp:98] Creating Layer input
I0710 16:34:55.393106  1259 net.cpp:413] input -> data
I0710 16:34:55.394173  1259 net.cpp:148] Setting up input
I0710 16:34:55.394182  1259 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0710 16:34:55.394186  1259 net.cpp:163] Memory required for data: 25165824
I0710 16:34:55.394187  1259 layer_factory.hpp:77] Creating layer data/bias
I0710 16:34:55.394196  1259 net.cpp:98] Creating Layer data/bias
I0710 16:34:55.394198  1259 net.cpp:439] data/bias <- data
I0710 16:34:55.394201  1259 net.cpp:413] data/bias -> data/bias
I0710 16:34:55.397069  1259 net.cpp:148] Setting up data/bias
I0710 16:34:55.397089  1259 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0710 16:34:55.397090  1259 net.cpp:163] Memory required for data: 50331648
I0710 16:34:55.397100  1259 layer_factory.hpp:77] Creating layer conv1a
I0710 16:34:55.397109  1259 net.cpp:98] Creating Layer conv1a
I0710 16:34:55.397111  1259 net.cpp:439] conv1a <- data/bias
I0710 16:34:55.397114  1259 net.cpp:413] conv1a -> conv1a
I0710 16:34:55.399615  1259 net.cpp:148] Setting up conv1a
I0710 16:34:55.399624  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.399626  1259 net.cpp:163] Memory required for data: 117440512
I0710 16:34:55.399632  1259 layer_factory.hpp:77] Creating layer conv1a/bn
I0710 16:34:55.399637  1259 net.cpp:98] Creating Layer conv1a/bn
I0710 16:34:55.399639  1259 net.cpp:439] conv1a/bn <- conv1a
I0710 16:34:55.399642  1259 net.cpp:413] conv1a/bn -> conv1a/bn
I0710 16:34:55.401329  1259 net.cpp:148] Setting up conv1a/bn
I0710 16:34:55.401337  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.401340  1259 net.cpp:163] Memory required for data: 184549376
I0710 16:34:55.401345  1259 layer_factory.hpp:77] Creating layer conv1a/relu
I0710 16:34:55.401350  1259 net.cpp:98] Creating Layer conv1a/relu
I0710 16:34:55.401351  1259 net.cpp:439] conv1a/relu <- conv1a/bn
I0710 16:34:55.401353  1259 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0710 16:34:55.401363  1259 net.cpp:148] Setting up conv1a/relu
I0710 16:34:55.401366  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.401368  1259 net.cpp:163] Memory required for data: 251658240
I0710 16:34:55.401371  1259 layer_factory.hpp:77] Creating layer conv1b
I0710 16:34:55.401376  1259 net.cpp:98] Creating Layer conv1b
I0710 16:34:55.401381  1259 net.cpp:439] conv1b <- conv1a/bn
I0710 16:34:55.401386  1259 net.cpp:413] conv1b -> conv1b
I0710 16:34:55.402715  1259 net.cpp:148] Setting up conv1b
I0710 16:34:55.402724  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.402725  1259 net.cpp:163] Memory required for data: 318767104
I0710 16:34:55.402730  1259 layer_factory.hpp:77] Creating layer conv1b/bn
I0710 16:34:55.402736  1259 net.cpp:98] Creating Layer conv1b/bn
I0710 16:34:55.402740  1259 net.cpp:439] conv1b/bn <- conv1b
I0710 16:34:55.402741  1259 net.cpp:413] conv1b/bn -> conv1b/bn
I0710 16:34:55.404466  1259 net.cpp:148] Setting up conv1b/bn
I0710 16:34:55.404477  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.404479  1259 net.cpp:163] Memory required for data: 385875968
I0710 16:34:55.404484  1259 layer_factory.hpp:77] Creating layer conv1b/relu
I0710 16:34:55.404489  1259 net.cpp:98] Creating Layer conv1b/relu
I0710 16:34:55.404490  1259 net.cpp:439] conv1b/relu <- conv1b/bn
I0710 16:34:55.404494  1259 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0710 16:34:55.404497  1259 net.cpp:148] Setting up conv1b/relu
I0710 16:34:55.404500  1259 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:34:55.404501  1259 net.cpp:163] Memory required for data: 452984832
I0710 16:34:55.404503  1259 layer_factory.hpp:77] Creating layer pool1
I0710 16:34:55.404507  1259 net.cpp:98] Creating Layer pool1
I0710 16:34:55.404510  1259 net.cpp:439] pool1 <- conv1b/bn
I0710 16:34:55.404512  1259 net.cpp:413] pool1 -> pool1
I0710 16:34:55.404551  1259 net.cpp:148] Setting up pool1
I0710 16:34:55.404556  1259 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0710 16:34:55.404557  1259 net.cpp:163] Memory required for data: 469762048
I0710 16:34:55.404559  1259 layer_factory.hpp:77] Creating layer res2a_branch2a
I0710 16:34:55.404564  1259 net.cpp:98] Creating Layer res2a_branch2a
I0710 16:34:55.404567  1259 net.cpp:439] res2a_branch2a <- pool1
I0710 16:34:55.404568  1259 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0710 16:34:55.406884  1259 net.cpp:148] Setting up res2a_branch2a
I0710 16:34:55.406893  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.406895  1259 net.cpp:163] Memory required for data: 503316480
I0710 16:34:55.406900  1259 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0710 16:34:55.406906  1259 net.cpp:98] Creating Layer res2a_branch2a/bn
I0710 16:34:55.406908  1259 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0710 16:34:55.406910  1259 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0710 16:34:55.407631  1259 net.cpp:148] Setting up res2a_branch2a/bn
I0710 16:34:55.407639  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.407639  1259 net.cpp:163] Memory required for data: 536870912
I0710 16:34:55.407644  1259 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0710 16:34:55.407647  1259 net.cpp:98] Creating Layer res2a_branch2a/relu
I0710 16:34:55.407649  1259 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0710 16:34:55.407651  1259 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0710 16:34:55.407655  1259 net.cpp:148] Setting up res2a_branch2a/relu
I0710 16:34:55.407657  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.407660  1259 net.cpp:163] Memory required for data: 570425344
I0710 16:34:55.407660  1259 layer_factory.hpp:77] Creating layer res2a_branch2b
I0710 16:34:55.407665  1259 net.cpp:98] Creating Layer res2a_branch2b
I0710 16:34:55.407666  1259 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0710 16:34:55.407670  1259 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0710 16:34:55.408999  1259 net.cpp:148] Setting up res2a_branch2b
I0710 16:34:55.409008  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.409009  1259 net.cpp:163] Memory required for data: 603979776
I0710 16:34:55.409013  1259 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0710 16:34:55.409018  1259 net.cpp:98] Creating Layer res2a_branch2b/bn
I0710 16:34:55.409019  1259 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0710 16:34:55.409023  1259 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0710 16:34:55.409718  1259 net.cpp:148] Setting up res2a_branch2b/bn
I0710 16:34:55.409723  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.409725  1259 net.cpp:163] Memory required for data: 637534208
I0710 16:34:55.409730  1259 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0710 16:34:55.409732  1259 net.cpp:98] Creating Layer res2a_branch2b/relu
I0710 16:34:55.409734  1259 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0710 16:34:55.409736  1259 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0710 16:34:55.409739  1259 net.cpp:148] Setting up res2a_branch2b/relu
I0710 16:34:55.409742  1259 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:34:55.409744  1259 net.cpp:163] Memory required for data: 671088640
I0710 16:34:55.409745  1259 layer_factory.hpp:77] Creating layer pool2
I0710 16:34:55.409749  1259 net.cpp:98] Creating Layer pool2
I0710 16:34:55.409750  1259 net.cpp:439] pool2 <- res2a_branch2b/bn
I0710 16:34:55.409752  1259 net.cpp:413] pool2 -> pool2
I0710 16:34:55.409783  1259 net.cpp:148] Setting up pool2
I0710 16:34:55.409787  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.409788  1259 net.cpp:163] Memory required for data: 679477248
I0710 16:34:55.409790  1259 layer_factory.hpp:77] Creating layer res3a_branch2a
I0710 16:34:55.409795  1259 net.cpp:98] Creating Layer res3a_branch2a
I0710 16:34:55.409796  1259 net.cpp:439] res3a_branch2a <- pool2
I0710 16:34:55.409798  1259 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0710 16:34:55.412328  1259 net.cpp:148] Setting up res3a_branch2a
I0710 16:34:55.412336  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.412338  1259 net.cpp:163] Memory required for data: 696254464
I0710 16:34:55.412341  1259 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0710 16:34:55.412345  1259 net.cpp:98] Creating Layer res3a_branch2a/bn
I0710 16:34:55.412348  1259 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0710 16:34:55.412350  1259 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0710 16:34:55.412959  1259 net.cpp:148] Setting up res3a_branch2a/bn
I0710 16:34:55.412966  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.412967  1259 net.cpp:163] Memory required for data: 713031680
I0710 16:34:55.412973  1259 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0710 16:34:55.412976  1259 net.cpp:98] Creating Layer res3a_branch2a/relu
I0710 16:34:55.412978  1259 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0710 16:34:55.412981  1259 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0710 16:34:55.412984  1259 net.cpp:148] Setting up res3a_branch2a/relu
I0710 16:34:55.412987  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.412988  1259 net.cpp:163] Memory required for data: 729808896
I0710 16:34:55.412991  1259 layer_factory.hpp:77] Creating layer res3a_branch2b
I0710 16:34:55.412994  1259 net.cpp:98] Creating Layer res3a_branch2b
I0710 16:34:55.412997  1259 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0710 16:34:55.412999  1259 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0710 16:34:55.413998  1259 net.cpp:148] Setting up res3a_branch2b
I0710 16:34:55.414003  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.414005  1259 net.cpp:163] Memory required for data: 746586112
I0710 16:34:55.414008  1259 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0710 16:34:55.414011  1259 net.cpp:98] Creating Layer res3a_branch2b/bn
I0710 16:34:55.414013  1259 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0710 16:34:55.414016  1259 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0710 16:34:55.414633  1259 net.cpp:148] Setting up res3a_branch2b/bn
I0710 16:34:55.414639  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.414640  1259 net.cpp:163] Memory required for data: 763363328
I0710 16:34:55.414645  1259 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0710 16:34:55.414647  1259 net.cpp:98] Creating Layer res3a_branch2b/relu
I0710 16:34:55.414649  1259 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0710 16:34:55.414651  1259 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0710 16:34:55.414654  1259 net.cpp:148] Setting up res3a_branch2b/relu
I0710 16:34:55.414657  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.414659  1259 net.cpp:163] Memory required for data: 780140544
I0710 16:34:55.414660  1259 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:34:55.414664  1259 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:34:55.414665  1259 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0710 16:34:55.414667  1259 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0710 16:34:55.414669  1259 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0710 16:34:55.414701  1259 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:34:55.414705  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.414707  1259 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:34:55.414708  1259 net.cpp:163] Memory required for data: 813694976
I0710 16:34:55.414710  1259 layer_factory.hpp:77] Creating layer pool3
I0710 16:34:55.414713  1259 net.cpp:98] Creating Layer pool3
I0710 16:34:55.414716  1259 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0710 16:34:55.414718  1259 net.cpp:413] pool3 -> pool3
I0710 16:34:55.414753  1259 net.cpp:148] Setting up pool3
I0710 16:34:55.414757  1259 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0710 16:34:55.414759  1259 net.cpp:163] Memory required for data: 817889280
I0710 16:34:55.414760  1259 layer_factory.hpp:77] Creating layer res4a_branch2a
I0710 16:34:55.414767  1259 net.cpp:98] Creating Layer res4a_branch2a
I0710 16:34:55.414768  1259 net.cpp:439] res4a_branch2a <- pool3
I0710 16:34:55.414772  1259 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0710 16:34:55.421147  1259 net.cpp:148] Setting up res4a_branch2a
I0710 16:34:55.421164  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.421167  1259 net.cpp:163] Memory required for data: 826277888
I0710 16:34:55.421175  1259 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0710 16:34:55.421185  1259 net.cpp:98] Creating Layer res4a_branch2a/bn
I0710 16:34:55.421190  1259 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0710 16:34:55.421195  1259 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0710 16:34:55.422111  1259 net.cpp:148] Setting up res4a_branch2a/bn
I0710 16:34:55.422118  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.422122  1259 net.cpp:163] Memory required for data: 834666496
I0710 16:34:55.422128  1259 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0710 16:34:55.422132  1259 net.cpp:98] Creating Layer res4a_branch2a/relu
I0710 16:34:55.422135  1259 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0710 16:34:55.422139  1259 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0710 16:34:55.422144  1259 net.cpp:148] Setting up res4a_branch2a/relu
I0710 16:34:55.422147  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.422150  1259 net.cpp:163] Memory required for data: 843055104
I0710 16:34:55.422152  1259 layer_factory.hpp:77] Creating layer res4a_branch2b
I0710 16:34:55.422161  1259 net.cpp:98] Creating Layer res4a_branch2b
I0710 16:34:55.422164  1259 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0710 16:34:55.422168  1259 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0710 16:34:55.426455  1259 net.cpp:148] Setting up res4a_branch2b
I0710 16:34:55.426463  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.426466  1259 net.cpp:163] Memory required for data: 851443712
I0710 16:34:55.426471  1259 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0710 16:34:55.426477  1259 net.cpp:98] Creating Layer res4a_branch2b/bn
I0710 16:34:55.426481  1259 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0710 16:34:55.426484  1259 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0710 16:34:55.427331  1259 net.cpp:148] Setting up res4a_branch2b/bn
I0710 16:34:55.427338  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.427341  1259 net.cpp:163] Memory required for data: 859832320
I0710 16:34:55.427351  1259 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0710 16:34:55.427356  1259 net.cpp:98] Creating Layer res4a_branch2b/relu
I0710 16:34:55.427359  1259 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0710 16:34:55.427362  1259 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0710 16:34:55.427367  1259 net.cpp:148] Setting up res4a_branch2b/relu
I0710 16:34:55.427371  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.427373  1259 net.cpp:163] Memory required for data: 868220928
I0710 16:34:55.427376  1259 layer_factory.hpp:77] Creating layer pool4
I0710 16:34:55.427382  1259 net.cpp:98] Creating Layer pool4
I0710 16:34:55.427386  1259 net.cpp:439] pool4 <- res4a_branch2b/bn
I0710 16:34:55.427390  1259 net.cpp:413] pool4 -> pool4
I0710 16:34:55.427439  1259 net.cpp:148] Setting up pool4
I0710 16:34:55.427445  1259 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:34:55.427448  1259 net.cpp:163] Memory required for data: 876609536
I0710 16:34:55.427451  1259 layer_factory.hpp:77] Creating layer res5a_branch2a
I0710 16:34:55.427458  1259 net.cpp:98] Creating Layer res5a_branch2a
I0710 16:34:55.427460  1259 net.cpp:439] res5a_branch2a <- pool4
I0710 16:34:55.427464  1259 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0710 16:34:55.454896  1259 net.cpp:148] Setting up res5a_branch2a
I0710 16:34:55.454918  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.454922  1259 net.cpp:163] Memory required for data: 893386752
I0710 16:34:55.454931  1259 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0710 16:34:55.454942  1259 net.cpp:98] Creating Layer res5a_branch2a/bn
I0710 16:34:55.454946  1259 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0710 16:34:55.454952  1259 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0710 16:34:55.455842  1259 net.cpp:148] Setting up res5a_branch2a/bn
I0710 16:34:55.455849  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.455853  1259 net.cpp:163] Memory required for data: 910163968
I0710 16:34:55.455860  1259 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0710 16:34:55.455865  1259 net.cpp:98] Creating Layer res5a_branch2a/relu
I0710 16:34:55.455868  1259 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0710 16:34:55.455873  1259 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0710 16:34:55.455878  1259 net.cpp:148] Setting up res5a_branch2a/relu
I0710 16:34:55.455881  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.455884  1259 net.cpp:163] Memory required for data: 926941184
I0710 16:34:55.455888  1259 layer_factory.hpp:77] Creating layer res5a_branch2b
I0710 16:34:55.455895  1259 net.cpp:98] Creating Layer res5a_branch2b
I0710 16:34:55.455899  1259 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0710 16:34:55.455902  1259 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0710 16:34:55.470043  1259 net.cpp:148] Setting up res5a_branch2b
I0710 16:34:55.470055  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.470058  1259 net.cpp:163] Memory required for data: 943718400
I0710 16:34:55.470065  1259 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0710 16:34:55.470070  1259 net.cpp:98] Creating Layer res5a_branch2b/bn
I0710 16:34:55.470072  1259 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0710 16:34:55.470075  1259 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0710 16:34:55.470705  1259 net.cpp:148] Setting up res5a_branch2b/bn
I0710 16:34:55.470710  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.470712  1259 net.cpp:163] Memory required for data: 960495616
I0710 16:34:55.470716  1259 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0710 16:34:55.470719  1259 net.cpp:98] Creating Layer res5a_branch2b/relu
I0710 16:34:55.470721  1259 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0710 16:34:55.470723  1259 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0710 16:34:55.470727  1259 net.cpp:148] Setting up res5a_branch2b/relu
I0710 16:34:55.470731  1259 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:34:55.470732  1259 net.cpp:163] Memory required for data: 977272832
I0710 16:34:55.470733  1259 layer_factory.hpp:77] Creating layer out5a
I0710 16:34:55.470738  1259 net.cpp:98] Creating Layer out5a
I0710 16:34:55.470739  1259 net.cpp:439] out5a <- res5a_branch2b/bn
I0710 16:34:55.470742  1259 net.cpp:413] out5a -> out5a
I0710 16:34:55.474818  1259 net.cpp:148] Setting up out5a
I0710 16:34:55.474828  1259 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:34:55.474830  1259 net.cpp:163] Memory required for data: 979369984
I0710 16:34:55.474834  1259 layer_factory.hpp:77] Creating layer out5a/bn
I0710 16:34:55.474838  1259 net.cpp:98] Creating Layer out5a/bn
I0710 16:34:55.474840  1259 net.cpp:439] out5a/bn <- out5a
I0710 16:34:55.474845  1259 net.cpp:413] out5a/bn -> out5a/bn
I0710 16:34:55.475541  1259 net.cpp:148] Setting up out5a/bn
I0710 16:34:55.475546  1259 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:34:55.475548  1259 net.cpp:163] Memory required for data: 981467136
I0710 16:34:55.475553  1259 layer_factory.hpp:77] Creating layer out5a/relu
I0710 16:34:55.475555  1259 net.cpp:98] Creating Layer out5a/relu
I0710 16:34:55.475558  1259 net.cpp:439] out5a/relu <- out5a/bn
I0710 16:34:55.475560  1259 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0710 16:34:55.475564  1259 net.cpp:148] Setting up out5a/relu
I0710 16:34:55.475565  1259 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:34:55.475566  1259 net.cpp:163] Memory required for data: 983564288
I0710 16:34:55.475569  1259 layer_factory.hpp:77] Creating layer out5a_up2
I0710 16:34:55.475577  1259 net.cpp:98] Creating Layer out5a_up2
I0710 16:34:55.475579  1259 net.cpp:439] out5a_up2 <- out5a/bn
I0710 16:34:55.475582  1259 net.cpp:413] out5a_up2 -> out5a_up2
I0710 16:34:55.475818  1259 net.cpp:148] Setting up out5a_up2
I0710 16:34:55.475822  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.475824  1259 net.cpp:163] Memory required for data: 991952896
I0710 16:34:55.475826  1259 layer_factory.hpp:77] Creating layer out3a
I0710 16:34:55.475831  1259 net.cpp:98] Creating Layer out3a
I0710 16:34:55.475832  1259 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0710 16:34:55.475836  1259 net.cpp:413] out3a -> out3a
I0710 16:34:55.476867  1259 net.cpp:148] Setting up out3a
I0710 16:34:55.476872  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.476874  1259 net.cpp:163] Memory required for data: 1000341504
I0710 16:34:55.476877  1259 layer_factory.hpp:77] Creating layer out3a/bn
I0710 16:34:55.476881  1259 net.cpp:98] Creating Layer out3a/bn
I0710 16:34:55.476883  1259 net.cpp:439] out3a/bn <- out3a
I0710 16:34:55.476886  1259 net.cpp:413] out3a/bn -> out3a/bn
I0710 16:34:55.477584  1259 net.cpp:148] Setting up out3a/bn
I0710 16:34:55.477591  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.477591  1259 net.cpp:163] Memory required for data: 1008730112
I0710 16:34:55.477599  1259 layer_factory.hpp:77] Creating layer out3a/relu
I0710 16:34:55.477602  1259 net.cpp:98] Creating Layer out3a/relu
I0710 16:34:55.477604  1259 net.cpp:439] out3a/relu <- out3a/bn
I0710 16:34:55.477607  1259 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0710 16:34:55.477609  1259 net.cpp:148] Setting up out3a/relu
I0710 16:34:55.477612  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.477613  1259 net.cpp:163] Memory required for data: 1017118720
I0710 16:34:55.477614  1259 layer_factory.hpp:77] Creating layer out3_out5_combined
I0710 16:34:55.477620  1259 net.cpp:98] Creating Layer out3_out5_combined
I0710 16:34:55.477622  1259 net.cpp:439] out3_out5_combined <- out5a_up2
I0710 16:34:55.477624  1259 net.cpp:439] out3_out5_combined <- out3a/bn
I0710 16:34:55.477627  1259 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0710 16:34:55.477649  1259 net.cpp:148] Setting up out3_out5_combined
I0710 16:34:55.477653  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.477655  1259 net.cpp:163] Memory required for data: 1025507328
I0710 16:34:55.477658  1259 layer_factory.hpp:77] Creating layer ctx_conv1
I0710 16:34:55.477660  1259 net.cpp:98] Creating Layer ctx_conv1
I0710 16:34:55.477663  1259 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0710 16:34:55.477665  1259 net.cpp:413] ctx_conv1 -> ctx_conv1
I0710 16:34:55.478703  1259 net.cpp:148] Setting up ctx_conv1
I0710 16:34:55.478709  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.478711  1259 net.cpp:163] Memory required for data: 1033895936
I0710 16:34:55.478715  1259 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0710 16:34:55.478718  1259 net.cpp:98] Creating Layer ctx_conv1/bn
I0710 16:34:55.478720  1259 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0710 16:34:55.478724  1259 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0710 16:34:55.479434  1259 net.cpp:148] Setting up ctx_conv1/bn
I0710 16:34:55.479439  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.479440  1259 net.cpp:163] Memory required for data: 1042284544
I0710 16:34:55.479444  1259 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0710 16:34:55.479447  1259 net.cpp:98] Creating Layer ctx_conv1/relu
I0710 16:34:55.479449  1259 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0710 16:34:55.479451  1259 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0710 16:34:55.479454  1259 net.cpp:148] Setting up ctx_conv1/relu
I0710 16:34:55.479456  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.479459  1259 net.cpp:163] Memory required for data: 1050673152
I0710 16:34:55.479460  1259 layer_factory.hpp:77] Creating layer ctx_conv2
I0710 16:34:55.479463  1259 net.cpp:98] Creating Layer ctx_conv2
I0710 16:34:55.479465  1259 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0710 16:34:55.479467  1259 net.cpp:413] ctx_conv2 -> ctx_conv2
I0710 16:34:55.480487  1259 net.cpp:148] Setting up ctx_conv2
I0710 16:34:55.480491  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.480494  1259 net.cpp:163] Memory required for data: 1059061760
I0710 16:34:55.480496  1259 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0710 16:34:55.480499  1259 net.cpp:98] Creating Layer ctx_conv2/bn
I0710 16:34:55.480501  1259 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0710 16:34:55.480504  1259 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0710 16:34:55.481221  1259 net.cpp:148] Setting up ctx_conv2/bn
I0710 16:34:55.481227  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.481230  1259 net.cpp:163] Memory required for data: 1067450368
I0710 16:34:55.481233  1259 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0710 16:34:55.481236  1259 net.cpp:98] Creating Layer ctx_conv2/relu
I0710 16:34:55.481238  1259 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0710 16:34:55.481240  1259 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0710 16:34:55.481243  1259 net.cpp:148] Setting up ctx_conv2/relu
I0710 16:34:55.481245  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.481247  1259 net.cpp:163] Memory required for data: 1075838976
I0710 16:34:55.481248  1259 layer_factory.hpp:77] Creating layer ctx_conv3
I0710 16:34:55.481252  1259 net.cpp:98] Creating Layer ctx_conv3
I0710 16:34:55.481254  1259 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0710 16:34:55.481257  1259 net.cpp:413] ctx_conv3 -> ctx_conv3
I0710 16:34:55.483718  1259 net.cpp:148] Setting up ctx_conv3
I0710 16:34:55.483741  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.483744  1259 net.cpp:163] Memory required for data: 1084227584
I0710 16:34:55.483752  1259 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0710 16:34:55.483760  1259 net.cpp:98] Creating Layer ctx_conv3/bn
I0710 16:34:55.483764  1259 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0710 16:34:55.483769  1259 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0710 16:34:55.484807  1259 net.cpp:148] Setting up ctx_conv3/bn
I0710 16:34:55.484820  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.484824  1259 net.cpp:163] Memory required for data: 1092616192
I0710 16:34:55.484833  1259 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0710 16:34:55.484838  1259 net.cpp:98] Creating Layer ctx_conv3/relu
I0710 16:34:55.484840  1259 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0710 16:34:55.484843  1259 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0710 16:34:55.484849  1259 net.cpp:148] Setting up ctx_conv3/relu
I0710 16:34:55.484854  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.484858  1259 net.cpp:163] Memory required for data: 1101004800
I0710 16:34:55.484860  1259 layer_factory.hpp:77] Creating layer ctx_conv4
I0710 16:34:55.484869  1259 net.cpp:98] Creating Layer ctx_conv4
I0710 16:34:55.484874  1259 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0710 16:34:55.484876  1259 net.cpp:413] ctx_conv4 -> ctx_conv4
I0710 16:34:55.486294  1259 net.cpp:148] Setting up ctx_conv4
I0710 16:34:55.486302  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.486305  1259 net.cpp:163] Memory required for data: 1109393408
I0710 16:34:55.486310  1259 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0710 16:34:55.486315  1259 net.cpp:98] Creating Layer ctx_conv4/bn
I0710 16:34:55.486317  1259 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0710 16:34:55.486321  1259 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0710 16:34:55.487323  1259 net.cpp:148] Setting up ctx_conv4/bn
I0710 16:34:55.487330  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.487334  1259 net.cpp:163] Memory required for data: 1117782016
I0710 16:34:55.487340  1259 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0710 16:34:55.487344  1259 net.cpp:98] Creating Layer ctx_conv4/relu
I0710 16:34:55.487347  1259 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0710 16:34:55.487350  1259 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0710 16:34:55.487354  1259 net.cpp:148] Setting up ctx_conv4/relu
I0710 16:34:55.487359  1259 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:34:55.487361  1259 net.cpp:163] Memory required for data: 1126170624
I0710 16:34:55.487363  1259 layer_factory.hpp:77] Creating layer ctx_final
I0710 16:34:55.487368  1259 net.cpp:98] Creating Layer ctx_final
I0710 16:34:55.487371  1259 net.cpp:439] ctx_final <- ctx_conv4/bn
I0710 16:34:55.487375  1259 net.cpp:413] ctx_final -> ctx_final
I0710 16:34:55.487937  1259 net.cpp:148] Setting up ctx_final
I0710 16:34:55.487944  1259 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0710 16:34:55.487947  1259 net.cpp:163] Memory required for data: 1127219200
I0710 16:34:55.487952  1259 layer_factory.hpp:77] Creating layer ctx_final/relu
I0710 16:34:55.487957  1259 net.cpp:98] Creating Layer ctx_final/relu
I0710 16:34:55.487959  1259 net.cpp:439] ctx_final/relu <- ctx_final
I0710 16:34:55.487962  1259 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0710 16:34:55.487967  1259 net.cpp:148] Setting up ctx_final/relu
I0710 16:34:55.487970  1259 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0710 16:34:55.487972  1259 net.cpp:163] Memory required for data: 1128267776
I0710 16:34:55.487975  1259 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0710 16:34:55.487980  1259 net.cpp:98] Creating Layer out_deconv_final_up2
I0710 16:34:55.487984  1259 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0710 16:34:55.487988  1259 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0710 16:34:55.488309  1259 net.cpp:148] Setting up out_deconv_final_up2
I0710 16:34:55.488317  1259 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0710 16:34:55.488319  1259 net.cpp:163] Memory required for data: 1132462080
I0710 16:34:55.488322  1259 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0710 16:34:55.488327  1259 net.cpp:98] Creating Layer out_deconv_final_up4
I0710 16:34:55.488330  1259 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0710 16:34:55.488333  1259 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0710 16:34:55.488647  1259 net.cpp:148] Setting up out_deconv_final_up4
I0710 16:34:55.488653  1259 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0710 16:34:55.488656  1259 net.cpp:163] Memory required for data: 1149239296
I0710 16:34:55.488659  1259 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0710 16:34:55.488664  1259 net.cpp:98] Creating Layer out_deconv_final_up8
I0710 16:34:55.488667  1259 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0710 16:34:55.488670  1259 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0710 16:34:55.488991  1259 net.cpp:148] Setting up out_deconv_final_up8
I0710 16:34:55.488997  1259 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0710 16:34:55.489001  1259 net.cpp:163] Memory required for data: 1216348160
I0710 16:34:55.489004  1259 layer_factory.hpp:77] Creating layer prob
I0710 16:34:55.489008  1259 net.cpp:98] Creating Layer prob
I0710 16:34:55.489012  1259 net.cpp:439] prob <- out_deconv_final_up8
I0710 16:34:55.489015  1259 net.cpp:413] prob -> prob
I0710 16:34:55.489112  1259 net.cpp:148] Setting up prob
I0710 16:34:55.489117  1259 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0710 16:34:55.489120  1259 net.cpp:163] Memory required for data: 1283457024
I0710 16:34:55.489123  1259 net.cpp:226] prob does not need backward computation.
I0710 16:34:55.489126  1259 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0710 16:34:55.489130  1259 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0710 16:34:55.489132  1259 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0710 16:34:55.489135  1259 net.cpp:226] ctx_final/relu does not need backward computation.
I0710 16:34:55.489138  1259 net.cpp:226] ctx_final does not need backward computation.
I0710 16:34:55.489141  1259 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0710 16:34:55.489143  1259 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0710 16:34:55.489146  1259 net.cpp:226] ctx_conv4 does not need backward computation.
I0710 16:34:55.489150  1259 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0710 16:34:55.489153  1259 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0710 16:34:55.489156  1259 net.cpp:226] ctx_conv3 does not need backward computation.
I0710 16:34:55.489159  1259 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0710 16:34:55.489162  1259 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0710 16:34:55.489166  1259 net.cpp:226] ctx_conv2 does not need backward computation.
I0710 16:34:55.489168  1259 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0710 16:34:55.489171  1259 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0710 16:34:55.489174  1259 net.cpp:226] ctx_conv1 does not need backward computation.
I0710 16:34:55.489178  1259 net.cpp:226] out3_out5_combined does not need backward computation.
I0710 16:34:55.489182  1259 net.cpp:226] out3a/relu does not need backward computation.
I0710 16:34:55.489187  1259 net.cpp:226] out3a/bn does not need backward computation.
I0710 16:34:55.489189  1259 net.cpp:226] out3a does not need backward computation.
I0710 16:34:55.489193  1259 net.cpp:226] out5a_up2 does not need backward computation.
I0710 16:34:55.489197  1259 net.cpp:226] out5a/relu does not need backward computation.
I0710 16:34:55.489202  1259 net.cpp:226] out5a/bn does not need backward computation.
I0710 16:34:55.489204  1259 net.cpp:226] out5a does not need backward computation.
I0710 16:34:55.489207  1259 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0710 16:34:55.489212  1259 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0710 16:34:55.489215  1259 net.cpp:226] res5a_branch2b does not need backward computation.
I0710 16:34:55.489218  1259 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0710 16:34:55.489223  1259 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0710 16:34:55.489225  1259 net.cpp:226] res5a_branch2a does not need backward computation.
I0710 16:34:55.489229  1259 net.cpp:226] pool4 does not need backward computation.
I0710 16:34:55.489233  1259 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0710 16:34:55.489236  1259 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0710 16:34:55.489239  1259 net.cpp:226] res4a_branch2b does not need backward computation.
I0710 16:34:55.489243  1259 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0710 16:34:55.489246  1259 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0710 16:34:55.489250  1259 net.cpp:226] res4a_branch2a does not need backward computation.
I0710 16:34:55.489254  1259 net.cpp:226] pool3 does not need backward computation.
I0710 16:34:55.489259  1259 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0710 16:34:55.489262  1259 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0710 16:34:55.489265  1259 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0710 16:34:55.489269  1259 net.cpp:226] res3a_branch2b does not need backward computation.
I0710 16:34:55.489272  1259 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0710 16:34:55.489275  1259 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0710 16:34:55.489279  1259 net.cpp:226] res3a_branch2a does not need backward computation.
I0710 16:34:55.489284  1259 net.cpp:226] pool2 does not need backward computation.
I0710 16:34:55.489286  1259 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0710 16:34:55.489290  1259 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0710 16:34:55.489293  1259 net.cpp:226] res2a_branch2b does not need backward computation.
I0710 16:34:55.489296  1259 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0710 16:34:55.489300  1259 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0710 16:34:55.489305  1259 net.cpp:226] res2a_branch2a does not need backward computation.
I0710 16:34:55.489308  1259 net.cpp:226] pool1 does not need backward computation.
I0710 16:34:55.489312  1259 net.cpp:226] conv1b/relu does not need backward computation.
I0710 16:34:55.489316  1259 net.cpp:226] conv1b/bn does not need backward computation.
I0710 16:34:55.489320  1259 net.cpp:226] conv1b does not need backward computation.
I0710 16:34:55.489323  1259 net.cpp:226] conv1a/relu does not need backward computation.
I0710 16:34:55.489327  1259 net.cpp:226] conv1a/bn does not need backward computation.
I0710 16:34:55.489331  1259 net.cpp:226] conv1a does not need backward computation.
I0710 16:34:55.489336  1259 net.cpp:226] data/bias does not need backward computation.
I0710 16:34:55.489338  1259 net.cpp:226] input does not need backward computation.
I0710 16:34:55.489342  1259 net.cpp:268] This network produces output prob
I0710 16:34:55.489377  1259 net.cpp:288] Network initialization done.
I0710 16:34:55.499702  1259 net.cpp:804] Ignoring source layer data
I0710 16:34:55.501021  1259 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['0'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
pixel_accuracy=0.9615297746, mean_iou=0.832698894373, iou=[ 0.9375672   0.92814976  0.77122424  0.61624874  0.91030453]
initial eval.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0710 16:37:23.175853  4738 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt
I0710 16:37:23.175881  4738 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0710 16:37:23.175885  4738 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0710 16:37:23.176172  4738 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 1024
      dim: 2048
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0710 16:37:23.176308  4738 layer_factory.hpp:77] Creating layer input
I0710 16:37:23.176318  4738 net.cpp:98] Creating Layer input
I0710 16:37:23.176322  4738 net.cpp:413] input -> data
I0710 16:37:23.177434  4738 net.cpp:148] Setting up input
I0710 16:37:23.177445  4738 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0710 16:37:23.177448  4738 net.cpp:163] Memory required for data: 25165824
I0710 16:37:23.177453  4738 layer_factory.hpp:77] Creating layer data/bias
I0710 16:37:23.177465  4738 net.cpp:98] Creating Layer data/bias
I0710 16:37:23.177469  4738 net.cpp:439] data/bias <- data
I0710 16:37:23.177474  4738 net.cpp:413] data/bias -> data/bias
I0710 16:37:23.180344  4738 net.cpp:148] Setting up data/bias
I0710 16:37:23.180366  4738 net.cpp:155] Top shape: 1 3 1024 2048 (6291456)
I0710 16:37:23.180371  4738 net.cpp:163] Memory required for data: 50331648
I0710 16:37:23.180387  4738 layer_factory.hpp:77] Creating layer conv1a
I0710 16:37:23.180402  4738 net.cpp:98] Creating Layer conv1a
I0710 16:37:23.180405  4738 net.cpp:439] conv1a <- data/bias
I0710 16:37:23.180410  4738 net.cpp:413] conv1a -> conv1a
I0710 16:37:23.182946  4738 net.cpp:148] Setting up conv1a
I0710 16:37:23.182957  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.182961  4738 net.cpp:163] Memory required for data: 117440512
I0710 16:37:23.182970  4738 layer_factory.hpp:77] Creating layer conv1a/bn
I0710 16:37:23.182978  4738 net.cpp:98] Creating Layer conv1a/bn
I0710 16:37:23.182982  4738 net.cpp:439] conv1a/bn <- conv1a
I0710 16:37:23.182987  4738 net.cpp:413] conv1a/bn -> conv1a/bn
I0710 16:37:23.184695  4738 net.cpp:148] Setting up conv1a/bn
I0710 16:37:23.184705  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.184708  4738 net.cpp:163] Memory required for data: 184549376
I0710 16:37:23.184718  4738 layer_factory.hpp:77] Creating layer conv1a/relu
I0710 16:37:23.184725  4738 net.cpp:98] Creating Layer conv1a/relu
I0710 16:37:23.184729  4738 net.cpp:439] conv1a/relu <- conv1a/bn
I0710 16:37:23.184734  4738 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0710 16:37:23.184746  4738 net.cpp:148] Setting up conv1a/relu
I0710 16:37:23.184751  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.184752  4738 net.cpp:163] Memory required for data: 251658240
I0710 16:37:23.184756  4738 layer_factory.hpp:77] Creating layer conv1b
I0710 16:37:23.184763  4738 net.cpp:98] Creating Layer conv1b
I0710 16:37:23.184767  4738 net.cpp:439] conv1b <- conv1a/bn
I0710 16:37:23.184770  4738 net.cpp:413] conv1b -> conv1b
I0710 16:37:23.186139  4738 net.cpp:148] Setting up conv1b
I0710 16:37:23.186149  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.186152  4738 net.cpp:163] Memory required for data: 318767104
I0710 16:37:23.186159  4738 layer_factory.hpp:77] Creating layer conv1b/bn
I0710 16:37:23.186170  4738 net.cpp:98] Creating Layer conv1b/bn
I0710 16:37:23.186174  4738 net.cpp:439] conv1b/bn <- conv1b
I0710 16:37:23.186178  4738 net.cpp:413] conv1b/bn -> conv1b/bn
I0710 16:37:23.188194  4738 net.cpp:148] Setting up conv1b/bn
I0710 16:37:23.188205  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.188208  4738 net.cpp:163] Memory required for data: 385875968
I0710 16:37:23.188217  4738 layer_factory.hpp:77] Creating layer conv1b/relu
I0710 16:37:23.188225  4738 net.cpp:98] Creating Layer conv1b/relu
I0710 16:37:23.188228  4738 net.cpp:439] conv1b/relu <- conv1b/bn
I0710 16:37:23.188233  4738 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0710 16:37:23.188241  4738 net.cpp:148] Setting up conv1b/relu
I0710 16:37:23.188244  4738 net.cpp:155] Top shape: 1 32 512 1024 (16777216)
I0710 16:37:23.188247  4738 net.cpp:163] Memory required for data: 452984832
I0710 16:37:23.188251  4738 layer_factory.hpp:77] Creating layer pool1
I0710 16:37:23.188256  4738 net.cpp:98] Creating Layer pool1
I0710 16:37:23.188261  4738 net.cpp:439] pool1 <- conv1b/bn
I0710 16:37:23.188264  4738 net.cpp:413] pool1 -> pool1
I0710 16:37:23.188308  4738 net.cpp:148] Setting up pool1
I0710 16:37:23.188313  4738 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0710 16:37:23.188315  4738 net.cpp:163] Memory required for data: 469762048
I0710 16:37:23.188318  4738 layer_factory.hpp:77] Creating layer res2a_branch2a
I0710 16:37:23.188325  4738 net.cpp:98] Creating Layer res2a_branch2a
I0710 16:37:23.188329  4738 net.cpp:439] res2a_branch2a <- pool1
I0710 16:37:23.188333  4738 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0710 16:37:23.191110  4738 net.cpp:148] Setting up res2a_branch2a
I0710 16:37:23.191136  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.191139  4738 net.cpp:163] Memory required for data: 503316480
I0710 16:37:23.191154  4738 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0710 16:37:23.191167  4738 net.cpp:98] Creating Layer res2a_branch2a/bn
I0710 16:37:23.191174  4738 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0710 16:37:23.191181  4738 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0710 16:37:23.192117  4738 net.cpp:148] Setting up res2a_branch2a/bn
I0710 16:37:23.192144  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.192148  4738 net.cpp:163] Memory required for data: 536870912
I0710 16:37:23.192160  4738 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0710 16:37:23.192169  4738 net.cpp:98] Creating Layer res2a_branch2a/relu
I0710 16:37:23.192173  4738 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0710 16:37:23.192179  4738 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0710 16:37:23.192188  4738 net.cpp:148] Setting up res2a_branch2a/relu
I0710 16:37:23.192193  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.192195  4738 net.cpp:163] Memory required for data: 570425344
I0710 16:37:23.192198  4738 layer_factory.hpp:77] Creating layer res2a_branch2b
I0710 16:37:23.192206  4738 net.cpp:98] Creating Layer res2a_branch2b
I0710 16:37:23.192210  4738 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0710 16:37:23.192214  4738 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0710 16:37:23.193857  4738 net.cpp:148] Setting up res2a_branch2b
I0710 16:37:23.193877  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.193881  4738 net.cpp:163] Memory required for data: 603979776
I0710 16:37:23.193887  4738 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0710 16:37:23.193900  4738 net.cpp:98] Creating Layer res2a_branch2b/bn
I0710 16:37:23.193904  4738 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0710 16:37:23.193909  4738 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0710 16:37:23.194705  4738 net.cpp:148] Setting up res2a_branch2b/bn
I0710 16:37:23.194713  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.194716  4738 net.cpp:163] Memory required for data: 637534208
I0710 16:37:23.194725  4738 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0710 16:37:23.194730  4738 net.cpp:98] Creating Layer res2a_branch2b/relu
I0710 16:37:23.194735  4738 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0710 16:37:23.194739  4738 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0710 16:37:23.194746  4738 net.cpp:148] Setting up res2a_branch2b/relu
I0710 16:37:23.194751  4738 net.cpp:155] Top shape: 1 64 256 512 (8388608)
I0710 16:37:23.194753  4738 net.cpp:163] Memory required for data: 671088640
I0710 16:37:23.194757  4738 layer_factory.hpp:77] Creating layer pool2
I0710 16:37:23.194762  4738 net.cpp:98] Creating Layer pool2
I0710 16:37:23.194766  4738 net.cpp:439] pool2 <- res2a_branch2b/bn
I0710 16:37:23.194770  4738 net.cpp:413] pool2 -> pool2
I0710 16:37:23.194810  4738 net.cpp:148] Setting up pool2
I0710 16:37:23.194815  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.194818  4738 net.cpp:163] Memory required for data: 679477248
I0710 16:37:23.194821  4738 layer_factory.hpp:77] Creating layer res3a_branch2a
I0710 16:37:23.194829  4738 net.cpp:98] Creating Layer res3a_branch2a
I0710 16:37:23.194833  4738 net.cpp:439] res3a_branch2a <- pool2
I0710 16:37:23.194838  4738 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0710 16:37:23.197871  4738 net.cpp:148] Setting up res3a_branch2a
I0710 16:37:23.197911  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.197914  4738 net.cpp:163] Memory required for data: 696254464
I0710 16:37:23.197926  4738 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0710 16:37:23.197942  4738 net.cpp:98] Creating Layer res3a_branch2a/bn
I0710 16:37:23.197947  4738 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0710 16:37:23.197957  4738 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0710 16:37:23.198694  4738 net.cpp:148] Setting up res3a_branch2a/bn
I0710 16:37:23.198704  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.198706  4738 net.cpp:163] Memory required for data: 713031680
I0710 16:37:23.198716  4738 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0710 16:37:23.198724  4738 net.cpp:98] Creating Layer res3a_branch2a/relu
I0710 16:37:23.198729  4738 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0710 16:37:23.198732  4738 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0710 16:37:23.198741  4738 net.cpp:148] Setting up res3a_branch2a/relu
I0710 16:37:23.198745  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.198748  4738 net.cpp:163] Memory required for data: 729808896
I0710 16:37:23.198751  4738 layer_factory.hpp:77] Creating layer res3a_branch2b
I0710 16:37:23.198758  4738 net.cpp:98] Creating Layer res3a_branch2b
I0710 16:37:23.198761  4738 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0710 16:37:23.198766  4738 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0710 16:37:23.199838  4738 net.cpp:148] Setting up res3a_branch2b
I0710 16:37:23.199848  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.199851  4738 net.cpp:163] Memory required for data: 746586112
I0710 16:37:23.199856  4738 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0710 16:37:23.199864  4738 net.cpp:98] Creating Layer res3a_branch2b/bn
I0710 16:37:23.199868  4738 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0710 16:37:23.199873  4738 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0710 16:37:23.200558  4738 net.cpp:148] Setting up res3a_branch2b/bn
I0710 16:37:23.200572  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.200574  4738 net.cpp:163] Memory required for data: 763363328
I0710 16:37:23.200582  4738 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0710 16:37:23.200589  4738 net.cpp:98] Creating Layer res3a_branch2b/relu
I0710 16:37:23.200593  4738 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0710 16:37:23.200598  4738 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0710 16:37:23.200606  4738 net.cpp:148] Setting up res3a_branch2b/relu
I0710 16:37:23.200610  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.200613  4738 net.cpp:163] Memory required for data: 780140544
I0710 16:37:23.200616  4738 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:37:23.200621  4738 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:37:23.200625  4738 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0710 16:37:23.200629  4738 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0710 16:37:23.200637  4738 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0710 16:37:23.200688  4738 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0710 16:37:23.200695  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.200698  4738 net.cpp:155] Top shape: 1 128 128 256 (4194304)
I0710 16:37:23.200701  4738 net.cpp:163] Memory required for data: 813694976
I0710 16:37:23.200704  4738 layer_factory.hpp:77] Creating layer pool3
I0710 16:37:23.200712  4738 net.cpp:98] Creating Layer pool3
I0710 16:37:23.200716  4738 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0710 16:37:23.200721  4738 net.cpp:413] pool3 -> pool3
I0710 16:37:23.200763  4738 net.cpp:148] Setting up pool3
I0710 16:37:23.200768  4738 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0710 16:37:23.200772  4738 net.cpp:163] Memory required for data: 817889280
I0710 16:37:23.200774  4738 layer_factory.hpp:77] Creating layer res4a_branch2a
I0710 16:37:23.200786  4738 net.cpp:98] Creating Layer res4a_branch2a
I0710 16:37:23.200789  4738 net.cpp:439] res4a_branch2a <- pool3
I0710 16:37:23.200794  4738 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0710 16:37:23.207558  4738 net.cpp:148] Setting up res4a_branch2a
I0710 16:37:23.207581  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.207583  4738 net.cpp:163] Memory required for data: 826277888
I0710 16:37:23.207592  4738 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0710 16:37:23.207602  4738 net.cpp:98] Creating Layer res4a_branch2a/bn
I0710 16:37:23.207607  4738 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0710 16:37:23.207614  4738 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0710 16:37:23.208277  4738 net.cpp:148] Setting up res4a_branch2a/bn
I0710 16:37:23.208284  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.208287  4738 net.cpp:163] Memory required for data: 834666496
I0710 16:37:23.208295  4738 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0710 16:37:23.208302  4738 net.cpp:98] Creating Layer res4a_branch2a/relu
I0710 16:37:23.208304  4738 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0710 16:37:23.208309  4738 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0710 16:37:23.208317  4738 net.cpp:148] Setting up res4a_branch2a/relu
I0710 16:37:23.208320  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.208323  4738 net.cpp:163] Memory required for data: 843055104
I0710 16:37:23.208326  4738 layer_factory.hpp:77] Creating layer res4a_branch2b
I0710 16:37:23.208335  4738 net.cpp:98] Creating Layer res4a_branch2b
I0710 16:37:23.208338  4738 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0710 16:37:23.208343  4738 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0710 16:37:23.211594  4738 net.cpp:148] Setting up res4a_branch2b
I0710 16:37:23.211604  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.211607  4738 net.cpp:163] Memory required for data: 851443712
I0710 16:37:23.211612  4738 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0710 16:37:23.211619  4738 net.cpp:98] Creating Layer res4a_branch2b/bn
I0710 16:37:23.211623  4738 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0710 16:37:23.211628  4738 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0710 16:37:23.212276  4738 net.cpp:148] Setting up res4a_branch2b/bn
I0710 16:37:23.212282  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.212285  4738 net.cpp:163] Memory required for data: 859832320
I0710 16:37:23.212296  4738 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0710 16:37:23.212301  4738 net.cpp:98] Creating Layer res4a_branch2b/relu
I0710 16:37:23.212306  4738 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0710 16:37:23.212309  4738 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0710 16:37:23.212316  4738 net.cpp:148] Setting up res4a_branch2b/relu
I0710 16:37:23.212321  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.212323  4738 net.cpp:163] Memory required for data: 868220928
I0710 16:37:23.212327  4738 layer_factory.hpp:77] Creating layer pool4
I0710 16:37:23.212332  4738 net.cpp:98] Creating Layer pool4
I0710 16:37:23.212334  4738 net.cpp:439] pool4 <- res4a_branch2b/bn
I0710 16:37:23.212338  4738 net.cpp:413] pool4 -> pool4
I0710 16:37:23.212380  4738 net.cpp:148] Setting up pool4
I0710 16:37:23.212385  4738 net.cpp:155] Top shape: 1 256 64 128 (2097152)
I0710 16:37:23.212388  4738 net.cpp:163] Memory required for data: 876609536
I0710 16:37:23.212391  4738 layer_factory.hpp:77] Creating layer res5a_branch2a
I0710 16:37:23.212397  4738 net.cpp:98] Creating Layer res5a_branch2a
I0710 16:37:23.212401  4738 net.cpp:439] res5a_branch2a <- pool4
I0710 16:37:23.212405  4738 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0710 16:37:23.238533  4738 net.cpp:148] Setting up res5a_branch2a
I0710 16:37:23.238551  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.238554  4738 net.cpp:163] Memory required for data: 893386752
I0710 16:37:23.238562  4738 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0710 16:37:23.238574  4738 net.cpp:98] Creating Layer res5a_branch2a/bn
I0710 16:37:23.238579  4738 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0710 16:37:23.238585  4738 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0710 16:37:23.239274  4738 net.cpp:148] Setting up res5a_branch2a/bn
I0710 16:37:23.239281  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.239284  4738 net.cpp:163] Memory required for data: 910163968
I0710 16:37:23.239291  4738 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0710 16:37:23.239296  4738 net.cpp:98] Creating Layer res5a_branch2a/relu
I0710 16:37:23.239301  4738 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0710 16:37:23.239305  4738 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0710 16:37:23.239311  4738 net.cpp:148] Setting up res5a_branch2a/relu
I0710 16:37:23.239315  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.239318  4738 net.cpp:163] Memory required for data: 926941184
I0710 16:37:23.239321  4738 layer_factory.hpp:77] Creating layer res5a_branch2b
I0710 16:37:23.239329  4738 net.cpp:98] Creating Layer res5a_branch2b
I0710 16:37:23.239332  4738 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0710 16:37:23.239336  4738 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0710 16:37:23.252128  4738 net.cpp:148] Setting up res5a_branch2b
I0710 16:37:23.252140  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.252143  4738 net.cpp:163] Memory required for data: 943718400
I0710 16:37:23.252153  4738 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0710 16:37:23.252162  4738 net.cpp:98] Creating Layer res5a_branch2b/bn
I0710 16:37:23.252167  4738 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0710 16:37:23.252172  4738 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0710 16:37:23.252852  4738 net.cpp:148] Setting up res5a_branch2b/bn
I0710 16:37:23.252859  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.252862  4738 net.cpp:163] Memory required for data: 960495616
I0710 16:37:23.252871  4738 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0710 16:37:23.252876  4738 net.cpp:98] Creating Layer res5a_branch2b/relu
I0710 16:37:23.252879  4738 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0710 16:37:23.252883  4738 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0710 16:37:23.252890  4738 net.cpp:148] Setting up res5a_branch2b/relu
I0710 16:37:23.252895  4738 net.cpp:155] Top shape: 1 512 64 128 (4194304)
I0710 16:37:23.252898  4738 net.cpp:163] Memory required for data: 977272832
I0710 16:37:23.252902  4738 layer_factory.hpp:77] Creating layer out5a
I0710 16:37:23.252907  4738 net.cpp:98] Creating Layer out5a
I0710 16:37:23.252910  4738 net.cpp:439] out5a <- res5a_branch2b/bn
I0710 16:37:23.252915  4738 net.cpp:413] out5a -> out5a
I0710 16:37:23.256994  4738 net.cpp:148] Setting up out5a
I0710 16:37:23.257004  4738 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:37:23.257006  4738 net.cpp:163] Memory required for data: 979369984
I0710 16:37:23.257012  4738 layer_factory.hpp:77] Creating layer out5a/bn
I0710 16:37:23.257019  4738 net.cpp:98] Creating Layer out5a/bn
I0710 16:37:23.257025  4738 net.cpp:439] out5a/bn <- out5a
I0710 16:37:23.257031  4738 net.cpp:413] out5a/bn -> out5a/bn
I0710 16:37:23.257761  4738 net.cpp:148] Setting up out5a/bn
I0710 16:37:23.257768  4738 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:37:23.257771  4738 net.cpp:163] Memory required for data: 981467136
I0710 16:37:23.257779  4738 layer_factory.hpp:77] Creating layer out5a/relu
I0710 16:37:23.257784  4738 net.cpp:98] Creating Layer out5a/relu
I0710 16:37:23.257787  4738 net.cpp:439] out5a/relu <- out5a/bn
I0710 16:37:23.257792  4738 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0710 16:37:23.257799  4738 net.cpp:148] Setting up out5a/relu
I0710 16:37:23.257804  4738 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0710 16:37:23.257807  4738 net.cpp:163] Memory required for data: 983564288
I0710 16:37:23.257810  4738 layer_factory.hpp:77] Creating layer out5a_up2
I0710 16:37:23.257820  4738 net.cpp:98] Creating Layer out5a_up2
I0710 16:37:23.257824  4738 net.cpp:439] out5a_up2 <- out5a/bn
I0710 16:37:23.257829  4738 net.cpp:413] out5a_up2 -> out5a_up2
I0710 16:37:23.258090  4738 net.cpp:148] Setting up out5a_up2
I0710 16:37:23.258096  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.258100  4738 net.cpp:163] Memory required for data: 991952896
I0710 16:37:23.258103  4738 layer_factory.hpp:77] Creating layer out3a
I0710 16:37:23.258110  4738 net.cpp:98] Creating Layer out3a
I0710 16:37:23.258113  4738 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0710 16:37:23.258118  4738 net.cpp:413] out3a -> out3a
I0710 16:37:23.259168  4738 net.cpp:148] Setting up out3a
I0710 16:37:23.259176  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.259178  4738 net.cpp:163] Memory required for data: 1000341504
I0710 16:37:23.259182  4738 layer_factory.hpp:77] Creating layer out3a/bn
I0710 16:37:23.259188  4738 net.cpp:98] Creating Layer out3a/bn
I0710 16:37:23.259192  4738 net.cpp:439] out3a/bn <- out3a
I0710 16:37:23.259197  4738 net.cpp:413] out3a/bn -> out3a/bn
I0710 16:37:23.259924  4738 net.cpp:148] Setting up out3a/bn
I0710 16:37:23.259932  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.259934  4738 net.cpp:163] Memory required for data: 1008730112
I0710 16:37:23.259945  4738 layer_factory.hpp:77] Creating layer out3a/relu
I0710 16:37:23.259950  4738 net.cpp:98] Creating Layer out3a/relu
I0710 16:37:23.259953  4738 net.cpp:439] out3a/relu <- out3a/bn
I0710 16:37:23.259958  4738 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0710 16:37:23.259963  4738 net.cpp:148] Setting up out3a/relu
I0710 16:37:23.259968  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.259970  4738 net.cpp:163] Memory required for data: 1017118720
I0710 16:37:23.259974  4738 layer_factory.hpp:77] Creating layer out3_out5_combined
I0710 16:37:23.259981  4738 net.cpp:98] Creating Layer out3_out5_combined
I0710 16:37:23.259984  4738 net.cpp:439] out3_out5_combined <- out5a_up2
I0710 16:37:23.259987  4738 net.cpp:439] out3_out5_combined <- out3a/bn
I0710 16:37:23.259991  4738 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0710 16:37:23.260016  4738 net.cpp:148] Setting up out3_out5_combined
I0710 16:37:23.260021  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.260025  4738 net.cpp:163] Memory required for data: 1025507328
I0710 16:37:23.260027  4738 layer_factory.hpp:77] Creating layer ctx_conv1
I0710 16:37:23.260033  4738 net.cpp:98] Creating Layer ctx_conv1
I0710 16:37:23.260037  4738 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0710 16:37:23.260042  4738 net.cpp:413] ctx_conv1 -> ctx_conv1
I0710 16:37:23.261081  4738 net.cpp:148] Setting up ctx_conv1
I0710 16:37:23.261088  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.261092  4738 net.cpp:163] Memory required for data: 1033895936
I0710 16:37:23.261097  4738 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0710 16:37:23.261102  4738 net.cpp:98] Creating Layer ctx_conv1/bn
I0710 16:37:23.261106  4738 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0710 16:37:23.261111  4738 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0710 16:37:23.261848  4738 net.cpp:148] Setting up ctx_conv1/bn
I0710 16:37:23.261854  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.261857  4738 net.cpp:163] Memory required for data: 1042284544
I0710 16:37:23.261865  4738 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0710 16:37:23.261870  4738 net.cpp:98] Creating Layer ctx_conv1/relu
I0710 16:37:23.261873  4738 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0710 16:37:23.261878  4738 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0710 16:37:23.261883  4738 net.cpp:148] Setting up ctx_conv1/relu
I0710 16:37:23.261888  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.261891  4738 net.cpp:163] Memory required for data: 1050673152
I0710 16:37:23.261895  4738 layer_factory.hpp:77] Creating layer ctx_conv2
I0710 16:37:23.261900  4738 net.cpp:98] Creating Layer ctx_conv2
I0710 16:37:23.261904  4738 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0710 16:37:23.261909  4738 net.cpp:413] ctx_conv2 -> ctx_conv2
I0710 16:37:23.263089  4738 net.cpp:148] Setting up ctx_conv2
I0710 16:37:23.263098  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.263100  4738 net.cpp:163] Memory required for data: 1059061760
I0710 16:37:23.263105  4738 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0710 16:37:23.263111  4738 net.cpp:98] Creating Layer ctx_conv2/bn
I0710 16:37:23.263115  4738 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0710 16:37:23.263120  4738 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0710 16:37:23.263876  4738 net.cpp:148] Setting up ctx_conv2/bn
I0710 16:37:23.263883  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.263886  4738 net.cpp:163] Memory required for data: 1067450368
I0710 16:37:23.263895  4738 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0710 16:37:23.263898  4738 net.cpp:98] Creating Layer ctx_conv2/relu
I0710 16:37:23.263902  4738 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0710 16:37:23.263906  4738 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0710 16:37:23.263912  4738 net.cpp:148] Setting up ctx_conv2/relu
I0710 16:37:23.263917  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.263921  4738 net.cpp:163] Memory required for data: 1075838976
I0710 16:37:23.263924  4738 layer_factory.hpp:77] Creating layer ctx_conv3
I0710 16:37:23.263931  4738 net.cpp:98] Creating Layer ctx_conv3
I0710 16:37:23.263934  4738 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0710 16:37:23.263941  4738 net.cpp:413] ctx_conv3 -> ctx_conv3
I0710 16:37:23.266288  4738 net.cpp:148] Setting up ctx_conv3
I0710 16:37:23.266304  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.266306  4738 net.cpp:163] Memory required for data: 1084227584
I0710 16:37:23.266314  4738 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0710 16:37:23.266322  4738 net.cpp:98] Creating Layer ctx_conv3/bn
I0710 16:37:23.266326  4738 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0710 16:37:23.266332  4738 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0710 16:37:23.267153  4738 net.cpp:148] Setting up ctx_conv3/bn
I0710 16:37:23.267160  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.267163  4738 net.cpp:163] Memory required for data: 1092616192
I0710 16:37:23.267171  4738 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0710 16:37:23.267177  4738 net.cpp:98] Creating Layer ctx_conv3/relu
I0710 16:37:23.267181  4738 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0710 16:37:23.267187  4738 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0710 16:37:23.267194  4738 net.cpp:148] Setting up ctx_conv3/relu
I0710 16:37:23.267199  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.267201  4738 net.cpp:163] Memory required for data: 1101004800
I0710 16:37:23.267204  4738 layer_factory.hpp:77] Creating layer ctx_conv4
I0710 16:37:23.267216  4738 net.cpp:98] Creating Layer ctx_conv4
I0710 16:37:23.267220  4738 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0710 16:37:23.267225  4738 net.cpp:413] ctx_conv4 -> ctx_conv4
I0710 16:37:23.268290  4738 net.cpp:148] Setting up ctx_conv4
I0710 16:37:23.268297  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.268301  4738 net.cpp:163] Memory required for data: 1109393408
I0710 16:37:23.268306  4738 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0710 16:37:23.268311  4738 net.cpp:98] Creating Layer ctx_conv4/bn
I0710 16:37:23.268314  4738 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0710 16:37:23.268318  4738 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0710 16:37:23.269086  4738 net.cpp:148] Setting up ctx_conv4/bn
I0710 16:37:23.269093  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.269096  4738 net.cpp:163] Memory required for data: 1117782016
I0710 16:37:23.269104  4738 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0710 16:37:23.269109  4738 net.cpp:98] Creating Layer ctx_conv4/relu
I0710 16:37:23.269112  4738 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0710 16:37:23.269116  4738 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0710 16:37:23.269122  4738 net.cpp:148] Setting up ctx_conv4/relu
I0710 16:37:23.269127  4738 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0710 16:37:23.269130  4738 net.cpp:163] Memory required for data: 1126170624
I0710 16:37:23.269134  4738 layer_factory.hpp:77] Creating layer ctx_final
I0710 16:37:23.269140  4738 net.cpp:98] Creating Layer ctx_final
I0710 16:37:23.269142  4738 net.cpp:439] ctx_final <- ctx_conv4/bn
I0710 16:37:23.269146  4738 net.cpp:413] ctx_final -> ctx_final
I0710 16:37:23.269599  4738 net.cpp:148] Setting up ctx_final
I0710 16:37:23.269608  4738 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0710 16:37:23.269610  4738 net.cpp:163] Memory required for data: 1127219200
I0710 16:37:23.269615  4738 layer_factory.hpp:77] Creating layer ctx_final/relu
I0710 16:37:23.269620  4738 net.cpp:98] Creating Layer ctx_final/relu
I0710 16:37:23.269624  4738 net.cpp:439] ctx_final/relu <- ctx_final
I0710 16:37:23.269629  4738 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0710 16:37:23.269634  4738 net.cpp:148] Setting up ctx_final/relu
I0710 16:37:23.269639  4738 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0710 16:37:23.269640  4738 net.cpp:163] Memory required for data: 1128267776
I0710 16:37:23.269644  4738 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0710 16:37:23.269649  4738 net.cpp:98] Creating Layer out_deconv_final_up2
I0710 16:37:23.269652  4738 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0710 16:37:23.269657  4738 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0710 16:37:23.269907  4738 net.cpp:148] Setting up out_deconv_final_up2
I0710 16:37:23.269913  4738 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0710 16:37:23.269917  4738 net.cpp:163] Memory required for data: 1132462080
I0710 16:37:23.269922  4738 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0710 16:37:23.269927  4738 net.cpp:98] Creating Layer out_deconv_final_up4
I0710 16:37:23.269932  4738 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0710 16:37:23.269935  4738 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0710 16:37:23.270181  4738 net.cpp:148] Setting up out_deconv_final_up4
I0710 16:37:23.270187  4738 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0710 16:37:23.270190  4738 net.cpp:163] Memory required for data: 1149239296
I0710 16:37:23.270195  4738 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0710 16:37:23.270200  4738 net.cpp:98] Creating Layer out_deconv_final_up8
I0710 16:37:23.270203  4738 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0710 16:37:23.270207  4738 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0710 16:37:23.270452  4738 net.cpp:148] Setting up out_deconv_final_up8
I0710 16:37:23.270457  4738 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0710 16:37:23.270459  4738 net.cpp:163] Memory required for data: 1216348160
I0710 16:37:23.270463  4738 layer_factory.hpp:77] Creating layer prob
I0710 16:37:23.270469  4738 net.cpp:98] Creating Layer prob
I0710 16:37:23.270474  4738 net.cpp:439] prob <- out_deconv_final_up8
I0710 16:37:23.270478  4738 net.cpp:413] prob -> prob
I0710 16:37:23.270560  4738 net.cpp:148] Setting up prob
I0710 16:37:23.270565  4738 net.cpp:155] Top shape: 1 8 1024 2048 (16777216)
I0710 16:37:23.270567  4738 net.cpp:163] Memory required for data: 1283457024
I0710 16:37:23.270570  4738 net.cpp:226] prob does not need backward computation.
I0710 16:37:23.270573  4738 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0710 16:37:23.270576  4738 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0710 16:37:23.270579  4738 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0710 16:37:23.270582  4738 net.cpp:226] ctx_final/relu does not need backward computation.
I0710 16:37:23.270586  4738 net.cpp:226] ctx_final does not need backward computation.
I0710 16:37:23.270588  4738 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0710 16:37:23.270591  4738 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0710 16:37:23.270594  4738 net.cpp:226] ctx_conv4 does not need backward computation.
I0710 16:37:23.270597  4738 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0710 16:37:23.270601  4738 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0710 16:37:23.270604  4738 net.cpp:226] ctx_conv3 does not need backward computation.
I0710 16:37:23.270607  4738 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0710 16:37:23.270611  4738 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0710 16:37:23.270613  4738 net.cpp:226] ctx_conv2 does not need backward computation.
I0710 16:37:23.270617  4738 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0710 16:37:23.270619  4738 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0710 16:37:23.270622  4738 net.cpp:226] ctx_conv1 does not need backward computation.
I0710 16:37:23.270627  4738 net.cpp:226] out3_out5_combined does not need backward computation.
I0710 16:37:23.270630  4738 net.cpp:226] out3a/relu does not need backward computation.
I0710 16:37:23.270634  4738 net.cpp:226] out3a/bn does not need backward computation.
I0710 16:37:23.270637  4738 net.cpp:226] out3a does not need backward computation.
I0710 16:37:23.270642  4738 net.cpp:226] out5a_up2 does not need backward computation.
I0710 16:37:23.270645  4738 net.cpp:226] out5a/relu does not need backward computation.
I0710 16:37:23.270649  4738 net.cpp:226] out5a/bn does not need backward computation.
I0710 16:37:23.270653  4738 net.cpp:226] out5a does not need backward computation.
I0710 16:37:23.270656  4738 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0710 16:37:23.270660  4738 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0710 16:37:23.270664  4738 net.cpp:226] res5a_branch2b does not need backward computation.
I0710 16:37:23.270668  4738 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0710 16:37:23.270671  4738 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0710 16:37:23.270675  4738 net.cpp:226] res5a_branch2a does not need backward computation.
I0710 16:37:23.270679  4738 net.cpp:226] pool4 does not need backward computation.
I0710 16:37:23.270684  4738 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0710 16:37:23.270687  4738 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0710 16:37:23.270690  4738 net.cpp:226] res4a_branch2b does not need backward computation.
I0710 16:37:23.270694  4738 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0710 16:37:23.270699  4738 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0710 16:37:23.270702  4738 net.cpp:226] res4a_branch2a does not need backward computation.
I0710 16:37:23.270705  4738 net.cpp:226] pool3 does not need backward computation.
I0710 16:37:23.270709  4738 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0710 16:37:23.270714  4738 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0710 16:37:23.270717  4738 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0710 16:37:23.270720  4738 net.cpp:226] res3a_branch2b does not need backward computation.
I0710 16:37:23.270725  4738 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0710 16:37:23.270727  4738 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0710 16:37:23.270731  4738 net.cpp:226] res3a_branch2a does not need backward computation.
I0710 16:37:23.270735  4738 net.cpp:226] pool2 does not need backward computation.
I0710 16:37:23.270740  4738 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0710 16:37:23.270743  4738 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0710 16:37:23.270746  4738 net.cpp:226] res2a_branch2b does not need backward computation.
I0710 16:37:23.270750  4738 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0710 16:37:23.270754  4738 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0710 16:37:23.270757  4738 net.cpp:226] res2a_branch2a does not need backward computation.
I0710 16:37:23.270761  4738 net.cpp:226] pool1 does not need backward computation.
I0710 16:37:23.270766  4738 net.cpp:226] conv1b/relu does not need backward computation.
I0710 16:37:23.270768  4738 net.cpp:226] conv1b/bn does not need backward computation.
I0710 16:37:23.270772  4738 net.cpp:226] conv1b does not need backward computation.
I0710 16:37:23.270776  4738 net.cpp:226] conv1a/relu does not need backward computation.
I0710 16:37:23.270779  4738 net.cpp:226] conv1a/bn does not need backward computation.
I0710 16:37:23.270782  4738 net.cpp:226] conv1a does not need backward computation.
I0710 16:37:23.270786  4738 net.cpp:226] data/bias does not need backward computation.
I0710 16:37:23.270789  4738 net.cpp:226] input does not need backward computation.
I0710 16:37:23.270792  4738 net.cpp:268] This network produces output prob
I0710 16:37:23.270823  4738 net.cpp:288] Network initialization done.
I0710 16:37:23.280943  4738 net.cpp:804] Ignoring source layer data
I0710 16:37:23.282251  4738 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['0'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
pixel_accuracy=0.955073156404, mean_iou=0.804056902331, iou=[ 0.92796213  0.91842659  0.73347775  0.55522584  0.88519221]
sparse eval.
