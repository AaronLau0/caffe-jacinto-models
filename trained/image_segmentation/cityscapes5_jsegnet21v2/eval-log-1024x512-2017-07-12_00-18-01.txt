Logging output to training/eval-log-2017-07-12_00-18-01.txt
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:18:02.515935 25741 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt
I0712 00:18:02.515961 25741 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:18:02.515964 25741 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:18:02.516237 25741 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 512
      dim: 1024
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:18:02.516366 25741 layer_factory.hpp:77] Creating layer input
I0712 00:18:02.516376 25741 net.cpp:98] Creating Layer input
I0712 00:18:02.516379 25741 net.cpp:413] input -> data
I0712 00:18:02.517448 25741 net.cpp:148] Setting up input
I0712 00:18:02.517457 25741 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:18:02.517459 25741 net.cpp:163] Memory required for data: 6291456
I0712 00:18:02.517462 25741 layer_factory.hpp:77] Creating layer data/bias
I0712 00:18:02.517472 25741 net.cpp:98] Creating Layer data/bias
I0712 00:18:02.517477 25741 net.cpp:439] data/bias <- data
I0712 00:18:02.517479 25741 net.cpp:413] data/bias -> data/bias
I0712 00:18:02.518617 25741 net.cpp:148] Setting up data/bias
I0712 00:18:02.518626 25741 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:18:02.518628 25741 net.cpp:163] Memory required for data: 12582912
I0712 00:18:02.518635 25741 layer_factory.hpp:77] Creating layer conv1a
I0712 00:18:02.518641 25741 net.cpp:98] Creating Layer conv1a
I0712 00:18:02.518643 25741 net.cpp:439] conv1a <- data/bias
I0712 00:18:02.518646 25741 net.cpp:413] conv1a -> conv1a
I0712 00:18:02.521000 25741 net.cpp:148] Setting up conv1a
I0712 00:18:02.521010 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.521013 25741 net.cpp:163] Memory required for data: 29360128
I0712 00:18:02.521018 25741 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:18:02.521023 25741 net.cpp:98] Creating Layer conv1a/bn
I0712 00:18:02.521025 25741 net.cpp:439] conv1a/bn <- conv1a
I0712 00:18:02.521029 25741 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:18:02.521740 25741 net.cpp:148] Setting up conv1a/bn
I0712 00:18:02.521747 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.521749 25741 net.cpp:163] Memory required for data: 46137344
I0712 00:18:02.521755 25741 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:18:02.521759 25741 net.cpp:98] Creating Layer conv1a/relu
I0712 00:18:02.521760 25741 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:18:02.521762 25741 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:18:02.521771 25741 net.cpp:148] Setting up conv1a/relu
I0712 00:18:02.521775 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.521776 25741 net.cpp:163] Memory required for data: 62914560
I0712 00:18:02.521778 25741 layer_factory.hpp:77] Creating layer conv1b
I0712 00:18:02.521785 25741 net.cpp:98] Creating Layer conv1b
I0712 00:18:02.521788 25741 net.cpp:439] conv1b <- conv1a/bn
I0712 00:18:02.521791 25741 net.cpp:413] conv1b -> conv1b
I0712 00:18:02.522153 25741 net.cpp:148] Setting up conv1b
I0712 00:18:02.522158 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.522161 25741 net.cpp:163] Memory required for data: 79691776
I0712 00:18:02.522164 25741 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:18:02.522167 25741 net.cpp:98] Creating Layer conv1b/bn
I0712 00:18:02.522169 25741 net.cpp:439] conv1b/bn <- conv1b
I0712 00:18:02.522173 25741 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:18:02.522861 25741 net.cpp:148] Setting up conv1b/bn
I0712 00:18:02.522867 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.522869 25741 net.cpp:163] Memory required for data: 96468992
I0712 00:18:02.522873 25741 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:18:02.522876 25741 net.cpp:98] Creating Layer conv1b/relu
I0712 00:18:02.522878 25741 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:18:02.522881 25741 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:18:02.522883 25741 net.cpp:148] Setting up conv1b/relu
I0712 00:18:02.522886 25741 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:18:02.522886 25741 net.cpp:163] Memory required for data: 113246208
I0712 00:18:02.522888 25741 layer_factory.hpp:77] Creating layer pool1
I0712 00:18:02.522891 25741 net.cpp:98] Creating Layer pool1
I0712 00:18:02.522894 25741 net.cpp:439] pool1 <- conv1b/bn
I0712 00:18:02.522897 25741 net.cpp:413] pool1 -> pool1
I0712 00:18:02.522933 25741 net.cpp:148] Setting up pool1
I0712 00:18:02.522938 25741 net.cpp:155] Top shape: 1 32 128 256 (1048576)
I0712 00:18:02.522938 25741 net.cpp:163] Memory required for data: 117440512
I0712 00:18:02.522940 25741 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:18:02.522944 25741 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:18:02.522946 25741 net.cpp:439] res2a_branch2a <- pool1
I0712 00:18:02.522948 25741 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:18:02.524451 25741 net.cpp:148] Setting up res2a_branch2a
I0712 00:18:02.524461 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.524462 25741 net.cpp:163] Memory required for data: 125829120
I0712 00:18:02.524466 25741 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:18:02.524469 25741 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:18:02.524471 25741 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:18:02.524474 25741 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:18:02.525127 25741 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:18:02.525133 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.525135 25741 net.cpp:163] Memory required for data: 134217728
I0712 00:18:02.525141 25741 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:18:02.525143 25741 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:18:02.525146 25741 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:18:02.525147 25741 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:18:02.525151 25741 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:18:02.525152 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.525154 25741 net.cpp:163] Memory required for data: 142606336
I0712 00:18:02.525156 25741 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:18:02.525159 25741 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:18:02.525161 25741 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:18:02.525163 25741 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:18:02.526484 25741 net.cpp:148] Setting up res2a_branch2b
I0712 00:18:02.526492 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.526494 25741 net.cpp:163] Memory required for data: 150994944
I0712 00:18:02.526497 25741 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:18:02.526501 25741 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:18:02.526504 25741 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:18:02.526507 25741 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:18:02.527168 25741 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:18:02.527174 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.527176 25741 net.cpp:163] Memory required for data: 159383552
I0712 00:18:02.527182 25741 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:18:02.527186 25741 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:18:02.527189 25741 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:18:02.527192 25741 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:18:02.527199 25741 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:18:02.527204 25741 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:18:02.527206 25741 net.cpp:163] Memory required for data: 167772160
I0712 00:18:02.527209 25741 layer_factory.hpp:77] Creating layer pool2
I0712 00:18:02.527214 25741 net.cpp:98] Creating Layer pool2
I0712 00:18:02.527217 25741 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:18:02.527220 25741 net.cpp:413] pool2 -> pool2
I0712 00:18:02.527253 25741 net.cpp:148] Setting up pool2
I0712 00:18:02.527257 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.527259 25741 net.cpp:163] Memory required for data: 169869312
I0712 00:18:02.527261 25741 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:18:02.527267 25741 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:18:02.527271 25741 net.cpp:439] res3a_branch2a <- pool2
I0712 00:18:02.527273 25741 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:18:02.529917 25741 net.cpp:148] Setting up res3a_branch2a
I0712 00:18:02.529928 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.529930 25741 net.cpp:163] Memory required for data: 174063616
I0712 00:18:02.529934 25741 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:18:02.529938 25741 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:18:02.529940 25741 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:18:02.529943 25741 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:18:02.530536 25741 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:18:02.530542 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.530544 25741 net.cpp:163] Memory required for data: 178257920
I0712 00:18:02.530550 25741 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:18:02.530553 25741 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:18:02.530555 25741 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:18:02.530557 25741 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:18:02.530562 25741 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:18:02.530565 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.530566 25741 net.cpp:163] Memory required for data: 182452224
I0712 00:18:02.530568 25741 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:18:02.530572 25741 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:18:02.530575 25741 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:18:02.530580 25741 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:18:02.531566 25741 net.cpp:148] Setting up res3a_branch2b
I0712 00:18:02.531571 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.531574 25741 net.cpp:163] Memory required for data: 186646528
I0712 00:18:02.531576 25741 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:18:02.531579 25741 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:18:02.531581 25741 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:18:02.531584 25741 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:18:02.532176 25741 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:18:02.532181 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.532183 25741 net.cpp:163] Memory required for data: 190840832
I0712 00:18:02.532187 25741 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:18:02.532191 25741 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:18:02.532192 25741 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:18:02.532194 25741 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:18:02.532197 25741 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:18:02.532199 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.532200 25741 net.cpp:163] Memory required for data: 195035136
I0712 00:18:02.532202 25741 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:18:02.532205 25741 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:18:02.532207 25741 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:18:02.532209 25741 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:18:02.532212 25741 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:18:02.532248 25741 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:18:02.532251 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.532254 25741 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:18:02.532255 25741 net.cpp:163] Memory required for data: 203423744
I0712 00:18:02.532258 25741 layer_factory.hpp:77] Creating layer pool3
I0712 00:18:02.532260 25741 net.cpp:98] Creating Layer pool3
I0712 00:18:02.532263 25741 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:18:02.532265 25741 net.cpp:413] pool3 -> pool3
I0712 00:18:02.532300 25741 net.cpp:148] Setting up pool3
I0712 00:18:02.532305 25741 net.cpp:155] Top shape: 1 128 32 64 (262144)
I0712 00:18:02.532306 25741 net.cpp:163] Memory required for data: 204472320
I0712 00:18:02.532307 25741 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:18:02.532311 25741 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:18:02.532313 25741 net.cpp:439] res4a_branch2a <- pool3
I0712 00:18:02.532315 25741 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:18:02.538372 25741 net.cpp:148] Setting up res4a_branch2a
I0712 00:18:02.538377 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.538378 25741 net.cpp:163] Memory required for data: 206569472
I0712 00:18:02.538381 25741 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:18:02.538385 25741 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:18:02.538388 25741 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:18:02.538389 25741 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:18:02.539101 25741 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:18:02.539108 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.539110 25741 net.cpp:163] Memory required for data: 208666624
I0712 00:18:02.539115 25741 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:18:02.539117 25741 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:18:02.539119 25741 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:18:02.539122 25741 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:18:02.539125 25741 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:18:02.539127 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.539129 25741 net.cpp:163] Memory required for data: 210763776
I0712 00:18:02.539130 25741 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:18:02.539139 25741 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:18:02.539141 25741 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:18:02.539145 25741 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:18:02.542315 25741 net.cpp:148] Setting up res4a_branch2b
I0712 00:18:02.542322 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.542325 25741 net.cpp:163] Memory required for data: 212860928
I0712 00:18:02.542327 25741 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:18:02.542332 25741 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:18:02.542335 25741 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:18:02.542340 25741 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:18:02.542964 25741 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:18:02.542970 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.542973 25741 net.cpp:163] Memory required for data: 214958080
I0712 00:18:02.542978 25741 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:18:02.542985 25741 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:18:02.542999 25741 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:18:02.543005 25741 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:18:02.543014 25741 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:18:02.543018 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.543021 25741 net.cpp:163] Memory required for data: 217055232
I0712 00:18:02.543025 25741 layer_factory.hpp:77] Creating layer pool4
I0712 00:18:02.543030 25741 net.cpp:98] Creating Layer pool4
I0712 00:18:02.543033 25741 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:18:02.543037 25741 net.cpp:413] pool4 -> pool4
I0712 00:18:02.543088 25741 net.cpp:148] Setting up pool4
I0712 00:18:02.543094 25741 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:18:02.543097 25741 net.cpp:163] Memory required for data: 219152384
I0712 00:18:02.543102 25741 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:18:02.543113 25741 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:18:02.543118 25741 net.cpp:439] res5a_branch2a <- pool4
I0712 00:18:02.543129 25741 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:18:02.569193 25741 net.cpp:148] Setting up res5a_branch2a
I0712 00:18:02.569209 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.569212 25741 net.cpp:163] Memory required for data: 223346688
I0712 00:18:02.569217 25741 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:18:02.569226 25741 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:18:02.569229 25741 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:18:02.569233 25741 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:18:02.569947 25741 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:18:02.569954 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.569957 25741 net.cpp:163] Memory required for data: 227540992
I0712 00:18:02.569962 25741 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:18:02.569967 25741 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:18:02.569968 25741 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:18:02.569970 25741 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:18:02.569974 25741 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:18:02.569977 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.569978 25741 net.cpp:163] Memory required for data: 231735296
I0712 00:18:02.569980 25741 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:18:02.569985 25741 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:18:02.569986 25741 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:18:02.569989 25741 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:18:02.582939 25741 net.cpp:148] Setting up res5a_branch2b
I0712 00:18:02.582959 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.582962 25741 net.cpp:163] Memory required for data: 235929600
I0712 00:18:02.582969 25741 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:18:02.582978 25741 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:18:02.582979 25741 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:18:02.582983 25741 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:18:02.583704 25741 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:18:02.583712 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.583714 25741 net.cpp:163] Memory required for data: 240123904
I0712 00:18:02.583719 25741 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:18:02.583722 25741 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:18:02.583724 25741 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:18:02.583726 25741 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:18:02.583730 25741 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:18:02.583734 25741 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:18:02.583734 25741 net.cpp:163] Memory required for data: 244318208
I0712 00:18:02.583736 25741 layer_factory.hpp:77] Creating layer out5a
I0712 00:18:02.583740 25741 net.cpp:98] Creating Layer out5a
I0712 00:18:02.583742 25741 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:18:02.583745 25741 net.cpp:413] out5a -> out5a
I0712 00:18:02.587994 25741 net.cpp:148] Setting up out5a
I0712 00:18:02.588003 25741 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:18:02.588006 25741 net.cpp:163] Memory required for data: 244842496
I0712 00:18:02.588008 25741 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:18:02.588016 25741 net.cpp:98] Creating Layer out5a/bn
I0712 00:18:02.588018 25741 net.cpp:439] out5a/bn <- out5a
I0712 00:18:02.588021 25741 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:18:02.588774 25741 net.cpp:148] Setting up out5a/bn
I0712 00:18:02.588781 25741 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:18:02.588783 25741 net.cpp:163] Memory required for data: 245366784
I0712 00:18:02.588788 25741 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:18:02.588790 25741 net.cpp:98] Creating Layer out5a/relu
I0712 00:18:02.588793 25741 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:18:02.588795 25741 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:18:02.588798 25741 net.cpp:148] Setting up out5a/relu
I0712 00:18:02.588800 25741 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:18:02.588802 25741 net.cpp:163] Memory required for data: 245891072
I0712 00:18:02.588804 25741 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:18:02.588811 25741 net.cpp:98] Creating Layer out5a_up2
I0712 00:18:02.588814 25741 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:18:02.588821 25741 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:18:02.589164 25741 net.cpp:148] Setting up out5a_up2
I0712 00:18:02.589170 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.589172 25741 net.cpp:163] Memory required for data: 247988224
I0712 00:18:02.589174 25741 layer_factory.hpp:77] Creating layer out3a
I0712 00:18:02.589179 25741 net.cpp:98] Creating Layer out3a
I0712 00:18:02.589181 25741 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:18:02.589184 25741 net.cpp:413] out3a -> out3a
I0712 00:18:02.590265 25741 net.cpp:148] Setting up out3a
I0712 00:18:02.590271 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.590273 25741 net.cpp:163] Memory required for data: 250085376
I0712 00:18:02.590277 25741 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:18:02.590281 25741 net.cpp:98] Creating Layer out3a/bn
I0712 00:18:02.590282 25741 net.cpp:439] out3a/bn <- out3a
I0712 00:18:02.590286 25741 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:18:02.591130 25741 net.cpp:148] Setting up out3a/bn
I0712 00:18:02.591138 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.591140 25741 net.cpp:163] Memory required for data: 252182528
I0712 00:18:02.591150 25741 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:18:02.591152 25741 net.cpp:98] Creating Layer out3a/relu
I0712 00:18:02.591154 25741 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:18:02.591157 25741 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:18:02.591161 25741 net.cpp:148] Setting up out3a/relu
I0712 00:18:02.591163 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.591164 25741 net.cpp:163] Memory required for data: 254279680
I0712 00:18:02.591166 25741 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:18:02.591172 25741 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:18:02.591174 25741 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:18:02.591176 25741 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:18:02.591178 25741 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:18:02.591208 25741 net.cpp:148] Setting up out3_out5_combined
I0712 00:18:02.591214 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.591217 25741 net.cpp:163] Memory required for data: 256376832
I0712 00:18:02.591220 25741 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:18:02.591226 25741 net.cpp:98] Creating Layer ctx_conv1
I0712 00:18:02.591229 25741 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:18:02.591233 25741 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:18:02.592295 25741 net.cpp:148] Setting up ctx_conv1
I0712 00:18:02.592301 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.592303 25741 net.cpp:163] Memory required for data: 258473984
I0712 00:18:02.592306 25741 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:18:02.592309 25741 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:18:02.592311 25741 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:18:02.592319 25741 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:18:02.593152 25741 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:18:02.593159 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.593161 25741 net.cpp:163] Memory required for data: 260571136
I0712 00:18:02.593165 25741 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:18:02.593168 25741 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:18:02.593170 25741 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:18:02.593173 25741 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:18:02.593176 25741 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:18:02.593178 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.593179 25741 net.cpp:163] Memory required for data: 262668288
I0712 00:18:02.593181 25741 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:18:02.593185 25741 net.cpp:98] Creating Layer ctx_conv2
I0712 00:18:02.593188 25741 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:18:02.593189 25741 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:18:02.594305 25741 net.cpp:148] Setting up ctx_conv2
I0712 00:18:02.594312 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.594314 25741 net.cpp:163] Memory required for data: 264765440
I0712 00:18:02.594317 25741 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:18:02.594321 25741 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:18:02.594323 25741 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:18:02.594326 25741 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:18:02.595101 25741 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:18:02.595108 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.595110 25741 net.cpp:163] Memory required for data: 266862592
I0712 00:18:02.595114 25741 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:18:02.595118 25741 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:18:02.595119 25741 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:18:02.595121 25741 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:18:02.595124 25741 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:18:02.595127 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.595129 25741 net.cpp:163] Memory required for data: 268959744
I0712 00:18:02.595130 25741 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:18:02.595134 25741 net.cpp:98] Creating Layer ctx_conv3
I0712 00:18:02.595135 25741 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:18:02.595139 25741 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:18:02.596252 25741 net.cpp:148] Setting up ctx_conv3
I0712 00:18:02.596258 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.596261 25741 net.cpp:163] Memory required for data: 271056896
I0712 00:18:02.596263 25741 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:18:02.596267 25741 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:18:02.596268 25741 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:18:02.596271 25741 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:18:02.597056 25741 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:18:02.597064 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.597065 25741 net.cpp:163] Memory required for data: 273154048
I0712 00:18:02.597069 25741 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:18:02.597072 25741 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:18:02.597074 25741 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:18:02.597076 25741 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:18:02.597080 25741 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:18:02.597082 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.597084 25741 net.cpp:163] Memory required for data: 275251200
I0712 00:18:02.597085 25741 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:18:02.597091 25741 net.cpp:98] Creating Layer ctx_conv4
I0712 00:18:02.597093 25741 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:18:02.597096 25741 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:18:02.598207 25741 net.cpp:148] Setting up ctx_conv4
I0712 00:18:02.598213 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.598215 25741 net.cpp:163] Memory required for data: 277348352
I0712 00:18:02.598218 25741 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:18:02.598222 25741 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:18:02.598224 25741 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:18:02.598227 25741 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:18:02.599000 25741 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:18:02.599006 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.599009 25741 net.cpp:163] Memory required for data: 279445504
I0712 00:18:02.599014 25741 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:18:02.599015 25741 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:18:02.599017 25741 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:18:02.599020 25741 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:18:02.599023 25741 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:18:02.599025 25741 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:18:02.599026 25741 net.cpp:163] Memory required for data: 281542656
I0712 00:18:02.599028 25741 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:18:02.599032 25741 net.cpp:98] Creating Layer ctx_final
I0712 00:18:02.599035 25741 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:18:02.599036 25741 net.cpp:413] ctx_final -> ctx_final
I0712 00:18:02.599525 25741 net.cpp:148] Setting up ctx_final
I0712 00:18:02.599531 25741 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:18:02.599534 25741 net.cpp:163] Memory required for data: 281804800
I0712 00:18:02.599536 25741 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:18:02.599539 25741 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:18:02.599541 25741 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:18:02.599544 25741 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:18:02.599546 25741 net.cpp:148] Setting up ctx_final/relu
I0712 00:18:02.599548 25741 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:18:02.599550 25741 net.cpp:163] Memory required for data: 282066944
I0712 00:18:02.599551 25741 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:18:02.599555 25741 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:18:02.599556 25741 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:18:02.599558 25741 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:18:02.599870 25741 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:18:02.599879 25741 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:18:02.599881 25741 net.cpp:163] Memory required for data: 283115520
I0712 00:18:02.599885 25741 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:18:02.599889 25741 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:18:02.599894 25741 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:18:02.599897 25741 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:18:02.600244 25741 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:18:02.600250 25741 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:18:02.600252 25741 net.cpp:163] Memory required for data: 287309824
I0712 00:18:02.600255 25741 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:18:02.600257 25741 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:18:02.600260 25741 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:18:02.600262 25741 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:18:02.600556 25741 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:18:02.600563 25741 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:18:02.600564 25741 net.cpp:163] Memory required for data: 304087040
I0712 00:18:02.600566 25741 layer_factory.hpp:77] Creating layer prob
I0712 00:18:02.600569 25741 net.cpp:98] Creating Layer prob
I0712 00:18:02.600571 25741 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:18:02.600574 25741 net.cpp:413] prob -> prob
I0712 00:18:02.600661 25741 net.cpp:148] Setting up prob
I0712 00:18:02.600667 25741 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:18:02.600670 25741 net.cpp:163] Memory required for data: 320864256
I0712 00:18:02.600673 25741 net.cpp:226] prob does not need backward computation.
I0712 00:18:02.600677 25741 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:18:02.600679 25741 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:18:02.600682 25741 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:18:02.600685 25741 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:18:02.600688 25741 net.cpp:226] ctx_final does not need backward computation.
I0712 00:18:02.600692 25741 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:18:02.600694 25741 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:18:02.600697 25741 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:18:02.600700 25741 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:18:02.600703 25741 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:18:02.600706 25741 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:18:02.600709 25741 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:18:02.600713 25741 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:18:02.600716 25741 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:18:02.600720 25741 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:18:02.600723 25741 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:18:02.600726 25741 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:18:02.600729 25741 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:18:02.600734 25741 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:18:02.600739 25741 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:18:02.600741 25741 net.cpp:226] out3a does not need backward computation.
I0712 00:18:02.600745 25741 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:18:02.600749 25741 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:18:02.600751 25741 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:18:02.600755 25741 net.cpp:226] out5a does not need backward computation.
I0712 00:18:02.600759 25741 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:18:02.600762 25741 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:18:02.600765 25741 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:18:02.600769 25741 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:18:02.600772 25741 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:18:02.600776 25741 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:18:02.600780 25741 net.cpp:226] pool4 does not need backward computation.
I0712 00:18:02.600785 25741 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:18:02.600788 25741 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:18:02.600792 25741 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:18:02.600796 25741 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:18:02.600800 25741 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:18:02.600805 25741 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:18:02.600808 25741 net.cpp:226] pool3 does not need backward computation.
I0712 00:18:02.600812 25741 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:18:02.600819 25741 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:18:02.600822 25741 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:18:02.600826 25741 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:18:02.600829 25741 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:18:02.600832 25741 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:18:02.600836 25741 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:18:02.600841 25741 net.cpp:226] pool2 does not need backward computation.
I0712 00:18:02.600843 25741 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:18:02.600847 25741 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:18:02.600852 25741 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:18:02.600854 25741 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:18:02.600857 25741 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:18:02.600862 25741 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:18:02.600865 25741 net.cpp:226] pool1 does not need backward computation.
I0712 00:18:02.600869 25741 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:18:02.600872 25741 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:18:02.600877 25741 net.cpp:226] conv1b does not need backward computation.
I0712 00:18:02.600880 25741 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:18:02.600884 25741 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:18:02.600888 25741 net.cpp:226] conv1a does not need backward computation.
I0712 00:18:02.600891 25741 net.cpp:226] data/bias does not need backward computation.
I0712 00:18:02.600895 25741 net.cpp:226] input does not need backward computation.
I0712 00:18:02.600898 25741 net.cpp:268] This network produces output prob
I0712 00:18:02.600939 25741 net.cpp:288] Network initialization done.
I0712 00:18:02.612164 25741 net.cpp:804] Ignoring source layer data
I0712 00:18:02.613488 25741 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['1024', '512'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/initial/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
pixel_accuracy=0.942358799334, mean_iou=0.77116607072, iou=[ 0.90738029  0.88995868  0.68877495  0.48625166  0.88346477]
initial eval.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:20:00.622547 28316 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/deploy.prototxt
I0712 00:20:00.622572 28316 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:20:00.622575 28316 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:20:00.622851 28316 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 512
      dim: 1024
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:20:00.622966 28316 layer_factory.hpp:77] Creating layer input
I0712 00:20:00.622975 28316 net.cpp:98] Creating Layer input
I0712 00:20:00.622978 28316 net.cpp:413] input -> data
I0712 00:20:00.624060 28316 net.cpp:148] Setting up input
I0712 00:20:00.624069 28316 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:20:00.624071 28316 net.cpp:163] Memory required for data: 6291456
I0712 00:20:00.624074 28316 layer_factory.hpp:77] Creating layer data/bias
I0712 00:20:00.624083 28316 net.cpp:98] Creating Layer data/bias
I0712 00:20:00.624084 28316 net.cpp:439] data/bias <- data
I0712 00:20:00.624089 28316 net.cpp:413] data/bias -> data/bias
I0712 00:20:00.625265 28316 net.cpp:148] Setting up data/bias
I0712 00:20:00.625273 28316 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:20:00.625275 28316 net.cpp:163] Memory required for data: 12582912
I0712 00:20:00.625283 28316 layer_factory.hpp:77] Creating layer conv1a
I0712 00:20:00.625288 28316 net.cpp:98] Creating Layer conv1a
I0712 00:20:00.625290 28316 net.cpp:439] conv1a <- data/bias
I0712 00:20:00.625293 28316 net.cpp:413] conv1a -> conv1a
I0712 00:20:00.627643 28316 net.cpp:148] Setting up conv1a
I0712 00:20:00.627653 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.627656 28316 net.cpp:163] Memory required for data: 29360128
I0712 00:20:00.627661 28316 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:20:00.627666 28316 net.cpp:98] Creating Layer conv1a/bn
I0712 00:20:00.627668 28316 net.cpp:439] conv1a/bn <- conv1a
I0712 00:20:00.627672 28316 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:20:00.628391 28316 net.cpp:148] Setting up conv1a/bn
I0712 00:20:00.628397 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.628399 28316 net.cpp:163] Memory required for data: 46137344
I0712 00:20:00.628406 28316 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:20:00.628409 28316 net.cpp:98] Creating Layer conv1a/relu
I0712 00:20:00.628412 28316 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:20:00.628413 28316 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:20:00.628420 28316 net.cpp:148] Setting up conv1a/relu
I0712 00:20:00.628422 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.628424 28316 net.cpp:163] Memory required for data: 62914560
I0712 00:20:00.628425 28316 layer_factory.hpp:77] Creating layer conv1b
I0712 00:20:00.628429 28316 net.cpp:98] Creating Layer conv1b
I0712 00:20:00.628432 28316 net.cpp:439] conv1b <- conv1a/bn
I0712 00:20:00.628434 28316 net.cpp:413] conv1b -> conv1b
I0712 00:20:00.628793 28316 net.cpp:148] Setting up conv1b
I0712 00:20:00.628798 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.628800 28316 net.cpp:163] Memory required for data: 79691776
I0712 00:20:00.628804 28316 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:20:00.628808 28316 net.cpp:98] Creating Layer conv1b/bn
I0712 00:20:00.628809 28316 net.cpp:439] conv1b/bn <- conv1b
I0712 00:20:00.628813 28316 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:20:00.629521 28316 net.cpp:148] Setting up conv1b/bn
I0712 00:20:00.629528 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.629529 28316 net.cpp:163] Memory required for data: 96468992
I0712 00:20:00.629534 28316 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:20:00.629536 28316 net.cpp:98] Creating Layer conv1b/relu
I0712 00:20:00.629539 28316 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:20:00.629540 28316 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:20:00.629544 28316 net.cpp:148] Setting up conv1b/relu
I0712 00:20:00.629545 28316 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:20:00.629547 28316 net.cpp:163] Memory required for data: 113246208
I0712 00:20:00.629549 28316 layer_factory.hpp:77] Creating layer pool1
I0712 00:20:00.629552 28316 net.cpp:98] Creating Layer pool1
I0712 00:20:00.629554 28316 net.cpp:439] pool1 <- conv1b/bn
I0712 00:20:00.629555 28316 net.cpp:413] pool1 -> pool1
I0712 00:20:00.629591 28316 net.cpp:148] Setting up pool1
I0712 00:20:00.629595 28316 net.cpp:155] Top shape: 1 32 128 256 (1048576)
I0712 00:20:00.629596 28316 net.cpp:163] Memory required for data: 117440512
I0712 00:20:00.629598 28316 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:20:00.629602 28316 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:20:00.629604 28316 net.cpp:439] res2a_branch2a <- pool1
I0712 00:20:00.629606 28316 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:20:00.631108 28316 net.cpp:148] Setting up res2a_branch2a
I0712 00:20:00.631116 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.631119 28316 net.cpp:163] Memory required for data: 125829120
I0712 00:20:00.631122 28316 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:20:00.631126 28316 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:20:00.631129 28316 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:20:00.631131 28316 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:20:00.631811 28316 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:20:00.631817 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.631819 28316 net.cpp:163] Memory required for data: 134217728
I0712 00:20:00.631824 28316 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:20:00.631826 28316 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:20:00.631829 28316 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:20:00.631830 28316 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:20:00.631834 28316 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:20:00.631836 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.631837 28316 net.cpp:163] Memory required for data: 142606336
I0712 00:20:00.631839 28316 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:20:00.631842 28316 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:20:00.631845 28316 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:20:00.631847 28316 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:20:00.633183 28316 net.cpp:148] Setting up res2a_branch2b
I0712 00:20:00.633190 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.633193 28316 net.cpp:163] Memory required for data: 150994944
I0712 00:20:00.633196 28316 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:20:00.633201 28316 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:20:00.633203 28316 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:20:00.633206 28316 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:20:00.633883 28316 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:20:00.633889 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.633891 28316 net.cpp:163] Memory required for data: 159383552
I0712 00:20:00.633895 28316 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:20:00.633898 28316 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:20:00.633900 28316 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:20:00.633903 28316 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:20:00.633905 28316 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:20:00.633908 28316 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:20:00.633909 28316 net.cpp:163] Memory required for data: 167772160
I0712 00:20:00.633911 28316 layer_factory.hpp:77] Creating layer pool2
I0712 00:20:00.633913 28316 net.cpp:98] Creating Layer pool2
I0712 00:20:00.633915 28316 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:20:00.633918 28316 net.cpp:413] pool2 -> pool2
I0712 00:20:00.633949 28316 net.cpp:148] Setting up pool2
I0712 00:20:00.633955 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.633955 28316 net.cpp:163] Memory required for data: 169869312
I0712 00:20:00.633957 28316 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:20:00.633962 28316 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:20:00.633963 28316 net.cpp:439] res3a_branch2a <- pool2
I0712 00:20:00.633966 28316 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:20:00.636624 28316 net.cpp:148] Setting up res3a_branch2a
I0712 00:20:00.636634 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.636636 28316 net.cpp:163] Memory required for data: 174063616
I0712 00:20:00.636641 28316 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:20:00.636644 28316 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:20:00.636646 28316 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:20:00.636649 28316 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:20:00.637272 28316 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:20:00.637279 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.637281 28316 net.cpp:163] Memory required for data: 178257920
I0712 00:20:00.637287 28316 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:20:00.637291 28316 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:20:00.637293 28316 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:20:00.637295 28316 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:20:00.637301 28316 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:20:00.637305 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.637305 28316 net.cpp:163] Memory required for data: 182452224
I0712 00:20:00.637307 28316 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:20:00.637312 28316 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:20:00.637315 28316 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:20:00.637318 28316 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:20:00.638320 28316 net.cpp:148] Setting up res3a_branch2b
I0712 00:20:00.638326 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.638327 28316 net.cpp:163] Memory required for data: 186646528
I0712 00:20:00.638330 28316 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:20:00.638334 28316 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:20:00.638336 28316 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:20:00.638339 28316 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:20:00.638957 28316 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:20:00.638962 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.638964 28316 net.cpp:163] Memory required for data: 190840832
I0712 00:20:00.638969 28316 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:20:00.638972 28316 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:20:00.638973 28316 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:20:00.638975 28316 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:20:00.638979 28316 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:20:00.638981 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.638983 28316 net.cpp:163] Memory required for data: 195035136
I0712 00:20:00.638984 28316 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:20:00.638988 28316 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:20:00.638989 28316 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:20:00.638991 28316 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:20:00.638995 28316 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:20:00.639031 28316 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:20:00.639035 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.639037 28316 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:20:00.639039 28316 net.cpp:163] Memory required for data: 203423744
I0712 00:20:00.639040 28316 layer_factory.hpp:77] Creating layer pool3
I0712 00:20:00.639045 28316 net.cpp:98] Creating Layer pool3
I0712 00:20:00.639046 28316 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:20:00.639050 28316 net.cpp:413] pool3 -> pool3
I0712 00:20:00.639083 28316 net.cpp:148] Setting up pool3
I0712 00:20:00.639086 28316 net.cpp:155] Top shape: 1 128 32 64 (262144)
I0712 00:20:00.639088 28316 net.cpp:163] Memory required for data: 204472320
I0712 00:20:00.639091 28316 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:20:00.639093 28316 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:20:00.639096 28316 net.cpp:439] res4a_branch2a <- pool3
I0712 00:20:00.639098 28316 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:20:00.645133 28316 net.cpp:148] Setting up res4a_branch2a
I0712 00:20:00.645138 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.645140 28316 net.cpp:163] Memory required for data: 206569472
I0712 00:20:00.645143 28316 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:20:00.645146 28316 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:20:00.645148 28316 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:20:00.645151 28316 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:20:00.645757 28316 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:20:00.645763 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.645766 28316 net.cpp:163] Memory required for data: 208666624
I0712 00:20:00.645769 28316 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:20:00.645772 28316 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:20:00.645774 28316 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:20:00.645776 28316 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:20:00.645779 28316 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:20:00.645781 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.645783 28316 net.cpp:163] Memory required for data: 210763776
I0712 00:20:00.645786 28316 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:20:00.645789 28316 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:20:00.645792 28316 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:20:00.645794 28316 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:20:00.648952 28316 net.cpp:148] Setting up res4a_branch2b
I0712 00:20:00.648957 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.648958 28316 net.cpp:163] Memory required for data: 212860928
I0712 00:20:00.648962 28316 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:20:00.648965 28316 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:20:00.648967 28316 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:20:00.648969 28316 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:20:00.649623 28316 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:20:00.649633 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.649637 28316 net.cpp:163] Memory required for data: 214958080
I0712 00:20:00.649643 28316 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:20:00.649646 28316 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:20:00.649648 28316 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:20:00.649652 28316 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:20:00.649655 28316 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:20:00.649657 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.649658 28316 net.cpp:163] Memory required for data: 217055232
I0712 00:20:00.649660 28316 layer_factory.hpp:77] Creating layer pool4
I0712 00:20:00.649663 28316 net.cpp:98] Creating Layer pool4
I0712 00:20:00.649664 28316 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:20:00.649667 28316 net.cpp:413] pool4 -> pool4
I0712 00:20:00.649708 28316 net.cpp:148] Setting up pool4
I0712 00:20:00.649711 28316 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:20:00.649713 28316 net.cpp:163] Memory required for data: 219152384
I0712 00:20:00.649715 28316 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:20:00.649721 28316 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:20:00.649724 28316 net.cpp:439] res5a_branch2a <- pool4
I0712 00:20:00.649729 28316 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:20:00.675459 28316 net.cpp:148] Setting up res5a_branch2a
I0712 00:20:00.675474 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.675477 28316 net.cpp:163] Memory required for data: 223346688
I0712 00:20:00.675482 28316 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:20:00.675490 28316 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:20:00.675493 28316 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:20:00.675496 28316 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:20:00.676128 28316 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:20:00.676133 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.676136 28316 net.cpp:163] Memory required for data: 227540992
I0712 00:20:00.676141 28316 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:20:00.676144 28316 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:20:00.676146 28316 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:20:00.676148 28316 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:20:00.676152 28316 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:20:00.676154 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.676156 28316 net.cpp:163] Memory required for data: 231735296
I0712 00:20:00.676157 28316 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:20:00.676162 28316 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:20:00.676164 28316 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:20:00.676167 28316 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:20:00.688963 28316 net.cpp:148] Setting up res5a_branch2b
I0712 00:20:00.688974 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.688977 28316 net.cpp:163] Memory required for data: 235929600
I0712 00:20:00.688984 28316 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:20:00.688989 28316 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:20:00.688992 28316 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:20:00.688994 28316 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:20:00.689613 28316 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:20:00.689618 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.689620 28316 net.cpp:163] Memory required for data: 240123904
I0712 00:20:00.689625 28316 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:20:00.689628 28316 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:20:00.689630 28316 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:20:00.689632 28316 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:20:00.689636 28316 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:20:00.689638 28316 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:20:00.689640 28316 net.cpp:163] Memory required for data: 244318208
I0712 00:20:00.689641 28316 layer_factory.hpp:77] Creating layer out5a
I0712 00:20:00.689646 28316 net.cpp:98] Creating Layer out5a
I0712 00:20:00.689647 28316 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:20:00.689649 28316 net.cpp:413] out5a -> out5a
I0712 00:20:00.693754 28316 net.cpp:148] Setting up out5a
I0712 00:20:00.693763 28316 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:20:00.693765 28316 net.cpp:163] Memory required for data: 244842496
I0712 00:20:00.693769 28316 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:20:00.693773 28316 net.cpp:98] Creating Layer out5a/bn
I0712 00:20:00.693776 28316 net.cpp:439] out5a/bn <- out5a
I0712 00:20:00.693779 28316 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:20:00.694469 28316 net.cpp:148] Setting up out5a/bn
I0712 00:20:00.694474 28316 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:20:00.694476 28316 net.cpp:163] Memory required for data: 245366784
I0712 00:20:00.694481 28316 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:20:00.694484 28316 net.cpp:98] Creating Layer out5a/relu
I0712 00:20:00.694486 28316 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:20:00.694489 28316 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:20:00.694491 28316 net.cpp:148] Setting up out5a/relu
I0712 00:20:00.694494 28316 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:20:00.694495 28316 net.cpp:163] Memory required for data: 245891072
I0712 00:20:00.694496 28316 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:20:00.694505 28316 net.cpp:98] Creating Layer out5a_up2
I0712 00:20:00.694507 28316 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:20:00.694511 28316 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:20:00.694748 28316 net.cpp:148] Setting up out5a_up2
I0712 00:20:00.694753 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.694756 28316 net.cpp:163] Memory required for data: 247988224
I0712 00:20:00.694757 28316 layer_factory.hpp:77] Creating layer out3a
I0712 00:20:00.694761 28316 net.cpp:98] Creating Layer out3a
I0712 00:20:00.694764 28316 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:20:00.694766 28316 net.cpp:413] out3a -> out3a
I0712 00:20:00.695782 28316 net.cpp:148] Setting up out3a
I0712 00:20:00.695788 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.695789 28316 net.cpp:163] Memory required for data: 250085376
I0712 00:20:00.695792 28316 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:20:00.695796 28316 net.cpp:98] Creating Layer out3a/bn
I0712 00:20:00.695797 28316 net.cpp:439] out3a/bn <- out3a
I0712 00:20:00.695801 28316 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:20:00.696493 28316 net.cpp:148] Setting up out3a/bn
I0712 00:20:00.696498 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.696501 28316 net.cpp:163] Memory required for data: 252182528
I0712 00:20:00.696507 28316 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:20:00.696511 28316 net.cpp:98] Creating Layer out3a/relu
I0712 00:20:00.696512 28316 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:20:00.696514 28316 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:20:00.696517 28316 net.cpp:148] Setting up out3a/relu
I0712 00:20:00.696519 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.696521 28316 net.cpp:163] Memory required for data: 254279680
I0712 00:20:00.696522 28316 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:20:00.696527 28316 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:20:00.696529 28316 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:20:00.696532 28316 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:20:00.696534 28316 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:20:00.696554 28316 net.cpp:148] Setting up out3_out5_combined
I0712 00:20:00.696558 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.696559 28316 net.cpp:163] Memory required for data: 256376832
I0712 00:20:00.696561 28316 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:20:00.696564 28316 net.cpp:98] Creating Layer ctx_conv1
I0712 00:20:00.696566 28316 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:20:00.696569 28316 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:20:00.697588 28316 net.cpp:148] Setting up ctx_conv1
I0712 00:20:00.697594 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.697597 28316 net.cpp:163] Memory required for data: 258473984
I0712 00:20:00.697599 28316 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:20:00.697602 28316 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:20:00.697604 28316 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:20:00.697608 28316 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:20:00.698299 28316 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:20:00.698304 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.698307 28316 net.cpp:163] Memory required for data: 260571136
I0712 00:20:00.698310 28316 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:20:00.698313 28316 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:20:00.698315 28316 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:20:00.698318 28316 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:20:00.698320 28316 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:20:00.698323 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.698324 28316 net.cpp:163] Memory required for data: 262668288
I0712 00:20:00.698325 28316 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:20:00.698328 28316 net.cpp:98] Creating Layer ctx_conv2
I0712 00:20:00.698330 28316 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:20:00.698333 28316 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:20:00.699342 28316 net.cpp:148] Setting up ctx_conv2
I0712 00:20:00.699347 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.699347 28316 net.cpp:163] Memory required for data: 264765440
I0712 00:20:00.699350 28316 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:20:00.699353 28316 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:20:00.699355 28316 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:20:00.699358 28316 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:20:00.700062 28316 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:20:00.700067 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.700069 28316 net.cpp:163] Memory required for data: 266862592
I0712 00:20:00.700073 28316 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:20:00.700076 28316 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:20:00.700078 28316 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:20:00.700080 28316 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:20:00.700083 28316 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:20:00.700085 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.700086 28316 net.cpp:163] Memory required for data: 268959744
I0712 00:20:00.700088 28316 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:20:00.700093 28316 net.cpp:98] Creating Layer ctx_conv3
I0712 00:20:00.700093 28316 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:20:00.700096 28316 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:20:00.701181 28316 net.cpp:148] Setting up ctx_conv3
I0712 00:20:00.701189 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.701191 28316 net.cpp:163] Memory required for data: 271056896
I0712 00:20:00.701195 28316 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:20:00.701198 28316 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:20:00.701200 28316 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:20:00.701203 28316 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:20:00.701933 28316 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:20:00.701939 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.701941 28316 net.cpp:163] Memory required for data: 273154048
I0712 00:20:00.701946 28316 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:20:00.701949 28316 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:20:00.701951 28316 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:20:00.701953 28316 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:20:00.701956 28316 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:20:00.701958 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.701961 28316 net.cpp:163] Memory required for data: 275251200
I0712 00:20:00.701962 28316 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:20:00.701967 28316 net.cpp:98] Creating Layer ctx_conv4
I0712 00:20:00.701968 28316 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:20:00.701972 28316 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:20:00.702989 28316 net.cpp:148] Setting up ctx_conv4
I0712 00:20:00.702994 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.702996 28316 net.cpp:163] Memory required for data: 277348352
I0712 00:20:00.702999 28316 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:20:00.703003 28316 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:20:00.703004 28316 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:20:00.703007 28316 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:20:00.703704 28316 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:20:00.703709 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.703711 28316 net.cpp:163] Memory required for data: 279445504
I0712 00:20:00.703716 28316 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:20:00.703719 28316 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:20:00.703722 28316 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:20:00.703723 28316 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:20:00.703727 28316 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:20:00.703728 28316 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:20:00.703729 28316 net.cpp:163] Memory required for data: 281542656
I0712 00:20:00.703732 28316 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:20:00.703734 28316 net.cpp:98] Creating Layer ctx_final
I0712 00:20:00.703737 28316 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:20:00.703739 28316 net.cpp:413] ctx_final -> ctx_final
I0712 00:20:00.704123 28316 net.cpp:148] Setting up ctx_final
I0712 00:20:00.704129 28316 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:20:00.704131 28316 net.cpp:163] Memory required for data: 281804800
I0712 00:20:00.704134 28316 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:20:00.704136 28316 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:20:00.704138 28316 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:20:00.704140 28316 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:20:00.704144 28316 net.cpp:148] Setting up ctx_final/relu
I0712 00:20:00.704146 28316 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:20:00.704147 28316 net.cpp:163] Memory required for data: 282066944
I0712 00:20:00.704149 28316 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:20:00.704152 28316 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:20:00.704154 28316 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:20:00.704156 28316 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:20:00.704380 28316 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:20:00.704383 28316 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:20:00.704385 28316 net.cpp:163] Memory required for data: 283115520
I0712 00:20:00.704387 28316 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:20:00.704391 28316 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:20:00.704392 28316 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:20:00.704394 28316 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:20:00.704613 28316 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:20:00.704618 28316 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:20:00.704620 28316 net.cpp:163] Memory required for data: 287309824
I0712 00:20:00.704622 28316 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:20:00.704625 28316 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:20:00.704627 28316 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:20:00.704629 28316 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:20:00.704855 28316 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:20:00.704860 28316 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:20:00.704862 28316 net.cpp:163] Memory required for data: 304087040
I0712 00:20:00.704864 28316 layer_factory.hpp:77] Creating layer prob
I0712 00:20:00.704867 28316 net.cpp:98] Creating Layer prob
I0712 00:20:00.704869 28316 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:20:00.704871 28316 net.cpp:413] prob -> prob
I0712 00:20:00.704944 28316 net.cpp:148] Setting up prob
I0712 00:20:00.704948 28316 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:20:00.704951 28316 net.cpp:163] Memory required for data: 320864256
I0712 00:20:00.704952 28316 net.cpp:226] prob does not need backward computation.
I0712 00:20:00.704954 28316 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:20:00.704955 28316 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:20:00.704957 28316 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:20:00.704959 28316 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:20:00.704960 28316 net.cpp:226] ctx_final does not need backward computation.
I0712 00:20:00.704962 28316 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:20:00.704964 28316 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:20:00.704965 28316 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:20:00.704967 28316 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:20:00.704969 28316 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:20:00.704970 28316 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:20:00.704972 28316 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:20:00.704974 28316 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:20:00.704977 28316 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:20:00.704977 28316 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:20:00.704979 28316 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:20:00.704982 28316 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:20:00.704985 28316 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:20:00.704988 28316 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:20:00.704990 28316 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:20:00.704993 28316 net.cpp:226] out3a does not need backward computation.
I0712 00:20:00.704995 28316 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:20:00.705000 28316 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:20:00.705003 28316 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:20:00.705008 28316 net.cpp:226] out5a does not need backward computation.
I0712 00:20:00.705010 28316 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:20:00.705013 28316 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:20:00.705018 28316 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:20:00.705020 28316 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:20:00.705023 28316 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:20:00.705025 28316 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:20:00.705029 28316 net.cpp:226] pool4 does not need backward computation.
I0712 00:20:00.705031 28316 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:20:00.705034 28316 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:20:00.705035 28316 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:20:00.705039 28316 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:20:00.705041 28316 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:20:00.705045 28316 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:20:00.705047 28316 net.cpp:226] pool3 does not need backward computation.
I0712 00:20:00.705051 28316 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:20:00.705054 28316 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:20:00.705056 28316 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:20:00.705058 28316 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:20:00.705060 28316 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:20:00.705063 28316 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:20:00.705066 28316 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:20:00.705070 28316 net.cpp:226] pool2 does not need backward computation.
I0712 00:20:00.705075 28316 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:20:00.705077 28316 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:20:00.705080 28316 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:20:00.705083 28316 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:20:00.705086 28316 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:20:00.705090 28316 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:20:00.705092 28316 net.cpp:226] pool1 does not need backward computation.
I0712 00:20:00.705096 28316 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:20:00.705098 28316 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:20:00.705102 28316 net.cpp:226] conv1b does not need backward computation.
I0712 00:20:00.705104 28316 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:20:00.705108 28316 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:20:00.705111 28316 net.cpp:226] conv1a does not need backward computation.
I0712 00:20:00.705114 28316 net.cpp:226] data/bias does not need backward computation.
I0712 00:20:00.705116 28316 net.cpp:226] input does not need backward computation.
I0712 00:20:00.705119 28316 net.cpp:268] This network produces output prob
I0712 00:20:00.705147 28316 net.cpp:288] Network initialization done.
I0712 00:20:00.715574 28316 net.cpp:804] Ignoring source layer data
I0712 00:20:00.717046 28316 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['1024', '512'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/l1reg/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
pixel_accuracy=0.940922049912, mean_iou=0.770745670278, iou=[ 0.90570479  0.88601516  0.69035467  0.49198279  0.87967095]
l1reg eval.
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0712 00:21:58.295397 30806 upgrade_proto.cpp:66] Attempting to upgrade input file specified using deprecated input fields: ../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt
I0712 00:21:58.295425 30806 upgrade_proto.cpp:69] Successfully upgraded file specified using deprecated input fields.
W0712 00:21:58.295428 30806 upgrade_proto.cpp:71] Note that future Caffe releases will only support input layers and not input fields.
I0712 00:21:58.295709 30806 net.cpp:56] Initializing net from parameters: 
name: "jsegnet21v2_deploy"
state {
  phase: TEST
}
layer {
  name: "input"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 3
      dim: 512
      dim: 1024
    }
  }
}
layer {
  name: "data/bias"
  type: "Bias"
  bottom: "data"
  top: "data/bias"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bias_param {
    filler {
      type: "constant"
      value: -128
    }
  }
}
layer {
  name: "conv1a"
  type: "Convolution"
  bottom: "data/bias"
  top: "conv1a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 2
    kernel_size: 5
    group: 1
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1a/bn"
  type: "BatchNorm"
  bottom: "conv1a"
  top: "conv1a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1a/relu"
  type: "ReLU"
  bottom: "conv1a/bn"
  top: "conv1a/bn"
}
layer {
  name: "conv1b"
  type: "Convolution"
  bottom: "conv1a/bn"
  top: "conv1b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "conv1b/bn"
  type: "BatchNorm"
  bottom: "conv1b"
  top: "conv1b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1b/relu"
  type: "ReLU"
  bottom: "conv1b/bn"
  top: "conv1b/bn"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1b/bn"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res2a_branch2a"
  type: "Convolution"
  bottom: "pool1"
  top: "res2a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2a"
  top: "res2a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2a/relu"
  type: "ReLU"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2a/bn"
}
layer {
  name: "res2a_branch2b"
  type: "Convolution"
  bottom: "res2a_branch2a/bn"
  top: "res2a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res2a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res2a_branch2b"
  top: "res2a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res2a_branch2b/relu"
  type: "ReLU"
  bottom: "res2a_branch2b/bn"
  top: "res2a_branch2b/bn"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res2a_branch2b/bn"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res3a_branch2a"
  type: "Convolution"
  bottom: "pool2"
  top: "res3a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2a"
  top: "res3a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2a/relu"
  type: "ReLU"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2a/bn"
}
layer {
  name: "res3a_branch2b"
  type: "Convolution"
  bottom: "res3a_branch2a/bn"
  top: "res3a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res3a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res3a_branch2b"
  top: "res3a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res3a_branch2b/relu"
  type: "ReLU"
  bottom: "res3a_branch2b/bn"
  top: "res3a_branch2b/bn"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res3a_branch2b/bn"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "res4a_branch2a"
  type: "Convolution"
  bottom: "pool3"
  top: "res4a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2a"
  top: "res4a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2a/relu"
  type: "ReLU"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2a/bn"
}
layer {
  name: "res4a_branch2b"
  type: "Convolution"
  bottom: "res4a_branch2a/bn"
  top: "res4a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "res4a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res4a_branch2b"
  top: "res4a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res4a_branch2b/relu"
  type: "ReLU"
  bottom: "res4a_branch2b/bn"
  top: "res4a_branch2b/bn"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "res4a_branch2b/bn"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "res5a_branch2a"
  type: "Convolution"
  bottom: "pool4"
  top: "res5a_branch2a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2a/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2a"
  top: "res5a_branch2a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2a/relu"
  type: "ReLU"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2a/bn"
}
layer {
  name: "res5a_branch2b"
  type: "Convolution"
  bottom: "res5a_branch2a/bn"
  top: "res5a_branch2b"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    group: 4
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "res5a_branch2b/bn"
  type: "BatchNorm"
  bottom: "res5a_branch2b"
  top: "res5a_branch2b/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "res5a_branch2b/relu"
  type: "ReLU"
  bottom: "res5a_branch2b/bn"
  top: "res5a_branch2b/bn"
}
layer {
  name: "out5a"
  type: "Convolution"
  bottom: "res5a_branch2b/bn"
  top: "out5a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "out5a/bn"
  type: "BatchNorm"
  bottom: "out5a"
  top: "out5a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out5a/relu"
  type: "ReLU"
  bottom: "out5a/bn"
  top: "out5a/bn"
}
layer {
  name: "out5a_up2"
  type: "Deconvolution"
  bottom: "out5a/bn"
  top: "out5a_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 64
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out3a"
  type: "Convolution"
  bottom: "res3a_branch2b/bn"
  top: "out3a"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 2
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "out3a/bn"
  type: "BatchNorm"
  bottom: "out3a"
  top: "out3a/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "out3a/relu"
  type: "ReLU"
  bottom: "out3a/bn"
  top: "out3a/bn"
}
layer {
  name: "out3_out5_combined"
  type: "Eltwise"
  bottom: "out5a_up2"
  bottom: "out3a/bn"
  top: "out3_out5_combined"
}
layer {
  name: "ctx_conv1"
  type: "Convolution"
  bottom: "out3_out5_combined"
  top: "ctx_conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_conv1/bn"
  type: "BatchNorm"
  bottom: "ctx_conv1"
  top: "ctx_conv1/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv1/relu"
  type: "ReLU"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv1/bn"
}
layer {
  name: "ctx_conv2"
  type: "Convolution"
  bottom: "ctx_conv1/bn"
  top: "ctx_conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv2/bn"
  type: "BatchNorm"
  bottom: "ctx_conv2"
  top: "ctx_conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv2/relu"
  type: "ReLU"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv2/bn"
}
layer {
  name: "ctx_conv3"
  type: "Convolution"
  bottom: "ctx_conv2/bn"
  top: "ctx_conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv3/bn"
  type: "BatchNorm"
  bottom: "ctx_conv3"
  top: "ctx_conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv3/relu"
  type: "ReLU"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv3/bn"
}
layer {
  name: "ctx_conv4"
  type: "Convolution"
  bottom: "ctx_conv3/bn"
  top: "ctx_conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 4
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 4
  }
}
layer {
  name: "ctx_conv4/bn"
  type: "BatchNorm"
  bottom: "ctx_conv4"
  top: "ctx_conv4/bn"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.99
    eps: 0.0001
    scale_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ctx_conv4/relu"
  type: "ReLU"
  bottom: "ctx_conv4/bn"
  top: "ctx_conv4/bn"
}
layer {
  name: "ctx_final"
  type: "Convolution"
  bottom: "ctx_conv4/bn"
  top: "ctx_final"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: true
    pad: 1
    kernel_size: 3
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "ctx_final/relu"
  type: "ReLU"
  bottom: "ctx_final"
  top: "ctx_final"
}
layer {
  name: "out_deconv_final_up2"
  type: "Deconvolution"
  bottom: "ctx_final"
  top: "out_deconv_final_up2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up4"
  type: "Deconvolution"
  bottom: "out_deconv_final_up2"
  top: "out_deconv_final_up4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "out_deconv_final_up8"
  type: "Deconvolution"
  bottom: "out_deconv_final_up4"
  top: "out_deconv_final_up8"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 8
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "out_deconv_final_up8"
  top: "prob"
}
I0712 00:21:58.295845 30806 layer_factory.hpp:77] Creating layer input
I0712 00:21:58.295855 30806 net.cpp:98] Creating Layer input
I0712 00:21:58.295857 30806 net.cpp:413] input -> data
I0712 00:21:58.296968 30806 net.cpp:148] Setting up input
I0712 00:21:58.296978 30806 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:21:58.296983 30806 net.cpp:163] Memory required for data: 6291456
I0712 00:21:58.296986 30806 layer_factory.hpp:77] Creating layer data/bias
I0712 00:21:58.296996 30806 net.cpp:98] Creating Layer data/bias
I0712 00:21:58.296999 30806 net.cpp:439] data/bias <- data
I0712 00:21:58.297005 30806 net.cpp:413] data/bias -> data/bias
I0712 00:21:58.298159 30806 net.cpp:148] Setting up data/bias
I0712 00:21:58.298169 30806 net.cpp:155] Top shape: 1 3 512 1024 (1572864)
I0712 00:21:58.298172 30806 net.cpp:163] Memory required for data: 12582912
I0712 00:21:58.298182 30806 layer_factory.hpp:77] Creating layer conv1a
I0712 00:21:58.298189 30806 net.cpp:98] Creating Layer conv1a
I0712 00:21:58.298194 30806 net.cpp:439] conv1a <- data/bias
I0712 00:21:58.298198 30806 net.cpp:413] conv1a -> conv1a
I0712 00:21:58.300564 30806 net.cpp:148] Setting up conv1a
I0712 00:21:58.300575 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.300578 30806 net.cpp:163] Memory required for data: 29360128
I0712 00:21:58.300585 30806 layer_factory.hpp:77] Creating layer conv1a/bn
I0712 00:21:58.300595 30806 net.cpp:98] Creating Layer conv1a/bn
I0712 00:21:58.300598 30806 net.cpp:439] conv1a/bn <- conv1a
I0712 00:21:58.300603 30806 net.cpp:413] conv1a/bn -> conv1a/bn
I0712 00:21:58.301321 30806 net.cpp:148] Setting up conv1a/bn
I0712 00:21:58.301328 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.301331 30806 net.cpp:163] Memory required for data: 46137344
I0712 00:21:58.301340 30806 layer_factory.hpp:77] Creating layer conv1a/relu
I0712 00:21:58.301345 30806 net.cpp:98] Creating Layer conv1a/relu
I0712 00:21:58.301350 30806 net.cpp:439] conv1a/relu <- conv1a/bn
I0712 00:21:58.301354 30806 net.cpp:400] conv1a/relu -> conv1a/bn (in-place)
I0712 00:21:58.301365 30806 net.cpp:148] Setting up conv1a/relu
I0712 00:21:58.301369 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.301373 30806 net.cpp:163] Memory required for data: 62914560
I0712 00:21:58.301375 30806 layer_factory.hpp:77] Creating layer conv1b
I0712 00:21:58.301380 30806 net.cpp:98] Creating Layer conv1b
I0712 00:21:58.301384 30806 net.cpp:439] conv1b <- conv1a/bn
I0712 00:21:58.301388 30806 net.cpp:413] conv1b -> conv1b
I0712 00:21:58.301744 30806 net.cpp:148] Setting up conv1b
I0712 00:21:58.301751 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.301754 30806 net.cpp:163] Memory required for data: 79691776
I0712 00:21:58.301760 30806 layer_factory.hpp:77] Creating layer conv1b/bn
I0712 00:21:58.301765 30806 net.cpp:98] Creating Layer conv1b/bn
I0712 00:21:58.301769 30806 net.cpp:439] conv1b/bn <- conv1b
I0712 00:21:58.301777 30806 net.cpp:413] conv1b/bn -> conv1b/bn
I0712 00:21:58.302464 30806 net.cpp:148] Setting up conv1b/bn
I0712 00:21:58.302469 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.302472 30806 net.cpp:163] Memory required for data: 96468992
I0712 00:21:58.302480 30806 layer_factory.hpp:77] Creating layer conv1b/relu
I0712 00:21:58.302484 30806 net.cpp:98] Creating Layer conv1b/relu
I0712 00:21:58.302489 30806 net.cpp:439] conv1b/relu <- conv1b/bn
I0712 00:21:58.302492 30806 net.cpp:400] conv1b/relu -> conv1b/bn (in-place)
I0712 00:21:58.302498 30806 net.cpp:148] Setting up conv1b/relu
I0712 00:21:58.302502 30806 net.cpp:155] Top shape: 1 32 256 512 (4194304)
I0712 00:21:58.302506 30806 net.cpp:163] Memory required for data: 113246208
I0712 00:21:58.302510 30806 layer_factory.hpp:77] Creating layer pool1
I0712 00:21:58.302515 30806 net.cpp:98] Creating Layer pool1
I0712 00:21:58.302518 30806 net.cpp:439] pool1 <- conv1b/bn
I0712 00:21:58.302521 30806 net.cpp:413] pool1 -> pool1
I0712 00:21:58.302559 30806 net.cpp:148] Setting up pool1
I0712 00:21:58.302564 30806 net.cpp:155] Top shape: 1 32 128 256 (1048576)
I0712 00:21:58.302567 30806 net.cpp:163] Memory required for data: 117440512
I0712 00:21:58.302572 30806 layer_factory.hpp:77] Creating layer res2a_branch2a
I0712 00:21:58.302577 30806 net.cpp:98] Creating Layer res2a_branch2a
I0712 00:21:58.302580 30806 net.cpp:439] res2a_branch2a <- pool1
I0712 00:21:58.302584 30806 net.cpp:413] res2a_branch2a -> res2a_branch2a
I0712 00:21:58.304081 30806 net.cpp:148] Setting up res2a_branch2a
I0712 00:21:58.304090 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.304095 30806 net.cpp:163] Memory required for data: 125829120
I0712 00:21:58.304101 30806 layer_factory.hpp:77] Creating layer res2a_branch2a/bn
I0712 00:21:58.304107 30806 net.cpp:98] Creating Layer res2a_branch2a/bn
I0712 00:21:58.304111 30806 net.cpp:439] res2a_branch2a/bn <- res2a_branch2a
I0712 00:21:58.304117 30806 net.cpp:413] res2a_branch2a/bn -> res2a_branch2a/bn
I0712 00:21:58.304772 30806 net.cpp:148] Setting up res2a_branch2a/bn
I0712 00:21:58.304778 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.304781 30806 net.cpp:163] Memory required for data: 134217728
I0712 00:21:58.304790 30806 layer_factory.hpp:77] Creating layer res2a_branch2a/relu
I0712 00:21:58.304793 30806 net.cpp:98] Creating Layer res2a_branch2a/relu
I0712 00:21:58.304797 30806 net.cpp:439] res2a_branch2a/relu <- res2a_branch2a/bn
I0712 00:21:58.304801 30806 net.cpp:400] res2a_branch2a/relu -> res2a_branch2a/bn (in-place)
I0712 00:21:58.304807 30806 net.cpp:148] Setting up res2a_branch2a/relu
I0712 00:21:58.304811 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.304819 30806 net.cpp:163] Memory required for data: 142606336
I0712 00:21:58.304823 30806 layer_factory.hpp:77] Creating layer res2a_branch2b
I0712 00:21:58.304828 30806 net.cpp:98] Creating Layer res2a_branch2b
I0712 00:21:58.304831 30806 net.cpp:439] res2a_branch2b <- res2a_branch2a/bn
I0712 00:21:58.304836 30806 net.cpp:413] res2a_branch2b -> res2a_branch2b
I0712 00:21:58.306169 30806 net.cpp:148] Setting up res2a_branch2b
I0712 00:21:58.306177 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.306180 30806 net.cpp:163] Memory required for data: 150994944
I0712 00:21:58.306186 30806 layer_factory.hpp:77] Creating layer res2a_branch2b/bn
I0712 00:21:58.306192 30806 net.cpp:98] Creating Layer res2a_branch2b/bn
I0712 00:21:58.306196 30806 net.cpp:439] res2a_branch2b/bn <- res2a_branch2b
I0712 00:21:58.306200 30806 net.cpp:413] res2a_branch2b/bn -> res2a_branch2b/bn
I0712 00:21:58.306871 30806 net.cpp:148] Setting up res2a_branch2b/bn
I0712 00:21:58.306879 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.306881 30806 net.cpp:163] Memory required for data: 159383552
I0712 00:21:58.306890 30806 layer_factory.hpp:77] Creating layer res2a_branch2b/relu
I0712 00:21:58.306893 30806 net.cpp:98] Creating Layer res2a_branch2b/relu
I0712 00:21:58.306896 30806 net.cpp:439] res2a_branch2b/relu <- res2a_branch2b/bn
I0712 00:21:58.306901 30806 net.cpp:400] res2a_branch2b/relu -> res2a_branch2b/bn (in-place)
I0712 00:21:58.306907 30806 net.cpp:148] Setting up res2a_branch2b/relu
I0712 00:21:58.306911 30806 net.cpp:155] Top shape: 1 64 128 256 (2097152)
I0712 00:21:58.306915 30806 net.cpp:163] Memory required for data: 167772160
I0712 00:21:58.306918 30806 layer_factory.hpp:77] Creating layer pool2
I0712 00:21:58.306923 30806 net.cpp:98] Creating Layer pool2
I0712 00:21:58.306926 30806 net.cpp:439] pool2 <- res2a_branch2b/bn
I0712 00:21:58.306931 30806 net.cpp:413] pool2 -> pool2
I0712 00:21:58.306968 30806 net.cpp:148] Setting up pool2
I0712 00:21:58.306973 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.306977 30806 net.cpp:163] Memory required for data: 169869312
I0712 00:21:58.306979 30806 layer_factory.hpp:77] Creating layer res3a_branch2a
I0712 00:21:58.306987 30806 net.cpp:98] Creating Layer res3a_branch2a
I0712 00:21:58.306996 30806 net.cpp:439] res3a_branch2a <- pool2
I0712 00:21:58.307000 30806 net.cpp:413] res3a_branch2a -> res3a_branch2a
I0712 00:21:58.309623 30806 net.cpp:148] Setting up res3a_branch2a
I0712 00:21:58.309633 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.309635 30806 net.cpp:163] Memory required for data: 174063616
I0712 00:21:58.309643 30806 layer_factory.hpp:77] Creating layer res3a_branch2a/bn
I0712 00:21:58.309648 30806 net.cpp:98] Creating Layer res3a_branch2a/bn
I0712 00:21:58.309653 30806 net.cpp:439] res3a_branch2a/bn <- res3a_branch2a
I0712 00:21:58.309658 30806 net.cpp:413] res3a_branch2a/bn -> res3a_branch2a/bn
I0712 00:21:58.310263 30806 net.cpp:148] Setting up res3a_branch2a/bn
I0712 00:21:58.310271 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.310273 30806 net.cpp:163] Memory required for data: 178257920
I0712 00:21:58.310282 30806 layer_factory.hpp:77] Creating layer res3a_branch2a/relu
I0712 00:21:58.310287 30806 net.cpp:98] Creating Layer res3a_branch2a/relu
I0712 00:21:58.310292 30806 net.cpp:439] res3a_branch2a/relu <- res3a_branch2a/bn
I0712 00:21:58.310295 30806 net.cpp:400] res3a_branch2a/relu -> res3a_branch2a/bn (in-place)
I0712 00:21:58.310303 30806 net.cpp:148] Setting up res3a_branch2a/relu
I0712 00:21:58.310308 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.310312 30806 net.cpp:163] Memory required for data: 182452224
I0712 00:21:58.310314 30806 layer_factory.hpp:77] Creating layer res3a_branch2b
I0712 00:21:58.310320 30806 net.cpp:98] Creating Layer res3a_branch2b
I0712 00:21:58.310324 30806 net.cpp:439] res3a_branch2b <- res3a_branch2a/bn
I0712 00:21:58.310328 30806 net.cpp:413] res3a_branch2b -> res3a_branch2b
I0712 00:21:58.311324 30806 net.cpp:148] Setting up res3a_branch2b
I0712 00:21:58.311331 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.311333 30806 net.cpp:163] Memory required for data: 186646528
I0712 00:21:58.311338 30806 layer_factory.hpp:77] Creating layer res3a_branch2b/bn
I0712 00:21:58.311344 30806 net.cpp:98] Creating Layer res3a_branch2b/bn
I0712 00:21:58.311348 30806 net.cpp:439] res3a_branch2b/bn <- res3a_branch2b
I0712 00:21:58.311352 30806 net.cpp:413] res3a_branch2b/bn -> res3a_branch2b/bn
I0712 00:21:58.311954 30806 net.cpp:148] Setting up res3a_branch2b/bn
I0712 00:21:58.311960 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.311964 30806 net.cpp:163] Memory required for data: 190840832
I0712 00:21:58.311970 30806 layer_factory.hpp:77] Creating layer res3a_branch2b/relu
I0712 00:21:58.311975 30806 net.cpp:98] Creating Layer res3a_branch2b/relu
I0712 00:21:58.311980 30806 net.cpp:439] res3a_branch2b/relu <- res3a_branch2b/bn
I0712 00:21:58.311983 30806 net.cpp:400] res3a_branch2b/relu -> res3a_branch2b/bn (in-place)
I0712 00:21:58.311990 30806 net.cpp:148] Setting up res3a_branch2b/relu
I0712 00:21:58.311995 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.311997 30806 net.cpp:163] Memory required for data: 195035136
I0712 00:21:58.312000 30806 layer_factory.hpp:77] Creating layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:21:58.312005 30806 net.cpp:98] Creating Layer res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:21:58.312008 30806 net.cpp:439] res3a_branch2b/bn_res3a_branch2b/relu_0_split <- res3a_branch2b/bn
I0712 00:21:58.312012 30806 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:21:58.312018 30806 net.cpp:413] res3a_branch2b/bn_res3a_branch2b/relu_0_split -> res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:21:58.312054 30806 net.cpp:148] Setting up res3a_branch2b/bn_res3a_branch2b/relu_0_split
I0712 00:21:58.312059 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.312063 30806 net.cpp:155] Top shape: 1 128 64 128 (1048576)
I0712 00:21:58.312067 30806 net.cpp:163] Memory required for data: 203423744
I0712 00:21:58.312070 30806 layer_factory.hpp:77] Creating layer pool3
I0712 00:21:58.312075 30806 net.cpp:98] Creating Layer pool3
I0712 00:21:58.312079 30806 net.cpp:439] pool3 <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_0
I0712 00:21:58.312083 30806 net.cpp:413] pool3 -> pool3
I0712 00:21:58.312120 30806 net.cpp:148] Setting up pool3
I0712 00:21:58.312125 30806 net.cpp:155] Top shape: 1 128 32 64 (262144)
I0712 00:21:58.312129 30806 net.cpp:163] Memory required for data: 204472320
I0712 00:21:58.312132 30806 layer_factory.hpp:77] Creating layer res4a_branch2a
I0712 00:21:58.312139 30806 net.cpp:98] Creating Layer res4a_branch2a
I0712 00:21:58.312142 30806 net.cpp:439] res4a_branch2a <- pool3
I0712 00:21:58.312146 30806 net.cpp:413] res4a_branch2a -> res4a_branch2a
I0712 00:21:58.318192 30806 net.cpp:148] Setting up res4a_branch2a
I0712 00:21:58.318199 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.318202 30806 net.cpp:163] Memory required for data: 206569472
I0712 00:21:58.318207 30806 layer_factory.hpp:77] Creating layer res4a_branch2a/bn
I0712 00:21:58.318213 30806 net.cpp:98] Creating Layer res4a_branch2a/bn
I0712 00:21:58.318217 30806 net.cpp:439] res4a_branch2a/bn <- res4a_branch2a
I0712 00:21:58.318222 30806 net.cpp:413] res4a_branch2a/bn -> res4a_branch2a/bn
I0712 00:21:58.318819 30806 net.cpp:148] Setting up res4a_branch2a/bn
I0712 00:21:58.318825 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.318828 30806 net.cpp:163] Memory required for data: 208666624
I0712 00:21:58.318836 30806 layer_factory.hpp:77] Creating layer res4a_branch2a/relu
I0712 00:21:58.318840 30806 net.cpp:98] Creating Layer res4a_branch2a/relu
I0712 00:21:58.318845 30806 net.cpp:439] res4a_branch2a/relu <- res4a_branch2a/bn
I0712 00:21:58.318848 30806 net.cpp:400] res4a_branch2a/relu -> res4a_branch2a/bn (in-place)
I0712 00:21:58.318855 30806 net.cpp:148] Setting up res4a_branch2a/relu
I0712 00:21:58.318858 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.318862 30806 net.cpp:163] Memory required for data: 210763776
I0712 00:21:58.318866 30806 layer_factory.hpp:77] Creating layer res4a_branch2b
I0712 00:21:58.318871 30806 net.cpp:98] Creating Layer res4a_branch2b
I0712 00:21:58.318874 30806 net.cpp:439] res4a_branch2b <- res4a_branch2a/bn
I0712 00:21:58.318878 30806 net.cpp:413] res4a_branch2b -> res4a_branch2b
I0712 00:21:58.322175 30806 net.cpp:148] Setting up res4a_branch2b
I0712 00:21:58.322181 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.322185 30806 net.cpp:163] Memory required for data: 212860928
I0712 00:21:58.322190 30806 layer_factory.hpp:77] Creating layer res4a_branch2b/bn
I0712 00:21:58.322196 30806 net.cpp:98] Creating Layer res4a_branch2b/bn
I0712 00:21:58.322199 30806 net.cpp:439] res4a_branch2b/bn <- res4a_branch2b
I0712 00:21:58.322204 30806 net.cpp:413] res4a_branch2b/bn -> res4a_branch2b/bn
I0712 00:21:58.322850 30806 net.cpp:148] Setting up res4a_branch2b/bn
I0712 00:21:58.322857 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.322860 30806 net.cpp:163] Memory required for data: 214958080
I0712 00:21:58.322868 30806 layer_factory.hpp:77] Creating layer res4a_branch2b/relu
I0712 00:21:58.322878 30806 net.cpp:98] Creating Layer res4a_branch2b/relu
I0712 00:21:58.322881 30806 net.cpp:439] res4a_branch2b/relu <- res4a_branch2b/bn
I0712 00:21:58.322886 30806 net.cpp:400] res4a_branch2b/relu -> res4a_branch2b/bn (in-place)
I0712 00:21:58.322892 30806 net.cpp:148] Setting up res4a_branch2b/relu
I0712 00:21:58.322897 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.322901 30806 net.cpp:163] Memory required for data: 217055232
I0712 00:21:58.322903 30806 layer_factory.hpp:77] Creating layer pool4
I0712 00:21:58.322908 30806 net.cpp:98] Creating Layer pool4
I0712 00:21:58.322912 30806 net.cpp:439] pool4 <- res4a_branch2b/bn
I0712 00:21:58.322916 30806 net.cpp:413] pool4 -> pool4
I0712 00:21:58.322954 30806 net.cpp:148] Setting up pool4
I0712 00:21:58.322959 30806 net.cpp:155] Top shape: 1 256 32 64 (524288)
I0712 00:21:58.322962 30806 net.cpp:163] Memory required for data: 219152384
I0712 00:21:58.322965 30806 layer_factory.hpp:77] Creating layer res5a_branch2a
I0712 00:21:58.322978 30806 net.cpp:98] Creating Layer res5a_branch2a
I0712 00:21:58.322981 30806 net.cpp:439] res5a_branch2a <- pool4
I0712 00:21:58.322991 30806 net.cpp:413] res5a_branch2a -> res5a_branch2a
I0712 00:21:58.349035 30806 net.cpp:148] Setting up res5a_branch2a
I0712 00:21:58.349052 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.349056 30806 net.cpp:163] Memory required for data: 223346688
I0712 00:21:58.349062 30806 layer_factory.hpp:77] Creating layer res5a_branch2a/bn
I0712 00:21:58.349073 30806 net.cpp:98] Creating Layer res5a_branch2a/bn
I0712 00:21:58.349077 30806 net.cpp:439] res5a_branch2a/bn <- res5a_branch2a
I0712 00:21:58.349084 30806 net.cpp:413] res5a_branch2a/bn -> res5a_branch2a/bn
I0712 00:21:58.349750 30806 net.cpp:148] Setting up res5a_branch2a/bn
I0712 00:21:58.349756 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.349759 30806 net.cpp:163] Memory required for data: 227540992
I0712 00:21:58.349767 30806 layer_factory.hpp:77] Creating layer res5a_branch2a/relu
I0712 00:21:58.349771 30806 net.cpp:98] Creating Layer res5a_branch2a/relu
I0712 00:21:58.349776 30806 net.cpp:439] res5a_branch2a/relu <- res5a_branch2a/bn
I0712 00:21:58.349781 30806 net.cpp:400] res5a_branch2a/relu -> res5a_branch2a/bn (in-place)
I0712 00:21:58.349787 30806 net.cpp:148] Setting up res5a_branch2a/relu
I0712 00:21:58.349792 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.349795 30806 net.cpp:163] Memory required for data: 231735296
I0712 00:21:58.349799 30806 layer_factory.hpp:77] Creating layer res5a_branch2b
I0712 00:21:58.349807 30806 net.cpp:98] Creating Layer res5a_branch2b
I0712 00:21:58.349810 30806 net.cpp:439] res5a_branch2b <- res5a_branch2a/bn
I0712 00:21:58.349814 30806 net.cpp:413] res5a_branch2b -> res5a_branch2b
I0712 00:21:58.362680 30806 net.cpp:148] Setting up res5a_branch2b
I0712 00:21:58.362702 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.362705 30806 net.cpp:163] Memory required for data: 235929600
I0712 00:21:58.362716 30806 layer_factory.hpp:77] Creating layer res5a_branch2b/bn
I0712 00:21:58.362725 30806 net.cpp:98] Creating Layer res5a_branch2b/bn
I0712 00:21:58.362730 30806 net.cpp:439] res5a_branch2b/bn <- res5a_branch2b
I0712 00:21:58.362736 30806 net.cpp:413] res5a_branch2b/bn -> res5a_branch2b/bn
I0712 00:21:58.363401 30806 net.cpp:148] Setting up res5a_branch2b/bn
I0712 00:21:58.363409 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.363411 30806 net.cpp:163] Memory required for data: 240123904
I0712 00:21:58.363420 30806 layer_factory.hpp:77] Creating layer res5a_branch2b/relu
I0712 00:21:58.363425 30806 net.cpp:98] Creating Layer res5a_branch2b/relu
I0712 00:21:58.363428 30806 net.cpp:439] res5a_branch2b/relu <- res5a_branch2b/bn
I0712 00:21:58.363432 30806 net.cpp:400] res5a_branch2b/relu -> res5a_branch2b/bn (in-place)
I0712 00:21:58.363440 30806 net.cpp:148] Setting up res5a_branch2b/relu
I0712 00:21:58.363445 30806 net.cpp:155] Top shape: 1 512 32 64 (1048576)
I0712 00:21:58.363448 30806 net.cpp:163] Memory required for data: 244318208
I0712 00:21:58.363451 30806 layer_factory.hpp:77] Creating layer out5a
I0712 00:21:58.363458 30806 net.cpp:98] Creating Layer out5a
I0712 00:21:58.363461 30806 net.cpp:439] out5a <- res5a_branch2b/bn
I0712 00:21:58.363466 30806 net.cpp:413] out5a -> out5a
I0712 00:21:58.367635 30806 net.cpp:148] Setting up out5a
I0712 00:21:58.367645 30806 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:21:58.367647 30806 net.cpp:163] Memory required for data: 244842496
I0712 00:21:58.367653 30806 layer_factory.hpp:77] Creating layer out5a/bn
I0712 00:21:58.367663 30806 net.cpp:98] Creating Layer out5a/bn
I0712 00:21:58.367667 30806 net.cpp:439] out5a/bn <- out5a
I0712 00:21:58.367672 30806 net.cpp:413] out5a/bn -> out5a/bn
I0712 00:21:58.368394 30806 net.cpp:148] Setting up out5a/bn
I0712 00:21:58.368402 30806 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:21:58.368405 30806 net.cpp:163] Memory required for data: 245366784
I0712 00:21:58.368412 30806 layer_factory.hpp:77] Creating layer out5a/relu
I0712 00:21:58.368417 30806 net.cpp:98] Creating Layer out5a/relu
I0712 00:21:58.368420 30806 net.cpp:439] out5a/relu <- out5a/bn
I0712 00:21:58.368425 30806 net.cpp:400] out5a/relu -> out5a/bn (in-place)
I0712 00:21:58.368432 30806 net.cpp:148] Setting up out5a/relu
I0712 00:21:58.368436 30806 net.cpp:155] Top shape: 1 64 32 64 (131072)
I0712 00:21:58.368438 30806 net.cpp:163] Memory required for data: 245891072
I0712 00:21:58.368443 30806 layer_factory.hpp:77] Creating layer out5a_up2
I0712 00:21:58.368451 30806 net.cpp:98] Creating Layer out5a_up2
I0712 00:21:58.368455 30806 net.cpp:439] out5a_up2 <- out5a/bn
I0712 00:21:58.368459 30806 net.cpp:413] out5a_up2 -> out5a_up2
I0712 00:21:58.368710 30806 net.cpp:148] Setting up out5a_up2
I0712 00:21:58.368716 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.368719 30806 net.cpp:163] Memory required for data: 247988224
I0712 00:21:58.368724 30806 layer_factory.hpp:77] Creating layer out3a
I0712 00:21:58.368731 30806 net.cpp:98] Creating Layer out3a
I0712 00:21:58.368734 30806 net.cpp:439] out3a <- res3a_branch2b/bn_res3a_branch2b/relu_0_split_1
I0712 00:21:58.368741 30806 net.cpp:413] out3a -> out3a
I0712 00:21:58.369778 30806 net.cpp:148] Setting up out3a
I0712 00:21:58.369786 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.369788 30806 net.cpp:163] Memory required for data: 250085376
I0712 00:21:58.369793 30806 layer_factory.hpp:77] Creating layer out3a/bn
I0712 00:21:58.369799 30806 net.cpp:98] Creating Layer out3a/bn
I0712 00:21:58.369803 30806 net.cpp:439] out3a/bn <- out3a
I0712 00:21:58.369808 30806 net.cpp:413] out3a/bn -> out3a/bn
I0712 00:21:58.370532 30806 net.cpp:148] Setting up out3a/bn
I0712 00:21:58.370538 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.370542 30806 net.cpp:163] Memory required for data: 252182528
I0712 00:21:58.370553 30806 layer_factory.hpp:77] Creating layer out3a/relu
I0712 00:21:58.370558 30806 net.cpp:98] Creating Layer out3a/relu
I0712 00:21:58.370561 30806 net.cpp:439] out3a/relu <- out3a/bn
I0712 00:21:58.370565 30806 net.cpp:400] out3a/relu -> out3a/bn (in-place)
I0712 00:21:58.370571 30806 net.cpp:148] Setting up out3a/relu
I0712 00:21:58.370575 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.370579 30806 net.cpp:163] Memory required for data: 254279680
I0712 00:21:58.370581 30806 layer_factory.hpp:77] Creating layer out3_out5_combined
I0712 00:21:58.370589 30806 net.cpp:98] Creating Layer out3_out5_combined
I0712 00:21:58.370592 30806 net.cpp:439] out3_out5_combined <- out5a_up2
I0712 00:21:58.370595 30806 net.cpp:439] out3_out5_combined <- out3a/bn
I0712 00:21:58.370599 30806 net.cpp:413] out3_out5_combined -> out3_out5_combined
I0712 00:21:58.370628 30806 net.cpp:148] Setting up out3_out5_combined
I0712 00:21:58.370633 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.370636 30806 net.cpp:163] Memory required for data: 256376832
I0712 00:21:58.370640 30806 layer_factory.hpp:77] Creating layer ctx_conv1
I0712 00:21:58.370646 30806 net.cpp:98] Creating Layer ctx_conv1
I0712 00:21:58.370651 30806 net.cpp:439] ctx_conv1 <- out3_out5_combined
I0712 00:21:58.370654 30806 net.cpp:413] ctx_conv1 -> ctx_conv1
I0712 00:21:58.371722 30806 net.cpp:148] Setting up ctx_conv1
I0712 00:21:58.371729 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.371732 30806 net.cpp:163] Memory required for data: 258473984
I0712 00:21:58.371737 30806 layer_factory.hpp:77] Creating layer ctx_conv1/bn
I0712 00:21:58.371743 30806 net.cpp:98] Creating Layer ctx_conv1/bn
I0712 00:21:58.371747 30806 net.cpp:439] ctx_conv1/bn <- ctx_conv1
I0712 00:21:58.371757 30806 net.cpp:413] ctx_conv1/bn -> ctx_conv1/bn
I0712 00:21:58.372486 30806 net.cpp:148] Setting up ctx_conv1/bn
I0712 00:21:58.372493 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.372496 30806 net.cpp:163] Memory required for data: 260571136
I0712 00:21:58.372503 30806 layer_factory.hpp:77] Creating layer ctx_conv1/relu
I0712 00:21:58.372509 30806 net.cpp:98] Creating Layer ctx_conv1/relu
I0712 00:21:58.372512 30806 net.cpp:439] ctx_conv1/relu <- ctx_conv1/bn
I0712 00:21:58.372516 30806 net.cpp:400] ctx_conv1/relu -> ctx_conv1/bn (in-place)
I0712 00:21:58.372522 30806 net.cpp:148] Setting up ctx_conv1/relu
I0712 00:21:58.372527 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.372530 30806 net.cpp:163] Memory required for data: 262668288
I0712 00:21:58.372534 30806 layer_factory.hpp:77] Creating layer ctx_conv2
I0712 00:21:58.372540 30806 net.cpp:98] Creating Layer ctx_conv2
I0712 00:21:58.372544 30806 net.cpp:439] ctx_conv2 <- ctx_conv1/bn
I0712 00:21:58.372547 30806 net.cpp:413] ctx_conv2 -> ctx_conv2
I0712 00:21:58.373585 30806 net.cpp:148] Setting up ctx_conv2
I0712 00:21:58.373592 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.373595 30806 net.cpp:163] Memory required for data: 264765440
I0712 00:21:58.373600 30806 layer_factory.hpp:77] Creating layer ctx_conv2/bn
I0712 00:21:58.373606 30806 net.cpp:98] Creating Layer ctx_conv2/bn
I0712 00:21:58.373610 30806 net.cpp:439] ctx_conv2/bn <- ctx_conv2
I0712 00:21:58.373615 30806 net.cpp:413] ctx_conv2/bn -> ctx_conv2/bn
I0712 00:21:58.374341 30806 net.cpp:148] Setting up ctx_conv2/bn
I0712 00:21:58.374346 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.374349 30806 net.cpp:163] Memory required for data: 266862592
I0712 00:21:58.374356 30806 layer_factory.hpp:77] Creating layer ctx_conv2/relu
I0712 00:21:58.374361 30806 net.cpp:98] Creating Layer ctx_conv2/relu
I0712 00:21:58.374364 30806 net.cpp:439] ctx_conv2/relu <- ctx_conv2/bn
I0712 00:21:58.374368 30806 net.cpp:400] ctx_conv2/relu -> ctx_conv2/bn (in-place)
I0712 00:21:58.374374 30806 net.cpp:148] Setting up ctx_conv2/relu
I0712 00:21:58.374378 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.374382 30806 net.cpp:163] Memory required for data: 268959744
I0712 00:21:58.374385 30806 layer_factory.hpp:77] Creating layer ctx_conv3
I0712 00:21:58.374390 30806 net.cpp:98] Creating Layer ctx_conv3
I0712 00:21:58.374394 30806 net.cpp:439] ctx_conv3 <- ctx_conv2/bn
I0712 00:21:58.374398 30806 net.cpp:413] ctx_conv3 -> ctx_conv3
I0712 00:21:58.375432 30806 net.cpp:148] Setting up ctx_conv3
I0712 00:21:58.375438 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.375442 30806 net.cpp:163] Memory required for data: 271056896
I0712 00:21:58.375447 30806 layer_factory.hpp:77] Creating layer ctx_conv3/bn
I0712 00:21:58.375452 30806 net.cpp:98] Creating Layer ctx_conv3/bn
I0712 00:21:58.375455 30806 net.cpp:439] ctx_conv3/bn <- ctx_conv3
I0712 00:21:58.375459 30806 net.cpp:413] ctx_conv3/bn -> ctx_conv3/bn
I0712 00:21:58.376191 30806 net.cpp:148] Setting up ctx_conv3/bn
I0712 00:21:58.376199 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.376201 30806 net.cpp:163] Memory required for data: 273154048
I0712 00:21:58.376209 30806 layer_factory.hpp:77] Creating layer ctx_conv3/relu
I0712 00:21:58.376212 30806 net.cpp:98] Creating Layer ctx_conv3/relu
I0712 00:21:58.376216 30806 net.cpp:439] ctx_conv3/relu <- ctx_conv3/bn
I0712 00:21:58.376220 30806 net.cpp:400] ctx_conv3/relu -> ctx_conv3/bn (in-place)
I0712 00:21:58.376226 30806 net.cpp:148] Setting up ctx_conv3/relu
I0712 00:21:58.376231 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.376235 30806 net.cpp:163] Memory required for data: 275251200
I0712 00:21:58.376237 30806 layer_factory.hpp:77] Creating layer ctx_conv4
I0712 00:21:58.376247 30806 net.cpp:98] Creating Layer ctx_conv4
I0712 00:21:58.376250 30806 net.cpp:439] ctx_conv4 <- ctx_conv3/bn
I0712 00:21:58.376255 30806 net.cpp:413] ctx_conv4 -> ctx_conv4
I0712 00:21:58.377287 30806 net.cpp:148] Setting up ctx_conv4
I0712 00:21:58.377293 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.377296 30806 net.cpp:163] Memory required for data: 277348352
I0712 00:21:58.377301 30806 layer_factory.hpp:77] Creating layer ctx_conv4/bn
I0712 00:21:58.377306 30806 net.cpp:98] Creating Layer ctx_conv4/bn
I0712 00:21:58.377311 30806 net.cpp:439] ctx_conv4/bn <- ctx_conv4
I0712 00:21:58.377315 30806 net.cpp:413] ctx_conv4/bn -> ctx_conv4/bn
I0712 00:21:58.378043 30806 net.cpp:148] Setting up ctx_conv4/bn
I0712 00:21:58.378049 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.378052 30806 net.cpp:163] Memory required for data: 279445504
I0712 00:21:58.378059 30806 layer_factory.hpp:77] Creating layer ctx_conv4/relu
I0712 00:21:58.378064 30806 net.cpp:98] Creating Layer ctx_conv4/relu
I0712 00:21:58.378067 30806 net.cpp:439] ctx_conv4/relu <- ctx_conv4/bn
I0712 00:21:58.378072 30806 net.cpp:400] ctx_conv4/relu -> ctx_conv4/bn (in-place)
I0712 00:21:58.378077 30806 net.cpp:148] Setting up ctx_conv4/relu
I0712 00:21:58.378082 30806 net.cpp:155] Top shape: 1 64 64 128 (524288)
I0712 00:21:58.378084 30806 net.cpp:163] Memory required for data: 281542656
I0712 00:21:58.378088 30806 layer_factory.hpp:77] Creating layer ctx_final
I0712 00:21:58.378093 30806 net.cpp:98] Creating Layer ctx_final
I0712 00:21:58.378098 30806 net.cpp:439] ctx_final <- ctx_conv4/bn
I0712 00:21:58.378101 30806 net.cpp:413] ctx_final -> ctx_final
I0712 00:21:58.378502 30806 net.cpp:148] Setting up ctx_final
I0712 00:21:58.378509 30806 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:21:58.378512 30806 net.cpp:163] Memory required for data: 281804800
I0712 00:21:58.378517 30806 layer_factory.hpp:77] Creating layer ctx_final/relu
I0712 00:21:58.378522 30806 net.cpp:98] Creating Layer ctx_final/relu
I0712 00:21:58.378526 30806 net.cpp:439] ctx_final/relu <- ctx_final
I0712 00:21:58.378530 30806 net.cpp:400] ctx_final/relu -> ctx_final (in-place)
I0712 00:21:58.378535 30806 net.cpp:148] Setting up ctx_final/relu
I0712 00:21:58.378540 30806 net.cpp:155] Top shape: 1 8 64 128 (65536)
I0712 00:21:58.378543 30806 net.cpp:163] Memory required for data: 282066944
I0712 00:21:58.378546 30806 layer_factory.hpp:77] Creating layer out_deconv_final_up2
I0712 00:21:58.378551 30806 net.cpp:98] Creating Layer out_deconv_final_up2
I0712 00:21:58.378556 30806 net.cpp:439] out_deconv_final_up2 <- ctx_final
I0712 00:21:58.378559 30806 net.cpp:413] out_deconv_final_up2 -> out_deconv_final_up2
I0712 00:21:58.378801 30806 net.cpp:148] Setting up out_deconv_final_up2
I0712 00:21:58.378808 30806 net.cpp:155] Top shape: 1 8 128 256 (262144)
I0712 00:21:58.378809 30806 net.cpp:163] Memory required for data: 283115520
I0712 00:21:58.378814 30806 layer_factory.hpp:77] Creating layer out_deconv_final_up4
I0712 00:21:58.378819 30806 net.cpp:98] Creating Layer out_deconv_final_up4
I0712 00:21:58.378823 30806 net.cpp:439] out_deconv_final_up4 <- out_deconv_final_up2
I0712 00:21:58.378829 30806 net.cpp:413] out_deconv_final_up4 -> out_deconv_final_up4
I0712 00:21:58.379057 30806 net.cpp:148] Setting up out_deconv_final_up4
I0712 00:21:58.379063 30806 net.cpp:155] Top shape: 1 8 256 512 (1048576)
I0712 00:21:58.379066 30806 net.cpp:163] Memory required for data: 287309824
I0712 00:21:58.379070 30806 layer_factory.hpp:77] Creating layer out_deconv_final_up8
I0712 00:21:58.379076 30806 net.cpp:98] Creating Layer out_deconv_final_up8
I0712 00:21:58.379079 30806 net.cpp:439] out_deconv_final_up8 <- out_deconv_final_up4
I0712 00:21:58.379084 30806 net.cpp:413] out_deconv_final_up8 -> out_deconv_final_up8
I0712 00:21:58.379320 30806 net.cpp:148] Setting up out_deconv_final_up8
I0712 00:21:58.379326 30806 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:21:58.379329 30806 net.cpp:163] Memory required for data: 304087040
I0712 00:21:58.379333 30806 layer_factory.hpp:77] Creating layer prob
I0712 00:21:58.379338 30806 net.cpp:98] Creating Layer prob
I0712 00:21:58.379343 30806 net.cpp:439] prob <- out_deconv_final_up8
I0712 00:21:58.379346 30806 net.cpp:413] prob -> prob
I0712 00:21:58.379426 30806 net.cpp:148] Setting up prob
I0712 00:21:58.379431 30806 net.cpp:155] Top shape: 1 8 512 1024 (4194304)
I0712 00:21:58.379434 30806 net.cpp:163] Memory required for data: 320864256
I0712 00:21:58.379437 30806 net.cpp:226] prob does not need backward computation.
I0712 00:21:58.379441 30806 net.cpp:226] out_deconv_final_up8 does not need backward computation.
I0712 00:21:58.379446 30806 net.cpp:226] out_deconv_final_up4 does not need backward computation.
I0712 00:21:58.379448 30806 net.cpp:226] out_deconv_final_up2 does not need backward computation.
I0712 00:21:58.379451 30806 net.cpp:226] ctx_final/relu does not need backward computation.
I0712 00:21:58.379454 30806 net.cpp:226] ctx_final does not need backward computation.
I0712 00:21:58.379458 30806 net.cpp:226] ctx_conv4/relu does not need backward computation.
I0712 00:21:58.379462 30806 net.cpp:226] ctx_conv4/bn does not need backward computation.
I0712 00:21:58.379464 30806 net.cpp:226] ctx_conv4 does not need backward computation.
I0712 00:21:58.379467 30806 net.cpp:226] ctx_conv3/relu does not need backward computation.
I0712 00:21:58.379472 30806 net.cpp:226] ctx_conv3/bn does not need backward computation.
I0712 00:21:58.379474 30806 net.cpp:226] ctx_conv3 does not need backward computation.
I0712 00:21:58.379477 30806 net.cpp:226] ctx_conv2/relu does not need backward computation.
I0712 00:21:58.379480 30806 net.cpp:226] ctx_conv2/bn does not need backward computation.
I0712 00:21:58.379484 30806 net.cpp:226] ctx_conv2 does not need backward computation.
I0712 00:21:58.379487 30806 net.cpp:226] ctx_conv1/relu does not need backward computation.
I0712 00:21:58.379490 30806 net.cpp:226] ctx_conv1/bn does not need backward computation.
I0712 00:21:58.379493 30806 net.cpp:226] ctx_conv1 does not need backward computation.
I0712 00:21:58.379497 30806 net.cpp:226] out3_out5_combined does not need backward computation.
I0712 00:21:58.379500 30806 net.cpp:226] out3a/relu does not need backward computation.
I0712 00:21:58.379503 30806 net.cpp:226] out3a/bn does not need backward computation.
I0712 00:21:58.379508 30806 net.cpp:226] out3a does not need backward computation.
I0712 00:21:58.379510 30806 net.cpp:226] out5a_up2 does not need backward computation.
I0712 00:21:58.379514 30806 net.cpp:226] out5a/relu does not need backward computation.
I0712 00:21:58.379518 30806 net.cpp:226] out5a/bn does not need backward computation.
I0712 00:21:58.379520 30806 net.cpp:226] out5a does not need backward computation.
I0712 00:21:58.379523 30806 net.cpp:226] res5a_branch2b/relu does not need backward computation.
I0712 00:21:58.379526 30806 net.cpp:226] res5a_branch2b/bn does not need backward computation.
I0712 00:21:58.379530 30806 net.cpp:226] res5a_branch2b does not need backward computation.
I0712 00:21:58.379534 30806 net.cpp:226] res5a_branch2a/relu does not need backward computation.
I0712 00:21:58.379536 30806 net.cpp:226] res5a_branch2a/bn does not need backward computation.
I0712 00:21:58.379539 30806 net.cpp:226] res5a_branch2a does not need backward computation.
I0712 00:21:58.379542 30806 net.cpp:226] pool4 does not need backward computation.
I0712 00:21:58.379546 30806 net.cpp:226] res4a_branch2b/relu does not need backward computation.
I0712 00:21:58.379549 30806 net.cpp:226] res4a_branch2b/bn does not need backward computation.
I0712 00:21:58.379552 30806 net.cpp:226] res4a_branch2b does not need backward computation.
I0712 00:21:58.379556 30806 net.cpp:226] res4a_branch2a/relu does not need backward computation.
I0712 00:21:58.379559 30806 net.cpp:226] res4a_branch2a/bn does not need backward computation.
I0712 00:21:58.379564 30806 net.cpp:226] res4a_branch2a does not need backward computation.
I0712 00:21:58.379566 30806 net.cpp:226] pool3 does not need backward computation.
I0712 00:21:58.379570 30806 net.cpp:226] res3a_branch2b/bn_res3a_branch2b/relu_0_split does not need backward computation.
I0712 00:21:58.379575 30806 net.cpp:226] res3a_branch2b/relu does not need backward computation.
I0712 00:21:58.379580 30806 net.cpp:226] res3a_branch2b/bn does not need backward computation.
I0712 00:21:58.379583 30806 net.cpp:226] res3a_branch2b does not need backward computation.
I0712 00:21:58.379587 30806 net.cpp:226] res3a_branch2a/relu does not need backward computation.
I0712 00:21:58.379590 30806 net.cpp:226] res3a_branch2a/bn does not need backward computation.
I0712 00:21:58.379595 30806 net.cpp:226] res3a_branch2a does not need backward computation.
I0712 00:21:58.379598 30806 net.cpp:226] pool2 does not need backward computation.
I0712 00:21:58.379601 30806 net.cpp:226] res2a_branch2b/relu does not need backward computation.
I0712 00:21:58.379606 30806 net.cpp:226] res2a_branch2b/bn does not need backward computation.
I0712 00:21:58.379608 30806 net.cpp:226] res2a_branch2b does not need backward computation.
I0712 00:21:58.379612 30806 net.cpp:226] res2a_branch2a/relu does not need backward computation.
I0712 00:21:58.379616 30806 net.cpp:226] res2a_branch2a/bn does not need backward computation.
I0712 00:21:58.379619 30806 net.cpp:226] res2a_branch2a does not need backward computation.
I0712 00:21:58.379623 30806 net.cpp:226] pool1 does not need backward computation.
I0712 00:21:58.379626 30806 net.cpp:226] conv1b/relu does not need backward computation.
I0712 00:21:58.379631 30806 net.cpp:226] conv1b/bn does not need backward computation.
I0712 00:21:58.379633 30806 net.cpp:226] conv1b does not need backward computation.
I0712 00:21:58.379637 30806 net.cpp:226] conv1a/relu does not need backward computation.
I0712 00:21:58.379640 30806 net.cpp:226] conv1a/bn does not need backward computation.
I0712 00:21:58.379644 30806 net.cpp:226] conv1a does not need backward computation.
I0712 00:21:58.379647 30806 net.cpp:226] data/bias does not need backward computation.
I0712 00:21:58.379652 30806 net.cpp:226] input does not need backward computation.
I0712 00:21:58.379653 30806 net.cpp:268] This network produces output prob
I0712 00:21:58.379685 30806 net.cpp:288] Network initialization done.
I0712 00:21:58.390389 30806 net.cpp:804] Ignoring source layer data
I0712 00:21:58.392343 30806 net.cpp:804] Ignoring source layer loss
Namespace(batch_size=1, blend=False, class_dict='', crop=['0'], input='./data/val-image-list.txt', label='./data/val-label-list.txt', label_dict='', model='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/deploy.prototxt', num_classes=5, num_images=500, output=None, palette='', resize=['1024', '512'], resize_back=True, search='*.png', weights='../trained/image_segmentation/cityscapes5_jsegnet21v2/sparse/cityscapes5_jsegnet21v2_iter_32000.caffemodel')
Infering list
Getting list of images...running inference for  500  images...
('frankfurt_000000_000294_leftImg8bit.png', 'frankfurt_000000_000294_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_000576_leftImg8bit.png', 'frankfurt_000000_000576_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001016_leftImg8bit.png', 'frankfurt_000000_001016_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001236_leftImg8bit.png', 'frankfurt_000000_001236_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_001751_leftImg8bit.png', 'frankfurt_000000_001751_gtFine_labelIds.png', 0)
Resizing to [1024, 512]
('frankfurt_000000_002196_leftImg8bit.png', 'frankfurt_000000_002196_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_002963_leftImg8bit.png', 'frankfurt_000000_002963_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003025_leftImg8bit.png', 'frankfurt_000000_003025_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003357_leftImg8bit.png', 'frankfurt_000000_003357_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_003920_leftImg8bit.png', 'frankfurt_000000_003920_gtFine_labelIds.png', 1)
Resizing to [1024, 512]
('frankfurt_000000_004617_leftImg8bit.png', 'frankfurt_000000_004617_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005543_leftImg8bit.png', 'frankfurt_000000_005543_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_005898_leftImg8bit.png', 'frankfurt_000000_005898_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_006589_leftImg8bit.png', 'frankfurt_000000_006589_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_007365_leftImg8bit.png', 'frankfurt_000000_007365_gtFine_labelIds.png', 2)
Resizing to [1024, 512]
('frankfurt_000000_008206_leftImg8bit.png', 'frankfurt_000000_008206_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_008451_leftImg8bit.png', 'frankfurt_000000_008451_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009291_leftImg8bit.png', 'frankfurt_000000_009291_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009561_leftImg8bit.png', 'frankfurt_000000_009561_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009688_leftImg8bit.png', 'frankfurt_000000_009688_gtFine_labelIds.png', 3)
Resizing to [1024, 512]
('frankfurt_000000_009969_leftImg8bit.png', 'frankfurt_000000_009969_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010351_leftImg8bit.png', 'frankfurt_000000_010351_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_010763_leftImg8bit.png', 'frankfurt_000000_010763_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011007_leftImg8bit.png', 'frankfurt_000000_011007_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011074_leftImg8bit.png', 'frankfurt_000000_011074_gtFine_labelIds.png', 4)
Resizing to [1024, 512]
('frankfurt_000000_011461_leftImg8bit.png', 'frankfurt_000000_011461_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_011810_leftImg8bit.png', 'frankfurt_000000_011810_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012009_leftImg8bit.png', 'frankfurt_000000_012009_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012121_leftImg8bit.png', 'frankfurt_000000_012121_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_012868_leftImg8bit.png', 'frankfurt_000000_012868_gtFine_labelIds.png', 5)
Resizing to [1024, 512]
('frankfurt_000000_013067_leftImg8bit.png', 'frankfurt_000000_013067_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013240_leftImg8bit.png', 'frankfurt_000000_013240_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013382_leftImg8bit.png', 'frankfurt_000000_013382_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_013942_leftImg8bit.png', 'frankfurt_000000_013942_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_014480_leftImg8bit.png', 'frankfurt_000000_014480_gtFine_labelIds.png', 6)
Resizing to [1024, 512]
('frankfurt_000000_015389_leftImg8bit.png', 'frankfurt_000000_015389_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_015676_leftImg8bit.png', 'frankfurt_000000_015676_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016005_leftImg8bit.png', 'frankfurt_000000_016005_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_016286_leftImg8bit.png', 'frankfurt_000000_016286_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017228_leftImg8bit.png', 'frankfurt_000000_017228_gtFine_labelIds.png', 7)
Resizing to [1024, 512]
('frankfurt_000000_017476_leftImg8bit.png', 'frankfurt_000000_017476_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_018797_leftImg8bit.png', 'frankfurt_000000_018797_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_019607_leftImg8bit.png', 'frankfurt_000000_019607_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020215_leftImg8bit.png', 'frankfurt_000000_020215_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020321_leftImg8bit.png', 'frankfurt_000000_020321_gtFine_labelIds.png', 8)
Resizing to [1024, 512]
('frankfurt_000000_020880_leftImg8bit.png', 'frankfurt_000000_020880_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021667_leftImg8bit.png', 'frankfurt_000000_021667_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_021879_leftImg8bit.png', 'frankfurt_000000_021879_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022254_leftImg8bit.png', 'frankfurt_000000_022254_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000000_022797_leftImg8bit.png', 'frankfurt_000000_022797_gtFine_labelIds.png', 9)
Resizing to [1024, 512]
('frankfurt_000001_000538_leftImg8bit.png', 'frankfurt_000001_000538_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_001464_leftImg8bit.png', 'frankfurt_000001_001464_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002512_leftImg8bit.png', 'frankfurt_000001_002512_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002646_leftImg8bit.png', 'frankfurt_000001_002646_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_002759_leftImg8bit.png', 'frankfurt_000001_002759_gtFine_labelIds.png', 10)
Resizing to [1024, 512]
('frankfurt_000001_003056_leftImg8bit.png', 'frankfurt_000001_003056_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_003588_leftImg8bit.png', 'frankfurt_000001_003588_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004327_leftImg8bit.png', 'frankfurt_000001_004327_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004736_leftImg8bit.png', 'frankfurt_000001_004736_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_004859_leftImg8bit.png', 'frankfurt_000001_004859_gtFine_labelIds.png', 11)
Resizing to [1024, 512]
('frankfurt_000001_005184_leftImg8bit.png', 'frankfurt_000001_005184_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005410_leftImg8bit.png', 'frankfurt_000001_005410_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005703_leftImg8bit.png', 'frankfurt_000001_005703_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_005898_leftImg8bit.png', 'frankfurt_000001_005898_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007285_leftImg8bit.png', 'frankfurt_000001_007285_gtFine_labelIds.png', 12)
Resizing to [1024, 512]
('frankfurt_000001_007407_leftImg8bit.png', 'frankfurt_000001_007407_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007622_leftImg8bit.png', 'frankfurt_000001_007622_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007857_leftImg8bit.png', 'frankfurt_000001_007857_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_007973_leftImg8bit.png', 'frankfurt_000001_007973_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008200_leftImg8bit.png', 'frankfurt_000001_008200_gtFine_labelIds.png', 13)
Resizing to [1024, 512]
('frankfurt_000001_008688_leftImg8bit.png', 'frankfurt_000001_008688_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009058_leftImg8bit.png', 'frankfurt_000001_009058_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009504_leftImg8bit.png', 'frankfurt_000001_009504_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_009854_leftImg8bit.png', 'frankfurt_000001_009854_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010156_leftImg8bit.png', 'frankfurt_000001_010156_gtFine_labelIds.png', 14)
Resizing to [1024, 512]
('frankfurt_000001_010444_leftImg8bit.png', 'frankfurt_000001_010444_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010600_leftImg8bit.png', 'frankfurt_000001_010600_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_010830_leftImg8bit.png', 'frankfurt_000001_010830_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011162_leftImg8bit.png', 'frankfurt_000001_011162_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011715_leftImg8bit.png', 'frankfurt_000001_011715_gtFine_labelIds.png', 15)
Resizing to [1024, 512]
('frankfurt_000001_011835_leftImg8bit.png', 'frankfurt_000001_011835_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012038_leftImg8bit.png', 'frankfurt_000001_012038_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012519_leftImg8bit.png', 'frankfurt_000001_012519_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012699_leftImg8bit.png', 'frankfurt_000001_012699_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012738_leftImg8bit.png', 'frankfurt_000001_012738_gtFine_labelIds.png', 16)
Resizing to [1024, 512]
('frankfurt_000001_012870_leftImg8bit.png', 'frankfurt_000001_012870_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013016_leftImg8bit.png', 'frankfurt_000001_013016_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013496_leftImg8bit.png', 'frankfurt_000001_013496_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_013710_leftImg8bit.png', 'frankfurt_000001_013710_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014221_leftImg8bit.png', 'frankfurt_000001_014221_gtFine_labelIds.png', 17)
Resizing to [1024, 512]
('frankfurt_000001_014406_leftImg8bit.png', 'frankfurt_000001_014406_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014565_leftImg8bit.png', 'frankfurt_000001_014565_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_014741_leftImg8bit.png', 'frankfurt_000001_014741_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015091_leftImg8bit.png', 'frankfurt_000001_015091_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015328_leftImg8bit.png', 'frankfurt_000001_015328_gtFine_labelIds.png', 18)
Resizing to [1024, 512]
('frankfurt_000001_015768_leftImg8bit.png', 'frankfurt_000001_015768_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016029_leftImg8bit.png', 'frankfurt_000001_016029_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016273_leftImg8bit.png', 'frankfurt_000001_016273_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_016462_leftImg8bit.png', 'frankfurt_000001_016462_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017101_leftImg8bit.png', 'frankfurt_000001_017101_gtFine_labelIds.png', 19)
Resizing to [1024, 512]
('frankfurt_000001_017459_leftImg8bit.png', 'frankfurt_000001_017459_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_017842_leftImg8bit.png', 'frankfurt_000001_017842_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_018113_leftImg8bit.png', 'frankfurt_000001_018113_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019698_leftImg8bit.png', 'frankfurt_000001_019698_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019854_leftImg8bit.png', 'frankfurt_000001_019854_gtFine_labelIds.png', 20)
Resizing to [1024, 512]
('frankfurt_000001_019969_leftImg8bit.png', 'frankfurt_000001_019969_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020046_leftImg8bit.png', 'frankfurt_000001_020046_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020287_leftImg8bit.png', 'frankfurt_000001_020287_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_020693_leftImg8bit.png', 'frankfurt_000001_020693_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021406_leftImg8bit.png', 'frankfurt_000001_021406_gtFine_labelIds.png', 21)
Resizing to [1024, 512]
('frankfurt_000001_021825_leftImg8bit.png', 'frankfurt_000001_021825_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023235_leftImg8bit.png', 'frankfurt_000001_023235_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023369_leftImg8bit.png', 'frankfurt_000001_023369_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_023769_leftImg8bit.png', 'frankfurt_000001_023769_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_024927_leftImg8bit.png', 'frankfurt_000001_024927_gtFine_labelIds.png', 22)
Resizing to [1024, 512]
('frankfurt_000001_025512_leftImg8bit.png', 'frankfurt_000001_025512_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025713_leftImg8bit.png', 'frankfurt_000001_025713_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_025921_leftImg8bit.png', 'frankfurt_000001_025921_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_027325_leftImg8bit.png', 'frankfurt_000001_027325_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028232_leftImg8bit.png', 'frankfurt_000001_028232_gtFine_labelIds.png', 23)
Resizing to [1024, 512]
('frankfurt_000001_028335_leftImg8bit.png', 'frankfurt_000001_028335_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028590_leftImg8bit.png', 'frankfurt_000001_028590_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_028854_leftImg8bit.png', 'frankfurt_000001_028854_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029086_leftImg8bit.png', 'frankfurt_000001_029086_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029236_leftImg8bit.png', 'frankfurt_000001_029236_gtFine_labelIds.png', 24)
Resizing to [1024, 512]
('frankfurt_000001_029600_leftImg8bit.png', 'frankfurt_000001_029600_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030067_leftImg8bit.png', 'frankfurt_000001_030067_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030310_leftImg8bit.png', 'frankfurt_000001_030310_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_030669_leftImg8bit.png', 'frankfurt_000001_030669_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031266_leftImg8bit.png', 'frankfurt_000001_031266_gtFine_labelIds.png', 25)
Resizing to [1024, 512]
('frankfurt_000001_031416_leftImg8bit.png', 'frankfurt_000001_031416_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032018_leftImg8bit.png', 'frankfurt_000001_032018_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032556_leftImg8bit.png', 'frankfurt_000001_032556_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032711_leftImg8bit.png', 'frankfurt_000001_032711_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_032942_leftImg8bit.png', 'frankfurt_000001_032942_gtFine_labelIds.png', 26)
Resizing to [1024, 512]
('frankfurt_000001_033655_leftImg8bit.png', 'frankfurt_000001_033655_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034047_leftImg8bit.png', 'frankfurt_000001_034047_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_034816_leftImg8bit.png', 'frankfurt_000001_034816_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035144_leftImg8bit.png', 'frankfurt_000001_035144_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_035864_leftImg8bit.png', 'frankfurt_000001_035864_gtFine_labelIds.png', 27)
Resizing to [1024, 512]
('frankfurt_000001_037705_leftImg8bit.png', 'frankfurt_000001_037705_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038245_leftImg8bit.png', 'frankfurt_000001_038245_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038418_leftImg8bit.png', 'frankfurt_000001_038418_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038645_leftImg8bit.png', 'frankfurt_000001_038645_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_038844_leftImg8bit.png', 'frankfurt_000001_038844_gtFine_labelIds.png', 28)
Resizing to [1024, 512]
('frankfurt_000001_039895_leftImg8bit.png', 'frankfurt_000001_039895_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040575_leftImg8bit.png', 'frankfurt_000001_040575_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_040732_leftImg8bit.png', 'frankfurt_000001_040732_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041074_leftImg8bit.png', 'frankfurt_000001_041074_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041354_leftImg8bit.png', 'frankfurt_000001_041354_gtFine_labelIds.png', 29)
Resizing to [1024, 512]
('frankfurt_000001_041517_leftImg8bit.png', 'frankfurt_000001_041517_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_041664_leftImg8bit.png', 'frankfurt_000001_041664_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042098_leftImg8bit.png', 'frankfurt_000001_042098_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042384_leftImg8bit.png', 'frankfurt_000001_042384_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_042733_leftImg8bit.png', 'frankfurt_000001_042733_gtFine_labelIds.png', 30)
Resizing to [1024, 512]
('frankfurt_000001_043395_leftImg8bit.png', 'frankfurt_000001_043395_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_043564_leftImg8bit.png', 'frankfurt_000001_043564_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044227_leftImg8bit.png', 'frankfurt_000001_044227_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044413_leftImg8bit.png', 'frankfurt_000001_044413_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044525_leftImg8bit.png', 'frankfurt_000001_044525_gtFine_labelIds.png', 31)
Resizing to [1024, 512]
('frankfurt_000001_044658_leftImg8bit.png', 'frankfurt_000001_044658_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_044787_leftImg8bit.png', 'frankfurt_000001_044787_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046126_leftImg8bit.png', 'frankfurt_000001_046126_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046272_leftImg8bit.png', 'frankfurt_000001_046272_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046504_leftImg8bit.png', 'frankfurt_000001_046504_gtFine_labelIds.png', 32)
Resizing to [1024, 512]
('frankfurt_000001_046779_leftImg8bit.png', 'frankfurt_000001_046779_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047178_leftImg8bit.png', 'frankfurt_000001_047178_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_047552_leftImg8bit.png', 'frankfurt_000001_047552_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048196_leftImg8bit.png', 'frankfurt_000001_048196_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048355_leftImg8bit.png', 'frankfurt_000001_048355_gtFine_labelIds.png', 33)
Resizing to [1024, 512]
('frankfurt_000001_048654_leftImg8bit.png', 'frankfurt_000001_048654_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049078_leftImg8bit.png', 'frankfurt_000001_049078_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049209_leftImg8bit.png', 'frankfurt_000001_049209_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049298_leftImg8bit.png', 'frankfurt_000001_049298_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049698_leftImg8bit.png', 'frankfurt_000001_049698_gtFine_labelIds.png', 34)
Resizing to [1024, 512]
('frankfurt_000001_049770_leftImg8bit.png', 'frankfurt_000001_049770_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050149_leftImg8bit.png', 'frankfurt_000001_050149_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_050686_leftImg8bit.png', 'frankfurt_000001_050686_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051516_leftImg8bit.png', 'frankfurt_000001_051516_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051737_leftImg8bit.png', 'frankfurt_000001_051737_gtFine_labelIds.png', 35)
Resizing to [1024, 512]
('frankfurt_000001_051807_leftImg8bit.png', 'frankfurt_000001_051807_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052120_leftImg8bit.png', 'frankfurt_000001_052120_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_052594_leftImg8bit.png', 'frankfurt_000001_052594_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_053102_leftImg8bit.png', 'frankfurt_000001_053102_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054077_leftImg8bit.png', 'frankfurt_000001_054077_gtFine_labelIds.png', 36)
Resizing to [1024, 512]
('frankfurt_000001_054219_leftImg8bit.png', 'frankfurt_000001_054219_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054415_leftImg8bit.png', 'frankfurt_000001_054415_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054640_leftImg8bit.png', 'frankfurt_000001_054640_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_054884_leftImg8bit.png', 'frankfurt_000001_054884_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055062_leftImg8bit.png', 'frankfurt_000001_055062_gtFine_labelIds.png', 37)
Resizing to [1024, 512]
('frankfurt_000001_055172_leftImg8bit.png', 'frankfurt_000001_055172_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055306_leftImg8bit.png', 'frankfurt_000001_055306_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055387_leftImg8bit.png', 'frankfurt_000001_055387_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055538_leftImg8bit.png', 'frankfurt_000001_055538_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055603_leftImg8bit.png', 'frankfurt_000001_055603_gtFine_labelIds.png', 38)
Resizing to [1024, 512]
('frankfurt_000001_055709_leftImg8bit.png', 'frankfurt_000001_055709_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_056580_leftImg8bit.png', 'frankfurt_000001_056580_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057181_leftImg8bit.png', 'frankfurt_000001_057181_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057478_leftImg8bit.png', 'frankfurt_000001_057478_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_057954_leftImg8bit.png', 'frankfurt_000001_057954_gtFine_labelIds.png', 39)
Resizing to [1024, 512]
('frankfurt_000001_058057_leftImg8bit.png', 'frankfurt_000001_058057_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058176_leftImg8bit.png', 'frankfurt_000001_058176_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058504_leftImg8bit.png', 'frankfurt_000001_058504_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_058914_leftImg8bit.png', 'frankfurt_000001_058914_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059119_leftImg8bit.png', 'frankfurt_000001_059119_gtFine_labelIds.png', 40)
Resizing to [1024, 512]
('frankfurt_000001_059642_leftImg8bit.png', 'frankfurt_000001_059642_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_059789_leftImg8bit.png', 'frankfurt_000001_059789_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060135_leftImg8bit.png', 'frankfurt_000001_060135_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060422_leftImg8bit.png', 'frankfurt_000001_060422_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060545_leftImg8bit.png', 'frankfurt_000001_060545_gtFine_labelIds.png', 41)
Resizing to [1024, 512]
('frankfurt_000001_060906_leftImg8bit.png', 'frankfurt_000001_060906_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061682_leftImg8bit.png', 'frankfurt_000001_061682_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_061763_leftImg8bit.png', 'frankfurt_000001_061763_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062016_leftImg8bit.png', 'frankfurt_000001_062016_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062250_leftImg8bit.png', 'frankfurt_000001_062250_gtFine_labelIds.png', 42)
Resizing to [1024, 512]
('frankfurt_000001_062396_leftImg8bit.png', 'frankfurt_000001_062396_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062509_leftImg8bit.png', 'frankfurt_000001_062509_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062653_leftImg8bit.png', 'frankfurt_000001_062653_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_062793_leftImg8bit.png', 'frankfurt_000001_062793_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_063045_leftImg8bit.png', 'frankfurt_000001_063045_gtFine_labelIds.png', 43)
Resizing to [1024, 512]
('frankfurt_000001_064130_leftImg8bit.png', 'frankfurt_000001_064130_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064305_leftImg8bit.png', 'frankfurt_000001_064305_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064651_leftImg8bit.png', 'frankfurt_000001_064651_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064798_leftImg8bit.png', 'frankfurt_000001_064798_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_064925_leftImg8bit.png', 'frankfurt_000001_064925_gtFine_labelIds.png', 44)
Resizing to [1024, 512]
('frankfurt_000001_065160_leftImg8bit.png', 'frankfurt_000001_065160_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065617_leftImg8bit.png', 'frankfurt_000001_065617_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_065850_leftImg8bit.png', 'frankfurt_000001_065850_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066092_leftImg8bit.png', 'frankfurt_000001_066092_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066438_leftImg8bit.png', 'frankfurt_000001_066438_gtFine_labelIds.png', 45)
Resizing to [1024, 512]
('frankfurt_000001_066574_leftImg8bit.png', 'frankfurt_000001_066574_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_066832_leftImg8bit.png', 'frankfurt_000001_066832_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067092_leftImg8bit.png', 'frankfurt_000001_067092_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067178_leftImg8bit.png', 'frankfurt_000001_067178_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067295_leftImg8bit.png', 'frankfurt_000001_067295_gtFine_labelIds.png', 46)
Resizing to [1024, 512]
('frankfurt_000001_067474_leftImg8bit.png', 'frankfurt_000001_067474_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_067735_leftImg8bit.png', 'frankfurt_000001_067735_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068063_leftImg8bit.png', 'frankfurt_000001_068063_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068208_leftImg8bit.png', 'frankfurt_000001_068208_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068682_leftImg8bit.png', 'frankfurt_000001_068682_gtFine_labelIds.png', 47)
Resizing to [1024, 512]
('frankfurt_000001_068772_leftImg8bit.png', 'frankfurt_000001_068772_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_069633_leftImg8bit.png', 'frankfurt_000001_069633_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_070099_leftImg8bit.png', 'frankfurt_000001_070099_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071288_leftImg8bit.png', 'frankfurt_000001_071288_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_071781_leftImg8bit.png', 'frankfurt_000001_071781_gtFine_labelIds.png', 48)
Resizing to [1024, 512]
('frankfurt_000001_072155_leftImg8bit.png', 'frankfurt_000001_072155_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_072295_leftImg8bit.png', 'frankfurt_000001_072295_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073088_leftImg8bit.png', 'frankfurt_000001_073088_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073243_leftImg8bit.png', 'frankfurt_000001_073243_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073464_leftImg8bit.png', 'frankfurt_000001_073464_gtFine_labelIds.png', 49)
Resizing to [1024, 512]
('frankfurt_000001_073911_leftImg8bit.png', 'frankfurt_000001_073911_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075296_leftImg8bit.png', 'frankfurt_000001_075296_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_075984_leftImg8bit.png', 'frankfurt_000001_075984_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_076502_leftImg8bit.png', 'frankfurt_000001_076502_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077092_leftImg8bit.png', 'frankfurt_000001_077092_gtFine_labelIds.png', 50)
Resizing to [1024, 512]
('frankfurt_000001_077233_leftImg8bit.png', 'frankfurt_000001_077233_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_077434_leftImg8bit.png', 'frankfurt_000001_077434_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_078803_leftImg8bit.png', 'frankfurt_000001_078803_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_079206_leftImg8bit.png', 'frankfurt_000001_079206_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080091_leftImg8bit.png', 'frankfurt_000001_080091_gtFine_labelIds.png', 51)
Resizing to [1024, 512]
('frankfurt_000001_080391_leftImg8bit.png', 'frankfurt_000001_080391_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_080830_leftImg8bit.png', 'frankfurt_000001_080830_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082087_leftImg8bit.png', 'frankfurt_000001_082087_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_082466_leftImg8bit.png', 'frankfurt_000001_082466_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083029_leftImg8bit.png', 'frankfurt_000001_083029_gtFine_labelIds.png', 52)
Resizing to [1024, 512]
('frankfurt_000001_083199_leftImg8bit.png', 'frankfurt_000001_083199_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('frankfurt_000001_083852_leftImg8bit.png', 'frankfurt_000001_083852_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000000_000019_leftImg8bit.png', 'lindau_000000_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000001_000019_leftImg8bit.png', 'lindau_000001_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000002_000019_leftImg8bit.png', 'lindau_000002_000019_gtFine_labelIds.png', 53)
Resizing to [1024, 512]
('lindau_000003_000019_leftImg8bit.png', 'lindau_000003_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000004_000019_leftImg8bit.png', 'lindau_000004_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000005_000019_leftImg8bit.png', 'lindau_000005_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000006_000019_leftImg8bit.png', 'lindau_000006_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000007_000019_leftImg8bit.png', 'lindau_000007_000019_gtFine_labelIds.png', 54)
Resizing to [1024, 512]
('lindau_000008_000019_leftImg8bit.png', 'lindau_000008_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000009_000019_leftImg8bit.png', 'lindau_000009_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000010_000019_leftImg8bit.png', 'lindau_000010_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000011_000019_leftImg8bit.png', 'lindau_000011_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000012_000019_leftImg8bit.png', 'lindau_000012_000019_gtFine_labelIds.png', 55)
Resizing to [1024, 512]
('lindau_000013_000019_leftImg8bit.png', 'lindau_000013_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000014_000019_leftImg8bit.png', 'lindau_000014_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000015_000019_leftImg8bit.png', 'lindau_000015_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000016_000019_leftImg8bit.png', 'lindau_000016_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000017_000019_leftImg8bit.png', 'lindau_000017_000019_gtFine_labelIds.png', 56)
Resizing to [1024, 512]
('lindau_000018_000019_leftImg8bit.png', 'lindau_000018_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000019_000019_leftImg8bit.png', 'lindau_000019_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000020_000019_leftImg8bit.png', 'lindau_000020_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000021_000019_leftImg8bit.png', 'lindau_000021_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000022_000019_leftImg8bit.png', 'lindau_000022_000019_gtFine_labelIds.png', 57)
Resizing to [1024, 512]
('lindau_000023_000019_leftImg8bit.png', 'lindau_000023_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000024_000019_leftImg8bit.png', 'lindau_000024_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000025_000019_leftImg8bit.png', 'lindau_000025_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000026_000019_leftImg8bit.png', 'lindau_000026_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000027_000019_leftImg8bit.png', 'lindau_000027_000019_gtFine_labelIds.png', 58)
Resizing to [1024, 512]
('lindau_000028_000019_leftImg8bit.png', 'lindau_000028_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000029_000019_leftImg8bit.png', 'lindau_000029_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000030_000019_leftImg8bit.png', 'lindau_000030_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000031_000019_leftImg8bit.png', 'lindau_000031_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000032_000019_leftImg8bit.png', 'lindau_000032_000019_gtFine_labelIds.png', 59)
Resizing to [1024, 512]
('lindau_000033_000019_leftImg8bit.png', 'lindau_000033_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000034_000019_leftImg8bit.png', 'lindau_000034_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000035_000019_leftImg8bit.png', 'lindau_000035_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000036_000019_leftImg8bit.png', 'lindau_000036_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000037_000019_leftImg8bit.png', 'lindau_000037_000019_gtFine_labelIds.png', 60)
Resizing to [1024, 512]
('lindau_000038_000019_leftImg8bit.png', 'lindau_000038_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000039_000019_leftImg8bit.png', 'lindau_000039_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000040_000019_leftImg8bit.png', 'lindau_000040_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000041_000019_leftImg8bit.png', 'lindau_000041_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000042_000019_leftImg8bit.png', 'lindau_000042_000019_gtFine_labelIds.png', 61)
Resizing to [1024, 512]
('lindau_000043_000019_leftImg8bit.png', 'lindau_000043_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000044_000019_leftImg8bit.png', 'lindau_000044_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000045_000019_leftImg8bit.png', 'lindau_000045_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000046_000019_leftImg8bit.png', 'lindau_000046_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000047_000019_leftImg8bit.png', 'lindau_000047_000019_gtFine_labelIds.png', 62)
Resizing to [1024, 512]
('lindau_000048_000019_leftImg8bit.png', 'lindau_000048_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000049_000019_leftImg8bit.png', 'lindau_000049_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000050_000019_leftImg8bit.png', 'lindau_000050_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000051_000019_leftImg8bit.png', 'lindau_000051_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000052_000019_leftImg8bit.png', 'lindau_000052_000019_gtFine_labelIds.png', 63)
Resizing to [1024, 512]
('lindau_000053_000019_leftImg8bit.png', 'lindau_000053_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000054_000019_leftImg8bit.png', 'lindau_000054_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000055_000019_leftImg8bit.png', 'lindau_000055_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000056_000019_leftImg8bit.png', 'lindau_000056_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000057_000019_leftImg8bit.png', 'lindau_000057_000019_gtFine_labelIds.png', 64)
Resizing to [1024, 512]
('lindau_000058_000019_leftImg8bit.png', 'lindau_000058_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000000_000019_leftImg8bit.png', 'munster_000000_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000001_000019_leftImg8bit.png', 'munster_000001_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000002_000019_leftImg8bit.png', 'munster_000002_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000003_000019_leftImg8bit.png', 'munster_000003_000019_gtFine_labelIds.png', 65)
Resizing to [1024, 512]
('munster_000004_000019_leftImg8bit.png', 'munster_000004_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000005_000019_leftImg8bit.png', 'munster_000005_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000006_000019_leftImg8bit.png', 'munster_000006_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000007_000019_leftImg8bit.png', 'munster_000007_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000008_000019_leftImg8bit.png', 'munster_000008_000019_gtFine_labelIds.png', 66)
Resizing to [1024, 512]
('munster_000009_000019_leftImg8bit.png', 'munster_000009_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000010_000019_leftImg8bit.png', 'munster_000010_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000011_000019_leftImg8bit.png', 'munster_000011_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000012_000019_leftImg8bit.png', 'munster_000012_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000013_000019_leftImg8bit.png', 'munster_000013_000019_gtFine_labelIds.png', 67)
Resizing to [1024, 512]
('munster_000014_000019_leftImg8bit.png', 'munster_000014_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000015_000019_leftImg8bit.png', 'munster_000015_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000016_000019_leftImg8bit.png', 'munster_000016_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000017_000019_leftImg8bit.png', 'munster_000017_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000018_000019_leftImg8bit.png', 'munster_000018_000019_gtFine_labelIds.png', 68)
Resizing to [1024, 512]
('munster_000019_000019_leftImg8bit.png', 'munster_000019_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000020_000019_leftImg8bit.png', 'munster_000020_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000021_000019_leftImg8bit.png', 'munster_000021_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000022_000019_leftImg8bit.png', 'munster_000022_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000023_000019_leftImg8bit.png', 'munster_000023_000019_gtFine_labelIds.png', 69)
Resizing to [1024, 512]
('munster_000024_000019_leftImg8bit.png', 'munster_000024_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000025_000019_leftImg8bit.png', 'munster_000025_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000026_000019_leftImg8bit.png', 'munster_000026_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000027_000019_leftImg8bit.png', 'munster_000027_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000028_000019_leftImg8bit.png', 'munster_000028_000019_gtFine_labelIds.png', 70)
Resizing to [1024, 512]
('munster_000029_000019_leftImg8bit.png', 'munster_000029_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000030_000019_leftImg8bit.png', 'munster_000030_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000031_000019_leftImg8bit.png', 'munster_000031_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000032_000019_leftImg8bit.png', 'munster_000032_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000033_000019_leftImg8bit.png', 'munster_000033_000019_gtFine_labelIds.png', 71)
Resizing to [1024, 512]
('munster_000034_000019_leftImg8bit.png', 'munster_000034_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000035_000019_leftImg8bit.png', 'munster_000035_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000036_000019_leftImg8bit.png', 'munster_000036_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000037_000019_leftImg8bit.png', 'munster_000037_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000038_000019_leftImg8bit.png', 'munster_000038_000019_gtFine_labelIds.png', 72)
Resizing to [1024, 512]
('munster_000039_000019_leftImg8bit.png', 'munster_000039_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000040_000019_leftImg8bit.png', 'munster_000040_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000041_000019_leftImg8bit.png', 'munster_000041_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000042_000019_leftImg8bit.png', 'munster_000042_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000043_000019_leftImg8bit.png', 'munster_000043_000019_gtFine_labelIds.png', 73)
Resizing to [1024, 512]
('munster_000044_000019_leftImg8bit.png', 'munster_000044_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000045_000019_leftImg8bit.png', 'munster_000045_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000046_000019_leftImg8bit.png', 'munster_000046_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000047_000019_leftImg8bit.png', 'munster_000047_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000048_000019_leftImg8bit.png', 'munster_000048_000019_gtFine_labelIds.png', 74)
Resizing to [1024, 512]
('munster_000049_000019_leftImg8bit.png', 'munster_000049_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000050_000019_leftImg8bit.png', 'munster_000050_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000051_000019_leftImg8bit.png', 'munster_000051_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000052_000019_leftImg8bit.png', 'munster_000052_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000053_000019_leftImg8bit.png', 'munster_000053_000019_gtFine_labelIds.png', 75)
Resizing to [1024, 512]
('munster_000054_000019_leftImg8bit.png', 'munster_000054_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000055_000019_leftImg8bit.png', 'munster_000055_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000056_000019_leftImg8bit.png', 'munster_000056_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000057_000019_leftImg8bit.png', 'munster_000057_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000058_000019_leftImg8bit.png', 'munster_000058_000019_gtFine_labelIds.png', 76)
Resizing to [1024, 512]
('munster_000059_000019_leftImg8bit.png', 'munster_000059_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000060_000019_leftImg8bit.png', 'munster_000060_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000061_000019_leftImg8bit.png', 'munster_000061_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000062_000019_leftImg8bit.png', 'munster_000062_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000063_000019_leftImg8bit.png', 'munster_000063_000019_gtFine_labelIds.png', 77)
Resizing to [1024, 512]
('munster_000064_000019_leftImg8bit.png', 'munster_000064_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000065_000019_leftImg8bit.png', 'munster_000065_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000066_000019_leftImg8bit.png', 'munster_000066_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000067_000019_leftImg8bit.png', 'munster_000067_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000068_000019_leftImg8bit.png', 'munster_000068_000019_gtFine_labelIds.png', 78)
Resizing to [1024, 512]
('munster_000069_000019_leftImg8bit.png', 'munster_000069_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000070_000019_leftImg8bit.png', 'munster_000070_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000071_000019_leftImg8bit.png', 'munster_000071_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000072_000019_leftImg8bit.png', 'munster_000072_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000073_000019_leftImg8bit.png', 'munster_000073_000019_gtFine_labelIds.png', 79)
Resizing to [1024, 512]
('munster_000074_000019_leftImg8bit.png', 'munster_000074_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000075_000019_leftImg8bit.png', 'munster_000075_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000076_000019_leftImg8bit.png', 'munster_000076_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000077_000019_leftImg8bit.png', 'munster_000077_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000078_000019_leftImg8bit.png', 'munster_000078_000019_gtFine_labelIds.png', 80)
Resizing to [1024, 512]
('munster_000079_000019_leftImg8bit.png', 'munster_000079_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000080_000019_leftImg8bit.png', 'munster_000080_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000081_000019_leftImg8bit.png', 'munster_000081_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000082_000019_leftImg8bit.png', 'munster_000082_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000083_000019_leftImg8bit.png', 'munster_000083_000019_gtFine_labelIds.png', 81)
Resizing to [1024, 512]
('munster_000084_000019_leftImg8bit.png', 'munster_000084_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000085_000019_leftImg8bit.png', 'munster_000085_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000086_000019_leftImg8bit.png', 'munster_000086_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000087_000019_leftImg8bit.png', 'munster_000087_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000088_000019_leftImg8bit.png', 'munster_000088_000019_gtFine_labelIds.png', 82)
Resizing to [1024, 512]
('munster_000089_000019_leftImg8bit.png', 'munster_000089_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000090_000019_leftImg8bit.png', 'munster_000090_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000091_000019_leftImg8bit.png', 'munster_000091_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000092_000019_leftImg8bit.png', 'munster_000092_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000093_000019_leftImg8bit.png', 'munster_000093_000019_gtFine_labelIds.png', 83)
Resizing to [1024, 512]
('munster_000094_000019_leftImg8bit.png', 'munster_000094_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000095_000019_leftImg8bit.png', 'munster_000095_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000096_000019_leftImg8bit.png', 'munster_000096_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000097_000019_leftImg8bit.png', 'munster_000097_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000098_000019_leftImg8bit.png', 'munster_000098_000019_gtFine_labelIds.png', 84)
Resizing to [1024, 512]
('munster_000099_000019_leftImg8bit.png', 'munster_000099_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000100_000019_leftImg8bit.png', 'munster_000100_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000101_000019_leftImg8bit.png', 'munster_000101_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000102_000019_leftImg8bit.png', 'munster_000102_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000103_000019_leftImg8bit.png', 'munster_000103_000019_gtFine_labelIds.png', 85)
Resizing to [1024, 512]
('munster_000104_000019_leftImg8bit.png', 'munster_000104_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000105_000019_leftImg8bit.png', 'munster_000105_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000106_000019_leftImg8bit.png', 'munster_000106_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000107_000019_leftImg8bit.png', 'munster_000107_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000108_000019_leftImg8bit.png', 'munster_000108_000019_gtFine_labelIds.png', 86)
Resizing to [1024, 512]
('munster_000109_000019_leftImg8bit.png', 'munster_000109_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000110_000019_leftImg8bit.png', 'munster_000110_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000111_000019_leftImg8bit.png', 'munster_000111_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000112_000019_leftImg8bit.png', 'munster_000112_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000113_000019_leftImg8bit.png', 'munster_000113_000019_gtFine_labelIds.png', 87)
Resizing to [1024, 512]
('munster_000114_000019_leftImg8bit.png', 'munster_000114_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000115_000019_leftImg8bit.png', 'munster_000115_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000116_000019_leftImg8bit.png', 'munster_000116_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000117_000019_leftImg8bit.png', 'munster_000117_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000118_000019_leftImg8bit.png', 'munster_000118_000019_gtFine_labelIds.png', 88)
Resizing to [1024, 512]
('munster_000119_000019_leftImg8bit.png', 'munster_000119_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000120_000019_leftImg8bit.png', 'munster_000120_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000121_000019_leftImg8bit.png', 'munster_000121_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000122_000019_leftImg8bit.png', 'munster_000122_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000123_000019_leftImg8bit.png', 'munster_000123_000019_gtFine_labelIds.png', 89)
Resizing to [1024, 512]
('munster_000124_000019_leftImg8bit.png', 'munster_000124_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000125_000019_leftImg8bit.png', 'munster_000125_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000126_000019_leftImg8bit.png', 'munster_000126_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000127_000019_leftImg8bit.png', 'munster_000127_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000128_000019_leftImg8bit.png', 'munster_000128_000019_gtFine_labelIds.png', 90)
Resizing to [1024, 512]
('munster_000129_000019_leftImg8bit.png', 'munster_000129_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000130_000019_leftImg8bit.png', 'munster_000130_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000131_000019_leftImg8bit.png', 'munster_000131_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000132_000019_leftImg8bit.png', 'munster_000132_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000133_000019_leftImg8bit.png', 'munster_000133_000019_gtFine_labelIds.png', 91)
Resizing to [1024, 512]
('munster_000134_000019_leftImg8bit.png', 'munster_000134_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000135_000019_leftImg8bit.png', 'munster_000135_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000136_000019_leftImg8bit.png', 'munster_000136_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000137_000019_leftImg8bit.png', 'munster_000137_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000138_000019_leftImg8bit.png', 'munster_000138_000019_gtFine_labelIds.png', 92)
Resizing to [1024, 512]
('munster_000139_000019_leftImg8bit.png', 'munster_000139_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000140_000019_leftImg8bit.png', 'munster_000140_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000141_000019_leftImg8bit.png', 'munster_000141_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000142_000019_leftImg8bit.png', 'munster_000142_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000143_000019_leftImg8bit.png', 'munster_000143_000019_gtFine_labelIds.png', 93)
Resizing to [1024, 512]
('munster_000144_000019_leftImg8bit.png', 'munster_000144_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000145_000019_leftImg8bit.png', 'munster_000145_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000146_000019_leftImg8bit.png', 'munster_000146_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000147_000019_leftImg8bit.png', 'munster_000147_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000148_000019_leftImg8bit.png', 'munster_000148_000019_gtFine_labelIds.png', 94)
Resizing to [1024, 512]
('munster_000149_000019_leftImg8bit.png', 'munster_000149_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000150_000019_leftImg8bit.png', 'munster_000150_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000151_000019_leftImg8bit.png', 'munster_000151_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000152_000019_leftImg8bit.png', 'munster_000152_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000153_000019_leftImg8bit.png', 'munster_000153_000019_gtFine_labelIds.png', 95)
Resizing to [1024, 512]
('munster_000154_000019_leftImg8bit.png', 'munster_000154_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000155_000019_leftImg8bit.png', 'munster_000155_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000156_000019_leftImg8bit.png', 'munster_000156_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000157_000019_leftImg8bit.png', 'munster_000157_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000158_000019_leftImg8bit.png', 'munster_000158_000019_gtFine_labelIds.png', 96)
Resizing to [1024, 512]
('munster_000159_000019_leftImg8bit.png', 'munster_000159_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000160_000019_leftImg8bit.png', 'munster_000160_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000161_000019_leftImg8bit.png', 'munster_000161_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000162_000019_leftImg8bit.png', 'munster_000162_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000163_000019_leftImg8bit.png', 'munster_000163_000019_gtFine_labelIds.png', 97)
Resizing to [1024, 512]
('munster_000164_000019_leftImg8bit.png', 'munster_000164_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000165_000019_leftImg8bit.png', 'munster_000165_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000166_000019_leftImg8bit.png', 'munster_000166_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000167_000019_leftImg8bit.png', 'munster_000167_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000168_000019_leftImg8bit.png', 'munster_000168_000019_gtFine_labelIds.png', 98)
Resizing to [1024, 512]
('munster_000169_000019_leftImg8bit.png', 'munster_000169_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000170_000019_leftImg8bit.png', 'munster_000170_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000171_000019_leftImg8bit.png', 'munster_000171_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000172_000019_leftImg8bit.png', 'munster_000172_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
('munster_000173_000019_leftImg8bit.png', 'munster_000173_000019_gtFine_labelIds.png', 99)
Resizing to [1024, 512]
pixel_accuracy=0.938002792576, mean_iou=0.758079967951, iou=[ 0.9014765   0.88076833  0.67284714  0.46095817  0.87434969]
sparse eval.
